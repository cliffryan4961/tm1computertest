<?xml version="1.0" encoding="utf-8"?>
<!-- Presentation file, saved 4/9/2012 5:20:35 PM by tesda using CourseLab 090219 -->
<module>
<runtime showsplash="yes" seqslides="yes" preloadimages="yes" normalize="no"/>
<groups>
</groups>
<slides>
<slide id="SLIDE_5" sid="4" masterid="SLIDE_MASTER" name="Instructions" indent="0" onkeydown="SLIDE_5_2">
<oncomplete>
<NAVIGATION targets="all" action="off">
</NAVIGATION>
</oncomplete>
<frames>
<frame id="FRAME_6" dur="0" infinite="0">
<object id="OBJ_15" x="754" y="526" w="152" h="110" z="30" display="frame" begin="0" type="001_textbox">
<data>
<![CDATA[<div style="width:152px;height:110px;"><div id="OBJ_15_L0" style="position:absolute; width:90%;&#xA;		&#xA;				background-color: #FEFFFF; layer-background-color: #FEFFFF; border-width: 3px; border-style: double; border-color: #CCCCCC; left: 15px; top: 15px; &#xA;			&#xA;			filter:alpha(opacity=40); -moz-opacity: 0.40; opacity: 0.40;&#xA;		"  ><table width="100%" cellspacing="0" border="0" id="OBJ_15_L0_table" cellpadding="20"><tr><td valign="top" id="OBJ_15_sText"><P><SPAN style="FONT-FAMILY: Verdana; COLOR: #000000; FONT-SIZE: 18px">password</SPAN></P></td></tr></table></div><div id="OBJ_15_L1" style="position:absolute; width:90%; background-color: #FEFFFF; layer-background-color: #FEFFFF; border-width: 3px; border-style: double; border-color: #CCCCCC; left: 10px; top: 10px; &#xA;		"  ><table width="100%" cellspacing="0" border="0" id="OBJ_15_L1_table" cellpadding="20"><tr><td valign="top" id="OBJ_15_rText"><P><SPAN style="FONT-FAMILY: Verdana; COLOR: #000000; FONT-SIZE: 18px">password</SPAN></P></td></tr></table></div></div>]]>
</data>
</object>
<object id="OBJ_20" x="40" y="293" w="145" h="200" z="31" display="frame" begin="0" type="agent_002">
<data>
<![CDATA[<div style="width:145px;height:200px;"><object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=5,0,0,0" style="position:relative; z-index:0; top:0px; left:0px;" id="OBJ_20_fpobj" name="OBJ_20_fpobj" width="100%" height="100%"  ><param name="FlashVars" value="objID=OBJ_20" /><param name="Movie" value="images/agent_002/womanhead/agent002_a000_0.swf" /><param name="SWLiveConnect" value="1" /><param name="Play" value="1" /><param name="Loop" value="-1" /><param name="Quality" value="High" /><param name="SAlign" value="" /><param name="Menu" value="-1" /><param name="Base" value="" /><param name="AllowScriptAccess" value="always" /><param name="Scale" value="ShowAll" /><param name="DeviceFont" value="0" /><param name="EmbedMovie" value="0" /><param name="BGColor" value="" /><param name="SWRemote" value="" /><param name="MovieData" value="" /><param name="SeamlessTabbing" value="1" /><param name="WMode" value="transparent" /><param name="BGColor" value="#FFFFFF" /><param name="swliveconnect" value="true" /><embed quality="high" type="application/x-shockwave-flash" pluginspace="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" id="OBJ_20_fpobj" name="OBJ_20_fpobj" src="images/agent_002/womanhead/agent002_a000_0.swf" bgcolor="#FFFFFF" width="100%" swliveconnect="true" flashvars="objID=OBJ_20" /></object></div>]]>
</data>
</object>
<object id="OBJ_21" x="190" y="55" w="731" h="488" z="32" display="frame" begin="0" type="002_balloon">
<data>
<![CDATA[<div style="width:731px;height:488px;"><table border="0" cellspacing="0" cellpadding="0" width="100%"  ><tr><td width="1" height="1"><img src="images/002_balloon/1blank.gif" width="1" height="1" /></td><td width="10" height="1"><img src="images/002_balloon/1blank.gif" width="1" height="1" /></td><td align="left" height="1"><img id="ar_tl" src="images/002_balloon/1blank.gif" width="1" height="1" /></td><td align="center" height="1"><img id="ar_tc" src="images/002_balloon/1blank.gif" width="1" height="1" /></td><td align="right" height="1"><img id="ar_tr" src="images/002_balloon/1blank.gif" width="1" height="1" /></td><td width="" height="1"><img src="images/002_balloon/1blank.gif" width="1" height="1" /></td><td width="1" height="1"><img src="images/002_balloon/1blank.gif" width="1" height="1" /></td></tr><tr><td width="1" height="10"><img src="images/002_balloon/1blank.gif" width="1" height="1" /></td><td width="10" height="10"><img src="images/002_balloon/yellow_orange/balloon_tl.gif" width="10" height="10" /></td><td colspan="3" height="10" background="images/002_balloon/yellow_orange/balloon_bg_t.gif"><img src="images/002_balloon/1blank.gif" width="1" height="1" /></td><td width="10" height="10"><img src="images/002_balloon/yellow_orange/balloon_tr.gif" width="10" height="10" /></td><td width="1" height="10"><img src="images/002_balloon/1blank.gif" width="1" height="1" /></td></tr><tr><td valign="top" width="1"><img id="ar_lt" src="images/002_balloon/1blank.gif" width="1" height="1" /></td><td rowspan="3" width="10" background="images/002_balloon/yellow_orange/balloon_bg_l.gif"><img src="images/002_balloon/1blank.gif" width="1" height="1" /></td><td colspan="3" rowspan="3" background="images/002_balloon/yellow_orange/balloon_bg.gif"><div id="baseBalloonInside" style="position:relative; width:100%;"><table width="100%" cellspacing="0" border="0" cellpadding="0"><tr><td valign="middle"><div id="baseBalloonText" style="margin: 5;"><P><SPAN style="FONT-FAMILY: Verdana; FONT-SIZE: 24px">Welcome to the computer-based exam for Plan Training Sessions.&nbsp;&nbsp;Please answer the questions honestly.&nbsp; </SPAN></P>
<P><SPAN style="FONT-SIZE: 24px"><SPAN style="FONT-FAMILY: Verdana">For each question, you'll need to click on the tick area&nbsp;corresponding to your answer then click submit answer.</SPAN></P>
<P><SPAN style="FONT-FAMILY: Verdana">Test items are given&nbsp;a time limit of 1 minute.&nbsp; A time indicator is located at the bottom of the page.&nbsp; When time elapses, you can no longer key in your answer. Click next question to answer the next test item.</SPAN></P>
<P><SPAN style="FONT-FAMILY: Verdana"><SPAN style="COLOR: #ff3300">To pass this test, you need to answer at least 21 items correctly.</SPAN><BR><BR>Goodluck and Godspeed!!!!!!</SPAN></SPAN><BR></P></div></td></tr></table></div></td><td rowspan="3" width="10" background="images/002_balloon/yellow_orange/balloon_bg_r.gif"><img src="images/002_balloon/1blank.gif" width="1" height="1" /></td><td valign="top" width="1"><img id="ar_rt" src="images/002_balloon/1blank.gif" width="1" height="1" /></td></tr><tr><td valign="middle" width="1"><img id="ar_lm" src="images/002_balloon/1blank.gif" width="1" height="1" /></td><td valign="middle" width="1"><img id="ar_rm" src="images/002_balloon/1blank.gif" width="1" height="1" /></td></tr><tr><td valign="bottom" width="1"><img id="ar_lb" src="images/002_balloon/1blank.gif" width="1" height="1" /></td><td valign="bottom" width="1"><img id="ar_rb" src="images/002_balloon/1blank.gif" width="1" height="1" /></td></tr><tr><td width="1" height="10"><img src="images/002_balloon/1blank.gif" width="1" height="1" /></td><td width="10" height="10"><img src="images/002_balloon/yellow_orange/balloon_bl.gif" width="10" height="10" /></td><td colspan="3" background="images/002_balloon/yellow_orange/balloon_bg_b.gif" height="10"><img src="images/002_balloon/1blank.gif" width="1" height="1" /></td><td width="10" height="10"><img src="images/002_balloon/yellow_orange/balloon_br.gif" width="10" height="10" /></td><td width="1" height="10"><img src="images/002_balloon/1blank.gif" width="1" height="1" /></td></tr><tr><td width="1" height="1"><img src="images/002_balloon/1blank.gif" width="1" height="1" /></td><td height="1" width="10"><img src="images/002_balloon/1blank.gif" width="1" height="1" /></td><td align="left" height="1"><img id="ar_bl" src="images/002_balloon/1blank.gif" width="1" height="1" /></td><td align="center" height="1"><img id="ar_bc" src="images/002_balloon/1blank.gif" width="1" height="1" /></td><td align="right" height="1"><img id="ar_br" src="images/002_balloon/1blank.gif" width="1" height="1" /></td><td height="1" width="10"><img src="images/002_balloon/1blank.gif" width="1" height="1" /></td><td width="1" height="1"><img src="images/002_balloon/1blank.gif" width="1" height="1" /></td></tr></table></div>]]>
</data>
</object>
<object id="OBJ_23" x="756" y="584" w="153" h="50" z="33" display="frame" begin="0" type="form_002_password">
<data>
<![CDATA[<div style="width:153px;height:50px;"><input type="password" onblur="var oArgs=new Object; oArgs.pid='OBJ_23'; CallMethod('form_002_password','AcceptInput',oArgs); return false;" onkeyup="var oArgs=new Object; oArgs.pid='OBJ_23'; CallMethod('form_002_password','ReadInput',oArgs);" id="OBJ_23_input" variable="plan" value="" style="position: relative; width: 100%; height: 100%; font-family: Arial; color: #000000; font-weight: normal; font-style: normal; font-size:22px; text-align: left; border-width: 2px; border-color: #666666; border-style: solid; background-color: #FFFFFF;"   /></div>]]>
</data>
</object>
<object id="OBJ_24" x="196" y="527" w="494" h="124" z="34" display="frame" begin="0" type="005_balloon">
<data>
<![CDATA[<div style="width:494px;height:124px;"><table border="0" cellspacing="0" cellpadding="0" width="100%"  ><tr><td width="1" height="1"><img src="images/005_balloon/1blank.gif" width="1" height="1" /></td><td width="10" height="1"><img src="images/005_balloon/1blank.gif" width="1" height="1" /></td><td align="left" height="1"><img id="ar_tl" src="images/005_balloon/1blank.gif" width="1" height="1" /></td><td align="center" height="1"><img id="ar_tc" src="images/005_balloon/1blank.gif" width="1" height="1" /></td><td align="right" height="1"><img id="ar_tr" src="images/005_balloon/1blank.gif" width="1" height="1" /></td><td width="" height="1"><img src="images/005_balloon/1blank.gif" width="1" height="1" /></td><td width="1" height="1"><img src="images/005_balloon/1blank.gif" width="1" height="1" /></td></tr><tr><td width="1" height="10"><img src="images/005_balloon/1blank.gif" width="1" height="1" /></td><td width="10" height="10"><img src="images/005_balloon/yellow_orange/balloon_tl.gif" width="10" height="10" /></td><td colspan="3" height="10" background="images/005_balloon/yellow_orange/balloon_bg_t.gif"><img src="images/005_balloon/1blank.gif" width="1" height="1" /></td><td width="10" height="10"><img src="images/005_balloon/yellow_orange/balloon_tr.gif" width="10" height="10" /></td><td width="1" height="10"><img src="images/005_balloon/1blank.gif" width="1" height="1" /></td></tr><tr><td valign="top" width="1"><img id="ar_lt" src="images/005_balloon/1blank.gif" width="1" height="1" /></td><td rowspan="3" width="10" background="images/005_balloon/yellow_orange/balloon_bg_l.gif"><img src="images/005_balloon/1blank.gif" width="1" height="1" /></td><td colspan="3" rowspan="3" background="images/005_balloon/yellow_orange/balloon_bg.gif"><div id="baseBalloonInside" style="position:relative; width:100%;"><table width="100%" cellspacing="0" border="0" cellpadding="0"><tr><td><div id="baseBalloonText" style="vertical-align:middle; ; margin: 5;"><P><SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 24px">If you are ready for the Institutional Evaluation, please press enter on your keyboard.</SPAN></P></div></td></tr></table></div></td><td rowspan="3" width="10" background="images/005_balloon/yellow_orange/balloon_bg_r.gif"><img src="images/005_balloon/1blank.gif" width="1" height="1" /></td><td valign="top" width="1"><img id="ar_rt" src="images/005_balloon/1blank.gif" width="1" height="1" /></td></tr><tr><td valign="middle" width="1"><img id="ar_lm" src="images/005_balloon/1blank.gif" width="1" height="1" /></td><td valign="middle" width="1"><img id="ar_rm" src="images/005_balloon/1blank.gif" width="1" height="1" /></td></tr><tr><td valign="bottom" width="1"><img id="ar_lb" src="images/005_balloon/1blank.gif" width="1" height="1" /></td><td valign="bottom" width="1"><img id="ar_rb" src="images/005_balloon/1blank.gif" width="1" height="1" /></td></tr><tr><td width="1" height="10"><img src="images/005_balloon/1blank.gif" width="1" height="1" /></td><td width="10" height="10"><img src="images/005_balloon/yellow_orange/balloon_bl.gif" width="10" height="10" /></td><td colspan="3" background="images/005_balloon/yellow_orange/balloon_bg_b.gif" height="10"><img src="images/005_balloon/1blank.gif" width="1" height="1" /></td><td width="10" height="10"><img src="images/005_balloon/yellow_orange/balloon_br.gif" width="10" height="10" /></td><td width="1" height="10"><img src="images/005_balloon/1blank.gif" width="1" height="1" /></td></tr><tr><td width="1" height="1"><img src="images/005_balloon/1blank.gif" width="1" height="1" /></td><td height="1" width="10"><img src="images/005_balloon/1blank.gif" width="1" height="1" /></td><td align="left" height="1"><img id="ar_bl" src="images/005_balloon/1blank.gif" width="1" height="1" /></td><td align="center" height="1"><img id="ar_bc" src="images/005_balloon/1blank.gif" width="1" height="1" /></td><td align="right" height="1"><img id="ar_br" src="images/005_balloon/1blank.gif" width="1" height="1" /></td><td height="1" width="10"><img src="images/005_balloon/1blank.gif" width="1" height="1" /></td><td width="1" height="1"><img src="images/005_balloon/1blank.gif" width="1" height="1" /></td></tr></table></div>]]>
</data>
</object>
<timeline>
</timeline>
</frame>
</frames>
<RESPONSE name="SLIDE_5_2" type="link" key="13">
<IF if="#plan==&apos;PlanRED&apos;">
<if>
<eq>
<var val="#plan"/>
<str val="PlanRED"/>
</eq>
</if>
<GOTO pid="FRAME_13" option="0">
</GOTO>
</IF>
<IF if="#plan!=&apos;PlanRED&apos;">
<if>
<ne>
<var val="#plan"/>
<str val="PlanRED"/>
</ne>
</if>
<MSGBOX value="&quot;check password&quot;">
<value>
<str val="check password"/>
</value>
</MSGBOX>
</IF>
</RESPONSE>
</slide>
<slide id="SLIDE_13" sid="9" masterid="SLIDE_MASTER" name="Test" indent="0" onkeydown="SLIDE_13_2">
<onload>
<NAVIGATION targets="all" action="off">
</NAVIGATION>
</onload>
<frames>
<frame id="FRAME_13" dur="0" infinite="0">
<object id="OBJ_17" x="24" y="61" w="950" h="559" z="30" display="frame" begin="0" type="q_099_test">
<data>
<![CDATA[<div style="width:950px;height:559px;"><div style="display:none"  ><img border="0" id="OBJ_17_q_choicespot_0" src="images/q_099_test/basic/lightblue/choice_spot_1_0.gif" /><img border="0" id="OBJ_17_q_choicespot_2" src="images/q_099_test/basic/lightblue/choice_spot_1_2.gif" /><img border="0" id="OBJ_17_q_selectspot_0" src="images/q_099_test/basic/lightblue/select_spot_1_0.gif" /><img border="0" id="OBJ_17_q_selectspot_2" src="images/q_099_test/basic/lightblue/select_spot_1_2.gif" /><img border="0" id="OBJ_17_q_rangespot_up_0" src="images/q_099_test/basic/lightblue/range_spot_up_0.gif" /><img border="0" id="OBJ_17_q_rangespot_up_1" src="images/q_099_test/basic/lightblue/range_spot_up_1.gif" /><img border="0" id="OBJ_17_q_rangespot_down_0" src="images/q_099_test/basic/lightblue/range_spot_down_0.gif" /><img border="0" id="OBJ_17_q_rangespot_down_1" src="images/q_099_test/basic/lightblue/range_spot_down_1.gif" /><img width="150" height="25" border="0" id="OBJ_17_q_b_check_0" src="images/q_099_test/basic/lightblue/button_check_0.gif" /><img width="150" height="25" border="0" id="OBJ_17_q_b_check_1" src="images/q_099_test/basic/lightblue/button_check_1.gif" /><img width="150" height="25" border="0" id="OBJ_17_q_b_skip_0" src="images/q_099_test/basic/lightblue/button_skip_0.gif" /><img width="150" height="25" border="0" id="OBJ_17_q_b_skip_1" src="images/q_099_test/basic/lightblue/button_skip_1.gif" /><img width="150" height="25" border="0" id="OBJ_17_q_b_next_0" src="images/q_099_test/basic/lightblue/button_next_0.gif" /><img width="150" height="25" border="0" id="OBJ_17_q_b_next_1" src="images/q_099_test/basic/lightblue/button_next_1.gif" /><table width="100%" border="0" cellpadding="0" cellspacing="0" id="OBJ_17_q_choiceitem" style="margin-top: 2px; border: #DFEFFF solid 2px; background-color: #FFFFFF;"><tr><td valign="top" style="padding: 6px"><img border="0" src="images/q_099_test/basic/lightblue/choice_spot_1_0.gif" onclick="var oArgs = new Object; oArgs.pid = 'OBJ_17'; oArgs.qtype='choice'; oArgs.oid = this.getAttribute('spotid'); CallMethod('q_099_test','HandleClick',oArgs); return false;" /><img border="0" style="display: none" src="images/q_099_test/basic/lightblue/choice_spot_1_2.gif" /></td><td width="100%" style="padding: 6px">%%var%%</td></tr></table><table width="100%" border="0" cellpadding="0" cellspacing="0" id="OBJ_17_q_selectitem" style="margin-top: 2px; border: #DFEFFF solid 2px; background-color: #FFFFFF;"><tr><td valign="top" style="padding: 6px"><img border="0" src="images/q_099_test/basic/lightblue/select_spot_1_0.gif" onclick="var oArgs = new Object; oArgs.pid = 'OBJ_17'; oArgs.qtype='select'; oArgs.oid = this.getAttribute('spotid'); CallMethod('q_099_test','HandleClick',oArgs); return false;" /><img border="0" style="display: none" src="images/q_099_test/basic/lightblue/select_spot_1_2.gif" onclick="var oArgs = new Object; oArgs.pid = 'OBJ_17'; oArgs.qtype='select'; oArgs.oid = this.getAttribute('spotid'); CallMethod('q_099_test','HandleClick',oArgs); return false;" /></td><td width="100%" style="padding: 6px">%%var%%</td></tr></table><table width="100%" border="0" cellpadding="4" cellspacing="0" style="position:relative; margin-top: 2px; border: #DFEFFF solid 2px; background-color: #FFFFFF;" id="OBJ_17_q_rangeitem"><tr><td valign="top" style="padding: 6px;"><table cellpadding="0" cellspacing="0" border="0"><tr><td><img border="0" src="images/q_099_test/basic/lightblue/range_spot_up_0.gif" onclick="var oArgs = new Object; oArgs.pid = 'OBJ_17'; oArgs.qtype='range'; oArgs.oid = this.getAttribute('id'); CallMethod('q_099_test','HandleClick',oArgs); return false;" /></td></tr><tr><td><img border="0" src="images/q_099_test/basic/lightblue/range_spot_down_0.gif" onclick="var oArgs = new Object; oArgs.pid = 'OBJ_17'; oArgs.qtype='range'; oArgs.oid = this.getAttribute('id'); CallMethod('q_099_test','HandleClick',oArgs); return false;" /></td></tr></table></td><td width="100%" style="padding: 6px;">%%var%%</td></tr></table><table width="100%" border="0" cellpadding="0" cellspacing="0" id="OBJ_17_q_numericitem" style="margin-top: 2px; border: #DFEFFF solid 2px; background-color: #FFFFFF;"><tr><td width="50%" valign="middle" align="right" style="padding: 6px">%%exp%%</td><td width="50%" valign="middle" align="left" style="padding: 6px"><input type="text" onkeypress="var oArgs=new Object; oArgs.pid='OBJ_17'; oArgs.iid=this.getAttribute('id'); oArgs.returnvalue = true; if(g_isMSIE) CallMethod('q_099_test','HandleKeyPressed',oArgs);if(!oArgs.returnvalue) return false;" onkeyup="var oArgs=new Object; oArgs.pid='OBJ_17'; oArgs.iid=this.getAttribute('id'); oArgs.returnvalue = true; CallMethod('q_099_test','CheckValue',oArgs);" style="font-family: Arial; color: #000000; background-color: #FFFFFF; font-size:12px; border-width: 2px; border-color: #DFEFFF; border-style: double;" /></td></tr></table><table width="100%" border="0" cellpadding="0" cellspacing="0" id="OBJ_17_q_textitem" style="margin-top: 2px; border: #DFEFFF solid 2px; background-color: #FFFFFF;"><tr><td width="50%" valign="middle" align="right" style="padding: 6px">%%exp%%</td><td width="50%" valign="middle" align="left" style="padding: 6px"><input type="text" style="font-family: Arial; color: #000000; background-color: #FFFFFF; font-size:12px; border-width: 2px; border-color: #DFEFFF; border-style: double;" onkeyup="var oArgs=new Object; oArgs.pid='OBJ_17'; oArgs.iid=this.getAttribute('id'); oArgs.returnvalue = true; CallMethod('q_099_test','IfValue',oArgs);" /></td></tr></table><table width="100%" border="0" cellpadding="0" cellspacing="0" id="OBJ_17_q_targetitem" style="position: absolute; z-index: 20; top: 0px; left:0px; width: 250px; height: 40px; background-color: #FFFFFF; border-left: #66CCFF 2px solid; border-bottom: #66CCFF 2px solid; border-top: #66CCFF 2px solid; border-right: #66CCFF 2px dotted; background-color: #FFFFFF; overflow: hidden; padding: 3px"><tr><td>...</td></tr></table><table width="100%" border="0" cellpadding="0" cellspacing="0" id="OBJ_17_q_bulletitem" style="display: none; position: absolute; z-index: 21; cursor:move; top: 0px; left:0px; width: 350px; height: 40px; background-color: #FFFFFF; border-right: #66CCFF 2px solid; border-bottom: #66CCFF 2px solid; border-top: #66CCFF 2px solid; border-left: #66CCFF 2px dotted; background-color: #FFFFFF; overflow: hidden; padding: 3px" onmousedown="DragBegin(this, event); this.style.zIndex = 22;" onmouseup="DragEnd(this, event); this.style.zIndex = 21;" onmousemove="DragMove(this, event);"><tr><td>...</td></tr></table></div><div style="background-color: #FFFFFF;" id="OBJ_17_test_container"  ><table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td width="100%" valign="top" id="OBJ_17_q_qcontainer"><table width="100%" border="0" cellpadding="0" cellspacing="0" style="background-color: #FFFFFF;"><tr><td width="100%" valign="top" style="width:100%; padding:6px; text-align:center; font-family:Arial, Helvetica, sans-serif; font-size:11px; color:#336699;" id="OBJ_17_q_creditcontainer"><span id="OBJ_17_q_credited">Credited:</span><span style="margin-left: 4px; margin-right: 4px;">question</span><span id="OBJ_17_test_currentq">0</span><span style="margin-left: 4px; margin-right: 4px;">from</span><span id="OBJ_17_test_totalq">0</span></td></tr><tr id="OBJ_17_q_textcontainer"><td width="100%" style="padding:4px; border: #DFEFFF solid 2px; background-color: #EFF8FF" id="OBJ_17_q_text">
								%%%
						</td></tr><tr><td width="100%" style="padding:6px; text-align:center; font-family:Arial, Helvetica, sans-serif; font-size:11px; color:#336699;" id="OBJ_17_q_objective">
							%%%
						</td></tr></table><table width="100%" border="0" cellpadding="0" cellspacing="0"><tr><td width="100%" id="OBJ_17_q_holder"><div width="100%" id="OBJ_17_q_otoworkarea" style="position: relative; background-color:#DFEFFF; overflow: hidden; height: 5px;">
								...
							</div><div id="OBJ_17_q_workarea" style="position: relative; top:0px; left:0px; background-color:#FFFFFF;">
								...
							</div></td></tr></table><table width="100%" cellpadding="0" cellspacing="0" border="0" id="OBJ_17_q_button_area" style="margin-top: 2px; border: #DFEFFF solid 2px; background-color: #EFF8FF"><tr><td style="width:50%; text-align:left; padding: 4px; height: 33px;"><span style="display:none;" id="OBJ_17_q_b_check_container"><img style="cursor:hand; cursor:pointer;" border="0" id="OBJ_17_q_b_check_button" alt="Submit answer" src="images/q_099_test/basic/lightblue/button_check_0.gif" onmouseover="this.src = document.getElementById('OBJ_17_q_b_check_1').src; return false;" onmouseout="this.src = document.getElementById('OBJ_17_q_b_check_0').src; return false;" onclick="var oArgs=new Object; oArgs.pid='OBJ_17'; CallMethod('q_099_test','EvalAnswer',oArgs); return false;" /></span></td><td align="center" style="text-align:center; height: 33px;"><div style="display:inline;" id="OBJ_17_q_attempts_container"><table cellspacing="0" cellpadding="2" border="0"><tr><td align="right" nowrap="nowrap" style="font-family:Arial, Helvetica, sans-serif; font-size:11px; ">Attempts:</td><td align="left" nowrap="nowrap" style="font-family:Arial, Helvetica, sans-serif; font-size:11px; " id="OBJ_17_q_attempts_count" /></tr></table></div></td><td align="right" width="50%" style="width:50%; text-align:right; padding: 4px; height: 33px;"><span style="display:none;" id="OBJ_17_q_b_skip_container"><img style="cursor:hand;cursor:pointer;" border="0" id="OBJ_17_q_b_skip_button" alt="Skip question" src="images/q_099_test/basic/lightblue/button_skip_0.gif" onmouseover="this.src = document.getElementById('OBJ_17_q_b_skip_1').src; return false;" onmouseout="this.src = document.getElementById('OBJ_17_q_b_skip_0').src; return false;" onclick="var oArgs=new Object; oArgs.pid='OBJ_17'; CallMethod('q_099_test','SkipQuestion',oArgs);return false;" /></span><div style="display:none;" id="OBJ_17_q_b_next_container"><img style="cursor:hand;cursor:pointer;" border="0" id="OBJ_17_q_b_next_button" alt="Next question" src="images/q_099_test/basic/lightblue/button_next_0.gif" onmouseover="this.src = document.getElementById('OBJ_17_q_b_next_1').src; return false;" onmouseout="this.src = document.getElementById('OBJ_17_q_b_next_0').src; return false;" onclick="var oArgs=new Object; oArgs.pid='OBJ_17'; oArgs.action='clicknext'; CallMethod(&quot;q_099_test&quot;,&quot;Dispatcher&quot;,oArgs);return false;" /></div><div style="display:none; font-family: Verdana,Arial,sans-serif; font-size: 10px" id="OBJ_17_q_nomore">No more answered questions</div><div style="display:none; font-family: Verdana,Arial,sans-serif; font-size: 10px" id="OBJ_17_q_testend">All questions are answered</div><div style="display:none; font-family: Verdana,Arial,sans-serif; font-size: 10px" id="OBJ_17_q_teststopped">Test is stopped</div></td></tr></table><table cellspacing="0" cellpadding="2" border="0" width="100%" id="OBJ_17_q_timer_area" style="display: none; margin-top: 2px; padding:4px; border: #DFEFFF solid 2px; background-color: #EFF8FF"><tr><td align="center" width="50%"></td><td align="center" style="text-align: center;"><table cellspacing="0" cellpadding="0" border="0" align="center" width="100%"><tr><td nowrap="nowrap" align="right" style="margin: 2px; padding:4px; text-align:right; font-family:Arial, Helvetica, sans-serif; font-size:11px; color:#336699;">Question time limit:</td><td width="200" style="width: 200px; text-align:center; vertical-align: middle;"><div style="background-color:#00CC66; border: #666666 solid 1px; text-align:left; height: 10px; width: 200px" id="OBJ_17_q_timer_bg"><div style="background-color:#999999; height: 10px; width: 1px;" id="OBJ_17_q_timer_progress"><spacer width="1" height="1" /></div></div></td><td nowrap="nowrap" align="left" width="50%" style="margin: 2px; padding:4px; text-align:left; font-family:Arial, Helvetica, sans-serif; font-size:11px; color:#336699;" id="OBJ_17_q_timer_value">
									 sec
								</td></tr></table></td><td align="center" width="50%"></td></tr></table></td></tr></table></div></div>]]>
</data>
</object>
<timeline>
</timeline>
</frame>
</frames>
<RESPONSE name="SLIDE_13_2" type="link" key="13">
<GOTO pid="FRAME_15" option="0">
</GOTO>
</RESPONSE>
</slide>
<slide id="SLIDE_15" sid="b" masterid="SLIDE_MASTER" name="Score" indent="0">
<frames>
<frame id="FRAME_15" dur="0" infinite="0">
<object id="OBJ_18" x="359" y="83" w="233" h="43" z="30" display="frame" begin="0" oncomplete="OBJ_18_1" type="q_101_currentresult">
<data>
<![CDATA[<div style="width:233px;height:43px;"><table width="100%" border="0" cellspacing="0" cellpadding="0"  ><tr><td bgcolor="#99CCFF"><table width="100%" border="0" cellspacing="2" cellpadding="5"><tr><td align="right" width="100%" bgcolor="#FFFFFF"><SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 24px"><B>Current score</B></SPAN></td><td align="center" bgcolor="#FFFFFF" id="OBJ_18_curpoints" style="font-family: Verdana; font-size: 22px; color: #000000; font-weight: bold;">
							0
					</td></tr></table></td></tr></table></div>]]>
</data>
<RESPONSE name="OBJ_18_1" type="link">
<IF_SCORE pid="total" oid="" condition="ge" score="20">
<score>
<num val="20"/>
</score>
<MSGBOX value="&quot;CONGRATULATIONS!!!!!  You made it&quot;">
<value>
<str val="CONGRATULATIONS!!!!!  You made it"/>
</value>
</MSGBOX>
<GOTO pid="FRAME_9" option="0">
</GOTO>
</IF_SCORE>
<IF_SCORE pid="total" oid="" condition="lt" score="20">
<score>
<num val="20"/>
</score>
<MSGBOX value="&quot;Please review the Information Sheets&quot;">
<value>
<str val="Please review the Information Sheets"/>
</value>
</MSGBOX>
<GOTO pid="FRAME_10" option="0">
</GOTO>
</IF_SCORE>
</RESPONSE>
</object>
<timeline>
</timeline>
</frame>
</frames>
</slide>
<slide id="SLIDE_9" sid="c" masterid="SLIDE_MASTER" name="celebration" indent="0">
<oncomplete>
<NAVIGATION targets="all" action="off">
</NAVIGATION>
</oncomplete>
<frames>
<frame id="FRAME_9" dur="0" infinite="0">
<object id="IMG_5" x="256" y="95" w="500" h="500" z="30" display="frame" begin="0" preload="images/ngbbs4cfd5b3f85665.gif">
<data>
<![CDATA[<img src="images/ngbbs4cfd5b3f85665.gif" style="width:500px;height:500px;border-width:0;"/>]]>
</data>
</object>
<object id="OBJ_10" x="815" y="579" w="140" h="53" z="31" display="frame" begin="0" type="q_101_currentresult">
<data>
<![CDATA[<div style="width:140px;height:53px;"><table width="100%" border="0" cellspacing="0" cellpadding="0"  ><tr><td bgcolor="#99CCFF"><table width="100%" border="0" cellspacing="2" cellpadding="5"><tr><td align="right" width="100%" bgcolor="#FFFFFF"><P><SPAN style="FONT-FAMILY: Verdana; COLOR: #000000; FONT-SIZE: 22px"><B>SCORE</B></SPAN></P></td><td align="center" bgcolor="#FFFFFF" id="OBJ_10_curpoints" style="font-family: Verdana; font-size: 22px; color: #000000; font-weight: normal;">
							0
					</td></tr></table></td></tr></table></div>]]>
</data>
</object>
<timeline>
</timeline>
</frame>
</frames>
</slide>
<slide id="SLIDE_10" sid="d" masterid="SLIDE_MASTER" name="failure notice" indent="0">
<oncomplete>
<NAVIGATION targets="all" action="off">
</NAVIGATION>
</oncomplete>
<frames>
<frame id="FRAME_10" dur="0" infinite="0">
<object id="IMG_6" x="131" y="83" w="751" h="496" z="30" display="frame" begin="0" preload="images/clip20120321_1.gif">
<data>
<![CDATA[<img src="images/clip20120321_1.gif" style="width:751px;height:496px;border-width:0;"/>]]>
</data>
</object>
<object id="OBJ_11" x="834" y="578" w="140" h="53" z="31" display="frame" begin="0" type="q_101_currentresult">
<data>
<![CDATA[<div style="width:140px;height:53px;"><table width="100%" border="0" cellspacing="0" cellpadding="0"  ><tr><td bgcolor="#99CCFF"><table width="100%" border="0" cellspacing="2" cellpadding="5"><tr><td align="right" width="100%" bgcolor="#FFFFFF"><P><SPAN style="FONT-FAMILY: Verdana; COLOR: #000000; FONT-SIZE: 22px"><B>SCORE</B></SPAN></P></td><td align="center" bgcolor="#FFFFFF" id="OBJ_11_curpoints" style="font-family: Verdana; font-size: 22px; color: #000000; font-weight: normal;">
							0
					</td></tr></table></td></tr></table></div>]]>
</data>
</object>
<timeline>
</timeline>
</frame>
</frames>
</slide>
</slides>
<masters>
<slide id="SLIDE_MASTER" sid="1">
<frames>
<frame id="FRAME_4" dur="0" infinite="0">
<object id="IMG_3" x="0" y="639" w="999" h="53" z="0" display="frame" begin="0" preload="images/clip20110127.bmp">
<data>
<![CDATA[<img src="images/clip20110127.bmp" style="width:999px;height:53px;border-width:0;"/>]]>
</data>
</object>
<object id="OBJ_4" x="202" y="511" w="443" h="16" z="1" display="none" begin="0" type="nav_010_slidename">
<data>
<![CDATA[<div style="width:443px;height:16px;"><table width="100%" cellpadding="3" cellspacing="0" border="0"  ><tr><td align="center" bgcolor=""><span id="OBJ_4_SlideName" style="width:100%; font-family: Arial; font-style:normal; font-weight:bold; font-size: 12px; text-align:left; color: #ffffff;" /></td></tr></table></div>]]>
</data>
</object>
<object id="IMG_4" x="2" y="2" w="996" h="41" z="2" display="frame" begin="0" preload="images/clip20110127.emf">
<data>
<![CDATA[<img src="images/clip20110127.emf" style="width:996px;height:41px;border-width:0;"/>]]>
</data>
</object>
<object id="TXT_11" x="118" y="7" w="756" h="33" z="3" display="slide" begin="0">
<data>
<![CDATA[<div style="width:756px;height:33px;"><CENTER><SPAN style="FONT-FAMILY: Verdana; COLOR: #0080c0; FONT-SIZE: 22px"><SPAN style="COLOR: #004080">Institutional Competency Evaluation Tool in Plan Training Sessions</SPAN></SPAN></CENTER></div>]]>
</data>
</object>
<object id="TXT_6" x="185" y="654" w="214" h="25" z="4" display="frame" begin="0">
<data>
<![CDATA[<div style="width:214px;height:25px;"><P><SPAN style="FONT-FAMILY: Arial; COLOR: #ffffff; FONT-SIZE: 12px"><B><SPAN style="FONT-SIZE: 18px">Computer-Based Exam</SPAN></B></SPAN></P></div>]]>
</data>
</object>
<timeline>
</timeline>
</frame>
</frames>
</slide>
</masters>
<methods>
<method type="nav_010_slidename" name="Constructor">
<![CDATA[

				function Constructor(argobj)
				{
					var sTargetId = argobj.pid;
					AddEvtHandler("EVENT_SLIDE_OPENED", "nav_010_slidename", sTargetId);
					return true;
				}
				]]>
</method>
<method type="nav_010_slidename" name="HandleEvt">
<![CDATA[

				function HandleEvt(oEvtHandler)
				{
					if(document.getElementById(oEvtHandler.sTargetId)==null) return false;
					switch (oEvtHandler.sEvt) {
						case "EVENT_SLIDE_OPENED":
							document.getElementById(oEvtHandler.sTargetId + "_SlideName").innerHTML = g_oSlide!=null ? g_oSlide.getAttribute("name") : "";
							break;
						default: break;
					}
					return true;
				}
				]]>
</method>
<method type="nav_010_slidename" name="GetProperty">
<![CDATA[

				function GetProperty(argobj)
				{
					if(argobj.pid==null || argobj.property==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					switch(argobj.property.toLowerCase()) {
						case "slidename":	g_vPropertyValue = g_oSlide!=null ? g_oSlide.getAttribute("name") : "";	break;
						default: return true;
					}
					return true;
				}
				]]>
</method>
<method type="001_textbox" name="Constructor">
<![CDATA[

                function Constructor(argobj)
                {
                    if(argobj.pid==null) return false;
					if(document.getElementById(argobj.pid)==null) return false;
					var curObj = document.getElementById(argobj.pid);
					if(g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']")==null) return false;
					var params = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					var tw = params.selectSingleNode("typewriter").firstChild.nodeValue=="yes" ? true : false;
					if(!tw) return true;
					var speed = params.selectSingleNode("typewriter_speed").firstChild.nodeValue;
					speed = parseInt(speed,10);
					if(isNaN(speed)) speed = 8;
					speed = Math.round(1000/speed);
					curObj.setAttribute("speed", speed.toString());
					var txt = trim(params.selectSingleNode("box_text").firstChild.nodeValue,true,true,true,true);
					var ntxt = "";
					var stxt = "";
					var tagflag = false;
					var entityflag = false;
					var cnt = 0;
					for(var i=0;i<txt.length;i++) {
						if(tagflag && txt.charAt(i)!=">") {
							ntxt += txt.charAt(i);
							stxt += txt.charAt(i);
							continue;
						}
						if(entityflag && txt.charAt(i)!=";") {
							ntxt += txt.charAt(i);
							stxt += txt.charAt(i);
							continue;
						}
						switch(txt.charAt(i)) {
							case "<":
								ntxt += "<";
								stxt += "<";
								tagflag = true;
								break;
							case ">":
								ntxt += ">";
								stxt += ">";
								tagflag = false;
								break;
							case "&":
								ntxt += "<span id='"+argobj.pid+"_i"+cnt.toString()+"' style='visibility:hidden'>&";
								stxt += "<span style='visibility:hidden'>&";
								cnt++;
								entityflag = true;
								break;
							case ";":
								if(entityflag) {
									entityflag = false;
									ntxt += ";</span>";
									stxt += ";</span>";
									break;
								}
							default:
								ntxt += "<span id='"+argobj.pid+"_i"+cnt.toString()+"' style='visibility:hidden'>"+txt.charAt(i)+"</span>";
								stxt += "<span style='visibility:hidden'>"+txt.charAt(i)+"</span>";
								cnt++;
						}
					}
					if(document.getElementById(argobj.pid+"_sText")!=null) document.getElementById(argobj.pid+"_sText").innerHTML = stxt;
					document.getElementById(argobj.pid+"_rText").innerHTML = ntxt;
					curObj.setAttribute("cid","0");
					curObj.setAttribute("lid",cnt.toString());
					CallMethod("001_textbox", "TypeChar", argobj);
 					return true;
				}
				]]>
</method>
<method type="001_textbox" name="TypeChar">
<![CDATA[

                function TypeChar(argobj)
                {
                    if(argobj.pid==null) return false;
					if(document.getElementById(argobj.pid)==null) return false;
					var curObj = document.getElementById(argobj.pid);
					var cnt = curObj.getAttribute("cid");
					if(document.getElementById(argobj.pid+"_i"+cnt)!=null) document.getElementById(argobj.pid+"_i"+cnt).style.visibility = "visible";
					cnt = parseInt(cnt,10);
					cnt++;
					cnt = cnt.toString();
					if(curObj.getAttribute("lid")!=cnt) {
						var delay = parseInt(curObj.getAttribute("speed"),10);
						curObj.setAttribute("cid",cnt);
						CreateTimeActionMethod("001_textbox", "TypeChar", null, delay, argobj);
					}
 					return true;
				}
				]]>
</method>
<method type="agent_002" name="Constructor">
<![CDATA[

				function Constructor(argobj) {
					if(argobj.pid==null) return false;
					if(document.getElementById(argobj.pid)==null) return false;
					var curObj = document.getElementById(argobj.pid);
					if(g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']")==null) return false;
					var params = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					var curagent = params.selectSingleNode("agent").firstChild.nodeValue;
					curObj.setAttribute("state","idle");
					curObj.setAttribute("free","1");
					var a = new Object; a.pid = argobj.pid; a.action = "idle";
					CallMethod("agent_002","InitAction", a);
					return true;
				}
			]]>
</method>
<method type="agent_002" name="InitAction">
<![CDATA[

				function InitAction(argobj) {
					if(argobj.pid==null) return false;
					if(argobj.action==null) argobj.action = "idle";
					if(document.getElementById(argobj.pid)==null) return false;
					var curObj = document.getElementById(argobj.pid);
					if(curObj.style.display=="none") return false;
					var fpObj = g_isMSIE ? document.getElementById(argobj.pid+"_fpobj") : document.embeds[argobj.pid+"_fpobj"];
					if(fpObj == null) return false;
					try {
						//fpObj.Stop();
						fpObj.TGotoLabel("/",argobj.action+"_start");
						fpObj.TPlay("/");
						curObj.setAttribute("state",argobj.action);
					} catch(e) {
//						alert("ERROR:"+e.description);
						return false;
					}
					return true;
				}
			]]>
</method>
<method type="agent_002" name="PerformAction">
<![CDATA[

				function PerformAction(argobj) {
					if(argobj.pid==null) return false;
					if(argobj.action==null) return false;
					if(document.getElementById(argobj.pid)==null) return false;
					var curObj = document.getElementById(argobj.pid);
					if(curObj.style.display=="none") return false;
					if(curObj.getAttribute("state")==null) return false;
					var curState = curObj.getAttribute("state");
					if(curObj.getAttribute("fifo")==null) {
						var fifo = new Array();
					} else {
						var fifo = curObj.getAttribute("fifo").split("~");
					}
					var a = new Object;
					a.pid = argobj.pid;
					if(fifo.length==0) {
					//  Analyze state. 
					//  If one of the basic actions - fill fifo with called sequence and start called action immediately
					//  If state is return action or is single autoreturn action - fill fifo with called sequence and do nothing
					//  If state requires return action - insert in fifo return action + called sequence and if free - start return action
						switch(curState) {
							case "idle":
							case "speak_yes":
							case "speak_no":
							case "speak_angry":
							case "talk":
								pushArray(fifo,argobj.action);
								if(argobj.autoreturn=="yes") {
									switch(argobj.action) {
										case "astonish":
										case "amazement":
											pushArray(fifo,argobj.action+"_return");
											break;
										default: break;
									}
								}
								curObj.setAttribute("fifo",fifo.join("~"));
								a.action = fifo[0];
								CallMethod("agent_002","InitAction",a);
								 // document.getElementById("agentFIFO").innerHTML = "FIFO: "+fifo.join(" ")+"<br>STATE: "+curObj.getAttribute("state");
								return true;
							case "yes_nod":
							case "no_nod":
								pushArray(fifo,argobj.action);
								if(argobj.autoreturn=="yes") {
									switch(argobj.action) {
										case "astonish":
										case "amazement":
										case "angry":
											pushArray(fifo,argobj.action+"_return");
											break;
										default: break;
									}
								}
								curObj.setAttribute("fifo",fifo.join("~"));
								 // document.getElementById("agentFIFO").innerHTML = "FIFO: "+fifo.join(" ")+"<br>STATE: "+curObj.getAttribute("state");
								return true;
							default:
								if(curState.indexOf("_return")!=-1) {
									pushArray(fifo,argobj.action);
									if(argobj.autoreturn=="yes") {
										switch(argobj.action) {
											case "astonish":
											case "amazement":
											case "angry":
												pushArray(fifo,argobj.action+"_return");
												break;
											default: break;
										}
									}
									curObj.setAttribute("fifo",fifo.join("~"));
									 // document.getElementById("agentFIFO").innerHTML = "FIFO: "+fifo.join(" ")+"<br>STATE: "+curObj.getAttribute("state");
									return true;
								} 
								break;
						}
					
						pushArray(fifo,curObj.getAttribute("state")+"_return");
						pushArray(fifo,argobj.action);
						if(fifo.length==0) {
							curObj.removeAttribute("fifo");
						} else {
							curObj.setAttribute("fifo",fifo.join("~"));
						}
						 // document.getElementById("agentFIFO").innerHTML = "FIFO: "+fifo.join(" ")+"<br>STATE: "+curObj.getAttribute("state");
						if(curObj.getAttribute("free")=="1") {
							a.action = fifo[0];
							 // document.getElementById("agentFIFO").innerHTML = "FIFO: "+fifo.join(" ")+"<br>STATE: "+curObj.getAttribute("state");
							CallMethod("agent_002","InitAction",a);
						}
						return true;
					} else {
					// Add called action sequence to fifo and do nothing
						if(argobj.action=="idle") return false;
						pushArray(fifo,argobj.action);
						if(argobj.autoreturn=="yes") {
							switch(argobj.action) {
								case "astonish":
								case "amazement":
								case "angry":
									pushArray(fifo,argobj.action+"_return");
									break;
								default: break;
							}
						}
						if(fifo.length==0) {
							curObj.removeAttribute("fifo");
						} else {
							curObj.setAttribute("fifo",fifo.join("~"));
						}
						 // document.getElementById("agentFIFO").innerHTML = "FIFO: "+fifo.join(" ")+"<br>STATE: "+curObj.getAttribute("state");
						return true;
					}
					return true;
				}
			]]>
</method>
<method type="agent_002" name="Listener">
<![CDATA[

				function Listener(argobj) {
//					alert(argobj.pid+" "+argobj.action+" "+argobj.ev);
					if(argobj.pid==null || argobj.action==null || argobj.ev==null) return false;
					if(document.getElementById(argobj.pid)==null) return false;
					var curObj = document.getElementById(argobj.pid);
					if(curObj.style.display=="none") return false;
					if(curObj.getAttribute("fifo")==null) {
						var fifo = new Array();
					} else {
						var fifo = curObj.getAttribute("fifo").split("~");
					}
					var a = new Object;
					a.pid = argobj.pid;
					switch(argobj.ev) {
						case "start": 
						// If fifo is empty - do nothing - agent stays in the same state until end event
						// If fifo is not empty - shift fifo 1 position to prepare next action (or no action)
							curObj.setAttribute("state",argobj.action);
							curObj.setAttribute("free","0");
							// document.getElementById("agentFIFO").innerHTML = "FIFO: "+fifo.join(" ")+"<br>STATE: "+curObj.getAttribute("state");
							if(fifo.length==0) return false;
							if(fifo[0]==curObj.getAttribute("state")) shiftArray(fifo);
							if(fifo.length==0) {
								curObj.removeAttribute("fifo");
							} else {
								curObj.setAttribute("fifo",fifo.join("~"));
							}
							// document.getElementById("agentFIFO").innerHTML = "FIFO: "+fifo.join(" ")+"<br>STATE: "+curObj.getAttribute("state");
							break;
						case "end":
						// If fifo is empty and state is one of basic actions - do nothing
						// If fifo is empty and state is one of single autoreturn actions or is one of return actions - insert idle action in fifo and start idle action
						// If fifo is empty and none above is true - do nothing - agent stays in the same state
						// If fifo is not empty - get (but not shift - will be shifted at start event) fifo first item and start corresponding action
							curObj.setAttribute("state",argobj.action);
							FireEvent(argobj.pid, "onActionEnd");
							if(document.getElementById(argobj.pid)==null) return false;
							 // document.getElementById("agentFIFO").innerHTML = "FIFO: "+fifo.join(" ")+"<br>STATE: "+curObj.getAttribute("state");
							if(fifo.length==0) {
								if(curObj.getAttribute("state")=="idle" || curObj.getAttribute("state")=="talk") return true;
								if(curObj.getAttribute("state").indexOf("_return")!=-1 || curObj.getAttribute("state")=="yawn" || curObj.getAttribute("state")=="yes_nod" || curObj.getAttribute("state")=="no_nod") {
									// pushArray(fifo,"idle");
									if(fifo.length==0) {
										curObj.removeAttribute("fifo");
									} else {
										curObj.setAttribute("fifo",fifo.join("~"));
									}
									a.action = "idle";
									// document.getElementById("agentFIFO").innerHTML = "FIFO: "+fifo.join(" ")+"<br>STATE: "+curObj.getAttribute("state");
									CallMethod("agent_002","InitAction",a);
									return true;
								}
								curObj.setAttribute("free","1");
								return true;
							} else {
								a.action = fifo[0];
								CallMethod("agent_002","InitAction",a);
							 // document.getElementById("agentFIFO").innerHTML = "FIFO: "+fifo.join(" ")+"<br>STATE: "+curObj.getAttribute("state");
								return true;
							}
							return false;
							break;
						default:
							break;
					}
					return true;
 				}
			]]>
</method>
<method type="agent_002" name="Return">
<![CDATA[

				function Return(argobj) {
					if(argobj.pid==null) return false;
					if(document.getElementById(argobj.pid)==null) return false;
					var curObj = document.getElementById(argobj.pid);
					if(curObj.style.display=="none") return false;
					if(curObj.getAttribute("state")==null) return false;
					var curState = curObj.getAttribute("state");
					if(curState=="idle") return false;
					if(curObj.getAttribute("fifo")==null) {
						var fifo = new Array();
					} else {
						var fifo = curObj.getAttribute("fifo").split("~");
					}
					var a = new Object;
					a.pid = argobj.pid;
					if(fifo.length==0) {
						if(curState.indexOf("_return")!=-1 || curState=="yawn" || curState=="yes_nod" || curState=="no_nod") return true;
						switch(curState) {
							case "astonish":
							case "amazement":
							case "angry":
								pushArray(fifo,curState+"_return");
								pushArray(fifo,"idle");
								curObj.setAttribute("fifo",fifo.join("~"));
								if(curObj.getAttribute("free")=="1") {
									a.action = fifo[0];
									CallMethod("agent_002","InitAction",a);
								}
								break;
							default:
								pushArray(fifo,"idle");
								curObj.setAttribute("fifo",fifo.join("~"));
								curObj.setAttribute("free","1");
								a.action = fifo[0];
								CallMethod("agent_002","InitAction",a);
								return true;
						}
						return true;
					} else {
						if(fifo[0].indexOf("_return")!=-1) {
							while(fifo.length>1) popArray(fifo);
							pushArray(fifo,"idle");
							curObj.setAttribute("fifo",fifo.join("~"));
							return true;
						}
						if(curState.indexOf("_return")!=-1 || curState=="yawn" || curState=="yes_nod" || curState=="no_nod") {
							while(fifo.length>0) popArray(fifo);
							pushArray(fifo,"idle");
							curObj.setAttribute("fifo",fifo.join("~"));
							return true;
						}
						while(fifo.length>0) popArray(fifo);
						switch(curState) {
							case "astonish":
							case "angry":
							case "amazement":
								pushArray(fifo,curState+"_return");
								pushArray(fifo,"idle");
								curObj.setAttribute("fifo",fifo.join("~"));
								if(curObj.getAttribute("free")=="1") {
									a.action = fifo[0];
									CallMethod("agent_002","InitAction",a);
								}
								return true;
							default: break;
						}
						curObj.setAttribute("free","1");
						pushArray(fifo,"idle");
						curObj.setAttribute("fifo",fifo.join("~"));
						a.action = fifo[0];
						CallMethod("agent_002","InitAction",a);
						return true;
					}
				}
			]]>
</method>
<method type="agent_002" name="ShowAgent">
<![CDATA[

				function ShowAgent(argobj) {
					if(argobj.pid==null) return false;
					var curObj = document.getElementById(argobj.pid);
					if(!g_isMSIE) {
						if(argobj.x!=null && argobj.y!=null) {
							curObj.style.left = argobj.x+"px";
							curObj.style.top = argobj.y+"px";
						}
						curObj.style.display = "block";
						curObj.style.visibility = "visible";
						return true;
					}
					var a = 0;
					var trans, dur;
					if(isNaN(parseInt(argobj.transition,10))) {
						curObj.style.display = "inline";
						curObj.style.visibility = "visible";
						return true;
					} else {
						a = parseInt(argobj.transition,10);
						if(a <= 0) a = 0;
						trans = a.toString();
					}
					if(isNaN(parseInt(argobj.duration,10))) {
						dur = "1";
					} else {
						a = parseInt(argobj.duration,10);
						if(a <= 0) a = 1;
						dur = a.toString();
					}
					curObj.style.visibility = "hidden";
					if(argobj.x!=null && argobj.y!=null) {
						curObj.style.left = argobj.x+"px";
						curObj.style.top = argobj.y+"px";
					}
					curObj.style.display = "inline";
					curObj.style.filter = "RevealTrans(duration="+dur+", transition="+trans+")";
					if(curObj.filters[0]!=null) {
						curObj.filters[0].Apply();
						curObj.style.visibility = "visible";
						curObj.filters[0].Play();
					} else {
						curObj.style.visibility = "visible";
					}
					return true;
				}
			]]>
</method>
<method type="agent_002" name="HideAgent">
<![CDATA[

				function HideAgent(argobj) {
					if(argobj.pid==null) return false;
					var curObj = document.getElementById(argobj.pid);
					if(!g_isMSIE) {
						curObj.style.display = "none";
						curObj.style.visibility = "visible";
						return true;
					}
					var a = 0;
					var trans, dur;
					if(isNaN(parseInt(argobj.transition,10))) {
						curObj.style.display = "none";
						curObj.style.visibility = "visible";
						return true;
					} else {
						a = parseInt(argobj.transition,10);
						if(a <= 0) a = 0;
						trans = a.toString();
					}
					if(isNaN(parseInt(argobj.duration,10))) {
						dur = "1";
					} else {
						a = parseInt(argobj.duration,10);
						if(a <= 0) a = 1;
						dur = a.toString();
					}
					curObj.style.visibility = "visible";
					curObj.style.display = "inline";
					curObj.style.filter = "RevealTrans(duration="+dur+", transition="+trans+")";
					if(curObj.filters[0]!=null) {
						curObj.filters[0].Apply();
						curObj.style.visibility = "hidden";
						curObj.filters[0].Play();
					} else {
						curObj.style.visibility = "hidden";
					}
					return true;
				}
			]]>
</method>
<method type="agent_002" name="teleportAgent">
<![CDATA[

				function teleportAgent(argobj)
				{
					if(argobj.pid==null) return false;
					var curObj = document.getElementById(argobj.pid);
					if(!g_isMSIE) {
						curObj.style.left = argobj.x+"px";
						curObj.style.top = argobj.y+"px";
						return true;
					}
					var a = new Object;
					a.pid = argobj.pid;
					a.transition = "12";
					if(isNaN(parseInt(argobj.duration,10))) {
						a.duration = "1";
					} else {
						a.duration = argobj.duration;
					}
					CallMethod("agent_002", "HideAgent",a);
					var delay = a.duration*1000;
					a.x = argobj.x;
					a.y = argobj.y;
					CreateTimeActionMethod("agent_002", "ShowAgent", null, delay, a);
					return true;
				}
			]]>
</method>
<method type="form_002_password" name="Constructor">
<![CDATA[

                function Constructor(argobj)
                {
                    if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					if(oParams==null) return false;
					var bGlobal = oParams.selectSingleNode("var_scope").text=="global";
					var sVarName = oParams.selectSingleNode("input_id").text=="" ? "password_var" : oParams.selectSingleNode("input_id").text;
					var oInput = document.getElementById(argobj.pid+"_input");
					if(bGlobal) {
						g_arVars[sVarName] = oInput.value;
					} else {
						g_arSlideVars[sVarName] = oInput.value;
					}
					return true;
				}
				]]>
</method>
<method type="form_002_password" name="ReadInput">
<![CDATA[

                function ReadInput(argobj)
                {
                    if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					if(oParams==null) return false;
					var bGlobal = oParams.selectSingleNode("var_scope").text=="global";
					var sVarName = oParams.selectSingleNode("input_id").text=="" ? "input_var" : oParams.selectSingleNode("input_id").text;
					var oInput = document.getElementById(argobj.pid+"_input");
					if(bGlobal) {
						g_arVars[sVarName] = oInput.value;
					} else {
						g_arSlideVars[sVarName] = oInput.value;
					}
					return true;
				}
				]]>
</method>
<method type="form_002_password" name="AcceptInput">
<![CDATA[

                function AcceptInput(argobj)
                {
                    if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					if(oParams==null) return false;
					var bGlobal = oParams.selectSingleNode("var_scope").text=="global";
					var sVarName = oParams.selectSingleNode("input_id").text=="" ? "input_var" : oParams.selectSingleNode("input_id").text;
					var oInput = document.getElementById(argobj.pid+"_input");
					if(bGlobal) {
						g_arVars[sVarName] = oInput.value;
					} else {
						g_arSlideVars[sVarName] = oInput.value;
					}
					FireEvent(argobj.pid, "onLeave");
					return true;
				}
				]]>
</method>
<method type="form_002_password" name="DisableInput">
<![CDATA[

                function DisableInput(argobj)
                {
                    if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oInput = document.getElementById(argobj.pid+"_input");
					oInput.disabled = true;
					return true;
				}
				]]>
</method>
<method type="form_002_password" name="EnableInput">
<![CDATA[

                function EnableInput(argobj)
                {
                    if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oInput = document.getElementById(argobj.pid+"_input");
					oInput.disabled = false;
					return true;
				}
				]]>
</method>
<method type="form_002_password" name="SetValue">
<![CDATA[

                function SetValue(argobj)
                {
                    if(argobj.pid==null || argobj.val==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					if(oParams==null) return false;
					var bGlobal = oParams.selectSingleNode("var_scope").text=="global";
					var sVarName = oParams.selectSingleNode("input_id").text=="" ? "input_var" : oParams.selectSingleNode("input_id").text;
					var oInput = document.getElementById(argobj.pid+"_input");
					var sString = ReplacePropertiesInStr(argobj.val);
					sString = ReplaceVariablesInStr(sString);
					oInput.value = sString;
					if(bGlobal) {
						g_arVars[sVarName] = oInput.value;
					} else {
						g_arSlideVars[sVarName] = oInput.value;
					}
					return true;
				}
				]]>
</method>
<method type="form_002_password" name="GetProperty">
<![CDATA[

				function GetProperty(argobj)
				{
					if(argobj.pid==null || argobj.property==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oInput = document.getElementById(argobj.pid+"_input");
					switch(argobj.property.toLowerCase()) {
						case "disabled":		g_vPropertyValue = oInput.disabled ? "1" : "0";	break;
						case "value":			g_vPropertyValue = oInput.value; 	break;
						default: return true;
					}
					return true;
				}
				]]>
</method>
<method type="q_099_test" name="Constructor">
<![CDATA[

                function Constructor(argobj)
                {
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					if(oParams==null) return false;
					var aQuestions = oParams.selectNodes("q_questions/item");
					if(aQuestions.length==0) return false;
					var oArgs = new Object;
					oArgs.pid = argobj.pid;
					oArgs.action = "init";
					CallMethod("q_099_test", "Dispatcher", oArgs);
					return true;
				}
                ]]>
</method>
<method type="q_099_test" name="DisplayQuestion">
<![CDATA[

				function DisplayQuestion(argobj)
				{
					if(argobj.pid==null || argobj.qid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					if(oParams==null) return false;
					var aQuestions = oParams.selectNodes("q_questions/item");
					var oQuestion = aQuestions[argobj.qid];
					var sType = oQuestion.selectSingleNode("q_type").text;
					var sTestMode = oCurObj.getAttribute("mode");
					var sID = argobj.pid + "_" + argobj.qid;
					document.getElementById(argobj.pid+"_q_workarea").style.visibility = "visible";
					document.getElementById(argobj.pid+"_q_otoworkarea").style.visibility = "visible";

					switch(sType) {
						case "choice":
						case "select":		var sIType = "multiple_choice"; break;
						case "range":		var sIType = "sequencing"; 		break;
						case "numeric":		var sIType = "numeric"; 		break;
						case "text":		var sIType = "fill_in"; 		break;
						case "oto":			var sIType = "matching"; 		break;
						default:			var sIType = "other"; 			break;
					}

					var bShuffle = false;
					var bQTimerEnabled = oParams.selectSingleNode("test_q_timer_switch").text=="yes" ? true : false;
					var bTimer = oQuestion.selectSingleNode("q_timer_switch").text=="yes" ? true : false;
					if(!bQTimerEnabled) bTimer = false;
					var bSkip = oQuestion.selectSingleNode("q_skip").text=="yes" ? true : false;
					var bSkipFail = oQuestion.selectSingleNode("q_skipper2").text=="yes" ? true : false;
					if(sType=="range" || sType=="oto") bShuffle = true;
					if(sType=="choice" || sType=="select") 	bShuffle = oQuestion.selectSingleNode("q_shuffle").text=="yes" ? true : false;
					var aoVars = oQuestion.selectNodes("q_"+sType+"_variants/item");
					oCurObj.setAttribute("qitems", aoVars.length);

					var oArgs = new Object;
					oArgs.pid = argobj.pid;
					oArgs.qid = argobj.qid;
					var dDate = new Date();
					var iDate = dDate.valueOf();
					var sDate = iDate.toString();

					var sMode = "init";
					var oInteraction = GetInteraction(sID);

					if(oInteraction!=null) {
						var sIntLatency = GetInteractionParam(sID, "latency");
						var sIntTimestamp = GetInteractionParam(sID, "timestamp");
						if(sIntTimestamp!=null && sIntLatency==null) sMode = "continue";
						if(sIntTimestamp!=null && sIntLatency!=null) sMode = "browse";
						var sStorage = GetInteractionParam(sID, "description");
						var aParts = sStorage.split("[,]");
						var aAtts = aParts[0].split("/");
						var iAttLeft = parseInt(aAtts[0],10);
						var sAttLeft = iAttLeft.toString();
						var iAttempts = parseInt(aAtts[1],10);
						var sAttempts = iAttempts.toString();
					} else {
						var bAutoAttempts = oQuestion.selectSingleNode("q_att_auto").text=="yes" ? true : false;
						var sAttempts = oQuestion.selectSingleNode("q_attempts").text;
						var iAttempts = parseInt(sAttempts,10);
						if(isNaN(iAttempts)) iAttempts = 1;
						if(bAutoAttempts) {
							if(aoVars.length>1) {
								iAttempts = aoVars.length - 1;
							} else {
								iAttempts = 1;
							}
							sAttempts = iAttempts.toString();
						}
						var sAttLeft = sAttempts;
					}
					if(sTestMode=="review") sMode = "browse";
					if(sMode=="init") {
						oCurObj.setAttribute("q_start", sDate);
						if(bMulti) {
							var sTmpID;
							oInteraction = ReturnInteraction(sID,true);
							SetInteractionParam(sID, "type", "other");
							for(var i=0;i<aoVars.length;i++) {
								sTmpID = sID+"_"+i.toString();
								oInteraction = ReturnInteraction(sTmpID,true);
								SetInteractionParam(sTmpID, "type", sIType);
							}
						} else {
							oInteraction = ReturnInteraction(sID,true);
							SetInteractionParam(sID, "type", sIType);
						}
					} else {
						oCurObj.setAttribute("q_start", ConvertDateFromISO8601(sIntTimestamp));
					}

					oCurObj.setAttribute("q_maxattempts", sAttempts);
					oCurObj.setAttribute("q_attemptslast", sAttLeft);
					document.getElementById(argobj.pid+"_q_attempts_count").innerHTML = sAttLeft;

					var bQuest = true;
					if(oQuestion.selectSingleNode("q_showq")!=null) bQuest = oQuestion.selectSingleNode("q_showq").text=="no" ? false : true;


				// Pictures, if any
					if(oParams.selectSingleNode("qtiimages").text=="yes") {
						var oImgContainer = document.getElementById(argobj.pid+"_q_imgcontainer");

						var aImgs = oImgContainer.getElementsByTagName("img");
						if(aImgs.length>0) {
							var oImg;
							for(var i=0;i<aImgs.length;i++) {
								oImg = oImgContainer.removeChild(aImgs[i]);
								oImg = null;
							}
							oImgContainer.style.width = "1px";
							if(oParams.selectSingleNode("q_realskin").text=="basic"){
								document.getElementById(argobj.pid+"_q_workarea").style.width = parseInt(oCurObj.style.width,10);
								document.getElementById(argobj.pid+"_q_qcontainer").style.width = parseInt(oCurObj.style.width,10);
							} else {
								document.getElementById(argobj.pid+"_q_workarea").style.width = parseInt(oCurObj.style.width,10) - 26;
								document.getElementById(argobj.pid+"_q_qcontainer").style.width = parseInt(oCurObj.style.width,10) - 20;
								document.getElementById(argobj.pid+"_test_container").style.width = parseInt(oCurObj.style.width,10) - 20;

							}
						}

						if(oQuestion.selectSingleNode("q_image").firstChild!=null) {
							if(oQuestion.selectSingleNode("q_image").text!="") {
								var oImg = document.createElement("img");
								oImg.src = oQuestion.selectSingleNode("q_image").text;
								oImgContainer.appendChild(oImg);
								if(oParams.selectSingleNode("q_realskin").text=="basic"){
									document.getElementById(argobj.pid+"_q_workarea").style.width = parseInt(oCurObj.style.width,10) - parseInt(oImg.offsetWidth,10);
									document.getElementById(argobj.pid+"_q_qcontainer").style.width = parseInt(oCurObj.style.width,10);
								} else {
									document.getElementById(argobj.pid+"_q_workarea").style.width = parseInt(oCurObj.style.width,10) - parseInt(oImg.offsetWidth,10) - 26;
									document.getElementById(argobj.pid+"_q_qcontainer").style.width = parseInt(oCurObj.style.width,10) - parseInt(oImg.offsetWidth,10) - 20;
									document.getElementById(argobj.pid+"_test_container").style.width = parseInt(oCurObj.style.width,10) - 20;
								}
							}
						}

					}

				// Question basics
					var oCurQ = document.getElementById(argobj.pid+"_test_currentq");
					var iQID = parseInt(argobj.qid,10) + 1;
					oCurQ.innerHTML = iQID.toString();
					oCurObj.setAttribute("currentquestion", iQID);
					var oTotalQ = document.getElementById(argobj.pid+"_test_totalq");
					oTotalQ.innerHTML = aQuestions.length;
					oCurObj.setAttribute("totalquestion", aQuestions.length);

					var sQText = oQuestion.selectSingleNode("q_question").text;
					var oQText = document.getElementById(argobj.pid+"_q_text");
					if(bQuest) oQText.innerHTML = sQText;

					oArgs.msg = sTestMode=="review" ? "last" : sType;
					CallMethod("q_099_test", "DisplayMessage", oArgs);

					if(sMode=="init" && bSkip) {
						oArgs.btn = "skip";
						CallMethod("q_099_test", "DisplayButton", oArgs);
					}

					// Set basic params

					var bMulti = (aoVars.length>1 && (sType=="numeric" || sType=="text"));
					oCurObj.setAttribute("multi", bMulti ? "1" : "0");

				// Drawing items
					if(bShuffle) {
						if(sMode=="init") {
							var aShuffled = new Array();
							for(var i=0;i<aoVars.length;i++) aShuffled[i] = ThrowDice(aoVars.length, false, aShuffled, 100);
						}
					}

					var aOrder = new Array();
					var aCorrects = new Array();
					oCurObj.setAttribute("qtype", sType);
					switch(sType) {
						case "oto":
							var oHolder = document.getElementById(argobj.pid+"_q_holder");
							var oMain = document.getElementById(argobj.pid+"_q_workarea");
								oMain.style.display = "none";
								oMain = document.getElementById(argobj.pid+"_q_otoworkarea");
								oMain.innerHTML = "";
								oMain.style.display = g_isMSIE ? "inline" : "block";
								oMain.style.height = 45*aoVars.length+15+"px";
								oMain.style.width = oHolder.offsetWidth+"px";

							oArgs.enabled = sMode=="browse" ? false : true;
							oArgs.state = "";
							if(sMode!="init") {
								var sResponse = GetInteractionParam(sID, "learner_response");
								if(sResponse!=null) {
									var aResponse = sResponse.split("[,]");
									var aStored = new Array();
									var aTmp = new Array();
									for(var i=0;i<aResponse.length;i++) {
										aTmp = aResponse[i].split("[.]");
										aOrder[parseInt(aTmp[0],10)] = aTmp[1];
									}
									oArgs.state = "connected";
								} else {
									var aDesc = sStorage.split("[,]");
									var sTmp = aDesc[1];
									var aOrder = sTmp.split("~");
								}
							}
							for(var i=0;i<aoVars.length;i++) {
								oArgs.targetid = i;
								if(sMode=="init") {
									oArgs.matchid = aShuffled[i];
									aOrder.push(oArgs.matchid);
									aCorrects.push(i.toString()+"[.]"+i.toString());
								} else {
									oArgs.matchid = aOrder[i];
								}
								CallMethod("q_099_test", "AppendItem", oArgs);
							}

							if(sMode=="init") if(aCorrects.length>0) SetInteractionArrayItem(sID, "correct_responses", aCorrects.join("[,]"));
							oCurObj.setAttribute("q_varlength", aoVars.length.toString());
							oCurObj.setAttribute("order", aOrder.join("~"));
							oCurObj.setAttribute("qid", argobj.qid);
							break;
						case "choice":
						case "select":
							var oMain = document.getElementById(argobj.pid+"_q_otoworkarea");
								oMain.style.display = "none";
								oMain = document.getElementById(argobj.pid+"_q_workarea");
								oMain.innerHTML = "";
								oMain.style.display = g_isMSIE ? "inline" : "block";

							if(sMode!="init") {
								var aChecked = new Array();
								var sResponse = GetInteractionParam(sID, "learner_response");
								if(sResponse!=null) aChecked = sResponse.split("[,]");
								var aDesc = sStorage.split("[,]");
								var sTmp = aDesc[1];
								var aOrder = sTmp.split("~");
							} else {
								for(var i=0;i<aoVars.length;i++) {
									oNode = aoVars[i].selectSingleNode("q_right");
									if(oNode.text=="yes") aCorrects.push(i.toString());
								}
								if(aCorrects.length>0) SetInteractionArrayItem(argobj.pid+"_"+argobj.qid, "correct_responses", aCorrects.join("[,]"));
							}

							oArgs.checked = false;
							oArgs.enabled = sMode=="browse" ? false : true;
							for(var i=0;i<aoVars.length;i++) {
								if(sMode=="init") {
									oArgs.inum = bShuffle ? aShuffled[i] : i;
									aOrder.push(oArgs.inum);
								} else {
									oArgs.inum = parseInt(aOrder[i],10);
									oArgs.checked = false;
									if(aChecked.length!=null) {
										for(var j=0;j<aChecked.length;j++) {
											if(parseInt(aChecked[j],10)==oArgs.inum) {
												oArgs.checked = true;
												break;
											}
										}
									}
								}
								CallMethod("q_099_test", "AppendItem", oArgs);
							}

							oCurObj.setAttribute("q_varlength", aoVars.length.toString());
							oCurObj.setAttribute("order", aOrder.join("~"));
							oCurObj.setAttribute("qid", argobj.qid);
							break;
						case "range":
							var oMain = document.getElementById(argobj.pid+"_q_workarea");
							oMain.innerHTML = "";
							oMain.style.display = g_isMSIE ? "inline" : "block";
							oMain = document.getElementById(argobj.pid+"_q_otoworkarea");
							oMain.style.display = "none";
							if(sMode!="init") {
								var sState = GetInteractionParam(sID, "learner_response");
								if(sState==null) {
									var aStored = aShuffled;
								} else {
									var aStored = sState.split("[,]");
								}
							}
							for(var i=0;i<aoVars.length;i++) {
								oArgs.inum = sMode=="init" ? aShuffled[i] : aStored[i];
								aOrder.push(oArgs.inum);
								aCorrects.push(i.toString());
								oArgs.vnum = i;
								oArgs.hide = "";
								if(i==0) oArgs.hide = "u";
								if(i==aoVars.length-1) oArgs.hide = "d";
								CallMethod("q_099_test", "AppendItem", oArgs);
							}
							oCurObj.setAttribute("q_varlength", aoVars.length.toString());
							oCurObj.setAttribute("order", aOrder.join("~"));
							oCurObj.setAttribute("qid", argobj.qid);
							if(sMode=="init") if(aCorrects.length>0) SetInteractionArrayItem(argobj.pid+"_"+argobj.qid, "correct_responses", aCorrects.join("[,]"));
							break;
						case "numeric":
						case "text":
							var oMain = document.getElementById(argobj.pid+"_q_workarea");
							oMain.innerHTML = "";
							oMain.style.display = g_isMSIE ? "inline" : "block";
							oMain = document.getElementById(argobj.pid+"_q_otoworkarea");
							oMain.style.display = "none";
							oArgs.enabled = sMode=="browse" ? false : true;
							for(var i=0;i<aoVars.length;i++) {
								oArgs.inum = i;
								if(sMode!="init") {
									oArgs.value = GetInteractionParam(bMulti ? sID+"_"+i.toString() : sID, "learner_response");
								} else {
									oArgs.value = "";
								}
								aOrder.push(oArgs.inum);
								CallMethod("q_099_test", "AppendItem", oArgs);
							}
							oCurObj.setAttribute("q_varlength", aoVars.length.toString());
							oCurObj.setAttribute("order", aOrder.join("~"));
							oCurObj.setAttribute("qid", argobj.qid);
							if(sMode=="init") CallMethod("q_099_test", "RecordCorrectAnswers", oArgs);
							break;
						default: return false;
					}
					if(sMode=="browse") CallMethod("q_099_test", "DisableItems", oArgs);


					// Set timer
					var oQTimerTable = document.getElementById(argobj.pid+"_q_timer_area");
					if(!bTimer) {
						oQTimerTable.style.display = "none";
						SetInteractionParam(sID, "description", sAttLeft+"/"+sAttempts+"[,]"+aOrder.join("~"));
						if(bMulti) for(var i=0;i<aoVars.length;i++) SetInteractionParam(sID+"_"+i.toString(), "description", sAttLeft+"/"+sAttempts+"[,]"+aOrder.join("~"));
					}
					if(bTimer) {
						var sTimerValue = oQuestion.selectSingleNode("q_timer").text;
						if(sTimerValue==null || isNaN(parseInt(sTimerValue,10))) {
							bTimer = false;
						} else {
							oQTimerTable.style.display = g_isMSIE ? "inline" : "block";
							var oQTimerValue = document.getElementById(argobj.pid+"_q_timer_value");
							if(sMode!="init") {
								var aTimer = aParts[2].split("/");
								var sTimerRestore = aTimer[0];
							}
							if(sTestMode=="review") {
								if(sTimerRestore==null) sTimerRestore = sTimerValue;
								oCurObj.setAttribute("q_timer_active", "1");
								oCurObj.setAttribute("q_timer", sTimerRestore);
								oCurObj.setAttribute("q_timer_total", sTimerValue);
								oArgs.restore = "1";
								CallMethod("q_099_test", "TickTimer", oArgs);
								oArgs.restore = null;
								if(sMode!="browse") {
									if(sTimerRestore!="0")	CreateTimeActionMethod("q_099_test", "TickTimer", null, 1000, oArgs);
								}
							} else {
								oQTimerValue.innerHTML = sTimerValue + " sec";
								oCurObj.setAttribute("q_timer", sMode=="init" ? sTimerValue : sTimerRestore);
								oCurObj.setAttribute("q_timer_total", sTimerValue);
								oCurObj.setAttribute("q_timer_active", "1");
								CreateTimeActionMethod("q_099_test", "TickTimer", null, 1000, oArgs);
								SetInteractionParam(sID, "description", sAttLeft+"/"+sAttempts+"[,]"+aOrder.join("~")+"[,]"+sTimerValue+"/"+sTimerValue);
								if(bMulti) for(var i=0;i<aoVars.length;i++) SetInteractionParam(sID+"_"+i.toString(), "description", sAttLeft+"/"+sAttempts+"[,]"+aOrder.join("~")+"[,]"+sTimerValue+"/"+sTimerValue);
							}
						}
					}
					if(sMode=="browse") {
						var iIdx = parseInt(argobj.qid,10)+1;
						if(aQuestions[iIdx]!=null) {
							if(GetInteractionParam(argobj.pid+"_"+iIdx.toString(), "timestamp")!=null) {
								oArgs.action = "next";
								CallMethod("q_099_test", "Dispatcher", oArgs);
							} else {
								document.getElementById(argobj.pid+"_q_nomore").style.display = g_isMSIE ? "inline" :  "block";
							}
						}
					}
					FireEvent(argobj.pid,"onDisplayQuestion");
					return true;
                }
                ]]>
</method>
<method type="q_099_test" name="Dispatcher">
<![CDATA[

                function Dispatcher(argobj)
                {
					if(argobj.pid==null || argobj.action==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					if(oParams==null) return false;
					var bCurTestTimer = oParams.selectSingleNode("test_timer_switch").text=="yes" ? true : false;
					var bCredit = oParams.selectSingleNode("test_scored").text=="yes" ? true : false;
					var aQuestions = oParams.selectNodes("q_questions/item");
					oCurObj.setAttribute("qtotal", aQuestions.length);
					var oArgs = new Object;
					oArgs.pid = argobj.pid;
					var dDate = new Date();
					var iDate = dDate.valueOf();
					var sDate = iDate.toString();

					switch(argobj.action) {
						case "init":
							var sMode = "init";
							var sTestAtt = "1";
							var bRecur = oParams.selectSingleNode("repeat_test").text=="yes" ? true : false;
							var sTestAllowed = bRecur ? "-" : "1";
							var oInteraction = GetInteraction(argobj.pid);
							if(oInteraction!=null) {
								var sIntLatency = GetInteractionParam(argobj.pid, "latency");
								var sIntTimestamp = GetInteractionParam(argobj.pid, "timestamp");
								var sResult = GetInteractionParam(argobj.pid, "result");
								var sVisited = GetInteractionParam(argobj.pid, "learner_response");
								if(sIntTimestamp!=null && sIntLatency==null) sMode = "continue";
								if(sIntTimestamp!=null && sIntLatency!=null) sMode = "browse";
							}
							if(sMode=="continue") {
								alert(oParams.selectSingleNode("t_continue_alert").text);
								var iNextQID = 0;
								var sNextQID = "";
								if(sVisited!=null) {
									var aVisited = sVisited.split("[,]");
									if(aVisited.length!=0) {
										sNextQID = aVisited[aVisited.length-1];
										sNextQID = sNextQID.substr(argobj.pid.length+1);
										iNextQID = parseInt(sNextQID,10);
										if(isNaN(iNextQID)) iNextQID = 0;
										iNextQID++;
									}
								}
								if(bCurTestTimer) {
									oArgs.restore = true;
									oArgs.start = true;
									CallMethod("q_099_test", "InitTestTimer", oArgs);
								}
								oCurObj.setAttribute("mode", "normal");
								oCurObj.setAttribute("t_scored", bCredit ? "1" : "0");
								oCurObj.setAttribute("t_state", "na");
								oCurObj.setAttribute("t_mode", sMode);
								oCurObj.setAttribute("t_start", sDate);
								oCurObj.setAttribute("running", "1");
								oArgs.qid = iNextQID;
								AddEvtHandler("EVENT_DRAG_END", "q_099_test", argobj.pid);
								CallMethod("q_099_test", "DisplayQuestion", oArgs);
								return true;
							}
							if(sMode=="browse") {
								if(bRecur) {
									if(confirm(oParams.selectSingleNode("t_secondrun_confirm").text)) {
										sMode = "init";
										var sStorage = GetInteractionParam(argobj.pid, "description");
										var aParts = sStorage.split("[,]");
										var aAtts = aParts[0].split("/");
										sTestAtt = parseInt(aAtts[0],10) + 1;
										if(sVisited!=null) {
											var aVisited = sVisited.split("[,]");
											var oObjective;
											var sObjID;
											var aSources;
											for(var i=0;i<aVisited.length;i++) {
												RemoveInteractionNode(aVisited[i]);
												aSources = g_oSCO.selectNodes("objectives/o/s[@id='"+aVisited[i]+"']");
												for(var j=0;j<aSources.length;j++) {
													oObjective = aSources[j].parentNode;
													sObjID = oObjective.getAttribute("id");
													SetObjectiveScore(sObjID, aVisited[i], "replace", "0");
												}
											}
										}
									} else {
										// enter browse mode
				//						alert(oParams.selectSingleNode("t_browse_alert").text);
										oCurObj.setAttribute("mode", "review");
										if(bCurTestTimer) {
											oArgs.restore = true;
											oArgs.start = false;
											CallMethod("q_099_test", "InitTestTimer", oArgs);
										}
										oArgs.qid = 0;
										CallMethod("q_099_test", "DisplayQuestion", oArgs);
										return true;
									}
								} else {
									alert(oParams.selectSingleNode("t_browse_alert").text);
									oCurObj.setAttribute("mode", "review");
									if(bCurTestTimer) {
										oArgs.restore = true;
										oArgs.start = false;
										CallMethod("q_099_test", "InitTestTimer", oArgs);
									}
									oArgs.qid = 0;
									CallMethod("q_099_test", "DisplayQuestion", oArgs);
									return true;
								}
							}
							if(sMode=="init") {
								oInteraction = ReturnInteraction(argobj.pid,true);
								SetInteractionParam(argobj.pid, "type", "sequencing");
								var aSequence = new Array();
								for(var i=0;i<aQuestions.length;i++) aSequence.push(i.toString());
								SetInteractionArrayItem(argobj.pid, "correct_response", aSequence.join("[,]"));
								var aOrder = new Array();
								for(var i=0;i<aQuestions.length;i++) aOrder.push(i.toString());
								if(bCurTestTimer) {
									oArgs.restore = false;
									oArgs.start = true;
									CallMethod("q_099_test", "InitTestTimer", oArgs);
									var sTimer = oCurObj.getAttribute("ttimer");
									SetInteractionParam(argobj.pid, "description", sTestAtt+"/"+sTestAllowed+"[,]"+aOrder.join("~")+"[,]"+sTimer+"/"+sTimer);
								} else {
									SetInteractionParam(argobj.pid, "description", sTestAtt+"/"+sTestAllowed+"[,]"+aOrder.join("~"));
								}
								oCurObj.setAttribute("mode", "normal");
								oCurObj.setAttribute("t_scored", bCredit ? "1" : "0");
								oCurObj.setAttribute("t_state", "na");
								oCurObj.setAttribute("t_mode", sMode);
								oCurObj.setAttribute("t_start", sDate);
								oCurObj.setAttribute("running", "1");
								oArgs.qid = 0;
								oCurObj.running = "1";
								AddEvtHandler("EVENT_DRAG_END", "q_099_test", argobj.pid);
								CallMethod("q_099_test", "DisplayQuestion", oArgs);
								return true;
							}
							break;
						case "stop":
							oCurObj.setAttribute("testtimerstop","1");
							oArgs.btn = "next";
							CallMethod("q_099_test", "HideButton", oArgs);
							oArgs.btn = "check";
							CallMethod("q_099_test", "HideButton", oArgs);
							oArgs.btn = "skip";
							CallMethod("q_099_test", "HideButton", oArgs);
							var sBegin = GetInteractionParam(argobj.pid, "timestamp");
							var iBegin = ConvertDateFromISO8601(sBegin);
							var iLatency = iDate - iBegin;
							var sLatency = ConvertPeriodToISO8601(iLatency);
							SetInteractionParam(argobj.pid, "latency", sLatency);
							document.getElementById(argobj.pid+"_q_teststopped").style.display = g_isMSIE ? "inline" : "block";
							FireEvent(argobj.pid,"onTestEnd");
							return true;
						case "next":
							oCurObj.setAttribute("running", "0");
							if(oCurObj.getAttribute("testtimeout")=="1") {
								oCurObj.setAttribute("testtimerstop","1");
								var sBegin = GetInteractionParam(argobj.pid, "timestamp");
								var iBegin = ConvertDateFromISO8601(sBegin);
								var iLatency = iDate - iBegin;
								var sLatency = ConvertPeriodToISO8601(iLatency);
								SetInteractionParam(argobj.pid, "latency", sLatency);
								document.getElementById(argobj.pid+"_q_teststopped").style.display = g_isMSIE ? "inline" : "block";
								FireEvent(argobj.pid,"onTestEnd");
								return false;
							}
							if(oCurObj.getAttribute("secondtrip")!="1") {
								if(oCurObj.getAttribute("teststop")!="1") {
									var iIdx = parseInt(argobj.qid,10);
									iIdx++;
									var oQuestion = aQuestions[iIdx];
									if(oQuestion==null) {
										var aSkipped = new Array();
										var sID;
										for(var i=0;i<aQuestions.length;i++) {
											sID = argobj.pid + "_" + i.toString();
											var oInteraction = GetInteraction(sID);
											if(oInteraction!=null) {
												var sIntLatency = GetInteractionParam(sID, "latency");
												var sIntTimestamp = GetInteractionParam(sID, "timestamp");
												if(sIntTimestamp!=null && sIntLatency==null) aSkipped.push(i);
											}
										}
										if(aSkipped.length==0) {
											oCurObj.setAttribute("testtimerstop","1");
											oCurObj.setAttribute("teststop", "1");
											var sBegin = GetInteractionParam(argobj.pid, "timestamp");
											var iBegin = ConvertDateFromISO8601(sBegin);
											var iLatency = iDate - iBegin;
											var sLatency = ConvertPeriodToISO8601(iLatency);
											SetInteractionParam(argobj.pid, "latency", sLatency);
											document.getElementById(argobj.pid+"_q_testend").style.display = g_isMSIE ? "inline" : "block";
											FireEvent(argobj.pid,"onTestEnd");
											return false;
										}
										oCurObj.setAttribute("qid", aSkipped[0].toString());
										oCurObj.running = "0";
										oArgs.btn = "next";
										if(aSkipped.length==1) {
											oCurObj.setAttribute("teststop", "1");
											CallMethod("q_099_test", "DisplayButton", oArgs);
											return false;
										}
										oCurObj.setAttribute("secondtrip", "1");
										CallMethod("q_099_test", "DisplayButton", oArgs);
										return false;
									} else {
										oCurObj.setAttribute("qid",iIdx.toString());
										oCurObj.running = "0";
										oArgs.btn = "next";
										CallMethod("q_099_test", "DisplayButton", oArgs);
										return true;
									}
								} else {
									oCurObj.setAttribute("testtimerstop","1");
									oCurObj.setAttribute("teststop", "1");
									var sBegin = GetInteractionParam(argobj.pid, "timestamp");
									var iBegin = ConvertDateFromISO8601(sBegin);
									var iLatency = iDate - iBegin;
									var sLatency = ConvertPeriodToISO8601(iLatency);
									SetInteractionParam(argobj.pid, "latency", sLatency);
									document.getElementById(argobj.pid+"_q_testend").style.display = g_isMSIE ? "inline" : "block";
									FireEvent(argobj.pid,"onTestEnd");
									return false;
								}
							} else {
								var aSkipped = new Array();
								var sID;
								for(var i=0;i<aQuestions.length;i++) {
									sID = argobj.pid + "_" + i.toString();
									var oInteraction = GetInteraction(sID);
									if(oInteraction!=null) {
										var sIntLatency = GetInteractionParam(sID, "latency");
										var sIntTimestamp = GetInteractionParam(sID, "timestamp");
										if(sIntTimestamp!=null && sIntLatency==null) aSkipped.push(i);
									}
								}
								if(aSkipped.length==0) {
									oCurObj.setAttribute("testtimerstop","1");
									oCurObj.setAttribute("teststop", "1");
									var sBegin = GetInteractionParam(argobj.pid, "timestamp");
									var iBegin = ConvertDateFromISO8601(sBegin);
									var iLatency = iDate - iBegin;
									var sLatency = ConvertPeriodToISO8601(iLatency);
									SetInteractionParam(argobj.pid, "latency", sLatency);
									document.getElementById(argobj.pid+"_q_testend").style.display = g_isMSIE ? "inline" : "block";
									FireEvent(argobj.pid,"onTestEnd");
									return false;
								}
								oCurObj.setAttribute("qid", aSkipped[0].toString());
								oCurObj.running = "0";
								oArgs.btn = "next";
								if(aSkipped.length==1) {
									oCurObj.setAttribute("teststop", "1");
									CallMethod("q_099_test", "DisplayButton", oArgs);
									return false;
								}
								oCurObj.setAttribute("secondtrip", "1");
								CallMethod("q_099_test", "DisplayButton", oArgs);
								return false;
							}
							return true;
						case "clicknext":
							oCurObj.running = "1";
							CallMethod("q_099_test", "HideFeedback", oArgs);
							oArgs.btn = "next";
							CallMethod("q_099_test", "HideButton", oArgs);
							oArgs.qid = oCurObj.getAttribute("qid");
							CallMethod("q_099_test", "DisplayQuestion", oArgs);
							return true;
						default: return false;
					}
					return true;
				}
                ]]>
</method>
<method type="q_099_test" name="GetProperty">
<![CDATA[

				function GetProperty(argobj)
				{
					if(argobj.pid==null || argobj.property==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					switch(argobj.property.toLowerCase()) {
						case "totalquestionquantity":	g_vPropertyValue = oCurObj.getAttribute("qtotal"); 	break;
						case "testmode":				g_vPropertyValue = oCurObj.getAttribute("mode")=="review" ? "review" : "normal";			break;
						case "testduration":			g_vPropertyValue = oCurObj.getAttribute("ttimer")!=null ? oCurObj.getAttribute("ttimer") : ""; 	break;
						case "testtimer":				g_vPropertyValue = oCurObj.getAttribute("ttimervalue")!=null ? oCurObj.getAttribute("ttimervalue") : ""; 	break;
						case "questionnumber":			g_vPropertyValue = oCurObj.getAttribute("qid"); break;
						case "questiontype":
							var sType = oCurObj.getAttribute("qtype");
							g_vPropertyValue = sType;
							break;
						case "questionduration":		g_vPropertyValue = oCurObj.getAttribute("q_timer_total")!=null ? oCurObj.getAttribute("q_timer_total") : ""; 	break;
						case "questiontimer":			g_vPropertyValue = oCurObj.getAttribute("q_timer")!=null ? oCurObj.getAttribute("q_timer") : ""; 	break;
						case "itemquantity":			g_vPropertyValue = oCurObj.getAttribute("qitems")!=null ? oCurObj.getAttribute("qitems") : ""; 	break;
						case "questionvalue":
							var sType = oCurObj.getAttribute("qtype");
							var iQty = parseInt(oCurObj.getAttribute("qitems"),10);
							var aResult = new Array();
							var oSpot;
							switch(sType) {
								case "choice":
								case "select":
									for(var i=0;i<iQty;i++) {
										oSpot = document.getElementById(argobj.pid+"_spot_"+i.toString());
										aResult.push(oSpot.getAttribute("state"));
									}
									g_vPropertyValue = aResult.join("~");
									break;
								case "order":
									g_vPropertyValue = oCurObj.getAttribute("order");
									break;
								case "numeric":
								case "text":
									for(var i=0;i<iQty;i++) {
										oSpot = document.getElementById(argobj.pid+"_input_"+i.toString());
										aResult.push(oSpot.value);
									}
									g_vPropertyValue = aResult.join("~");
									break;
								case "oto":
									for(var i=0;i<iQty;i++) {
										oSpot = document.getElementById(argobj.pid + "_vtarget_" + i.toString());
										aResult.push(i.toString()+"="+oSpot.getAttribute("connected"));
									}
									g_vPropertyValue = aResult.join("~");
									break;
							}
							break;
						case "attemptslast":			g_vPropertyValue = oCurObj.getAttribute("q_attemptslast")!=null ? oCurObj.getAttribute("q_attemptslast") : ""; 	break;
						case "attemptstotal":			g_vPropertyValue = oCurObj.getAttribute("q_maxattempts")!=null ? oCurObj.getAttribute("q_maxattempts") : ""; 	break;
						default: return true;
					}
					return true;
				}
				]]>
</method>
<method type="q_099_test" name="InitTestTimer">
<![CDATA[

                function InitTestTimer(argobj)
                {
					if(argobj.pid==null || argobj.start==null || argobj.restore==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					if(oParams==null) return false;
					var oArgs = new Object;
					oArgs.pid = argobj.pid;

					var bSecondRun = oParams.selectSingleNode("repeat_test").text=="yes" ? true : false;
					var bCurTestTimer = oParams.selectSingleNode("test_timer_switch").text=="yes" ? true : false;
					if(oParams.selectSingleNode("test_timer").firstChild==null && oParams.selectSingleNode("test_timer_s").firstChild==null) bCurTestTimer = false;

					if(bCurTestTimer) {
						var oTestTimerDiv = document.getElementById(argobj.pid+"_test_timer_area");
						if(oTestTimerDiv==null) return false;
						if(!argobj.restore) {
							var iMin = 0;
							var iSec = 0;
							var iTick = 0;
							if(oParams.selectSingleNode("test_timer").firstChild != null) {
								iMin= parseInt(oParams.selectSingleNode("test_timer").text,10);
								if(isNaN(iMin)) iMin = 0;
							}
							iTick = iMin*60;
							if(oParams.selectSingleNode("test_timer_s").firstChild != null) {
								var iSec = parseInt(oParams.selectSingleNode("test_timer_s").text,10);
								if(isNaN(iSec)) iSec = 0;
								iTick += iSec;
							}
						} else {
							var sStorage = GetInteractionParam(argobj.pid, "description");
							var aParts = sStorage.split("[,]");
							var aTimer = aParts[2].split("/");
							var iTick = parseInt(aTimer[0],10);
							if(iTick>=60) {
								var iMin = Math.floor(iTick/60);
								var iSec = iTick - iMin*60;
							}
							var sTotal = aTimer[1];
						}
						//oCurObj.setAttribute("testtimerstop", argobj.start ? "0" : "1");
						oTestTimerDiv.style.display = g_isMSIE ? "inline" : "table";
						var oTestTimerValue = document.getElementById(argobj.pid+"_test_timer_value");
						if(iTick<60) {
							oTestTimerValue.innerHTML = iTick.toString()+" sec";
						} else {
							oTestTimerValue.innerHTML = iMin.toString()+" min "+iSec.toString()+" sec";
						}
						var sTick = iTick.toString();
						oCurObj.setAttribute("ttimervalue", sTick);
						oCurObj.setAttribute("ttimer", argobj.restore ? sTotal : sTick);
						oArgs.restore = argobj.restore;
						oArgs.start = argobj.start;
						CreateTimeActionMethod("q_099_test", "TickTestTimer", null, argobj.restore ? 50 : 1000, oArgs);
					}
					return true;
				}
                ]]>
</method>
<method type="q_099_test" name="RecordCorrectAnswers">
<![CDATA[

				function RecordCorrectAnswers(argobj)
				{
					if(argobj.pid==null) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					if(oParams==null) return false;
					var aQuestions = oParams.selectNodes("q_questions/item");
					var oQuestion = aQuestions[argobj.qid];
					var sType = oQuestion.selectSingleNode("q_type").text;
					var aoVars = oQuestion.selectNodes("q_"+sType+"_variants/item");

					var aCond;
					var sOp;
					var rValue;
					var sValue;
					var sPattern;
					var sPattern2;
					var bGFlag = false;
					var bLFlag = false;
					var bMulti = aoVars.length>1 ? true : false;
					var bCase = false;

					if(sType=="numeric") {
						for(var i=0;i<aoVars.length;i++) {
							aCond = aoVars[i].selectNodes("q_conditions/item");
							bLFlag = false;
							bGFlag = false;
							for(var j=0;j<aCond.length;j++) {
								sOp = aCond[j].selectSingleNode("q_condition").text;
								rValue = parseFloat(aCond[j].selectSingleNode("q_variant").text);
								if(isNaN(rValue)) continue;
								sValue = FormatReal_10_7(rValue);
								if(sOp=="eq") {
									sPattern = sValue+"[:]"+sValue;
									if(bMulti) {
										SetInteractionArrayItem(argobj.pid+"_"+argobj.qid+"_"+i.toString(), "correct_responses", sPattern);
									} else {
										SetInteractionArrayItem(argobj.pid+"_"+argobj.qid, "correct_responses", sPattern);
									}
									continue;
								}
								if(sOp=="lt" || sOp=="lte") {
									if(sOp=="lt") sValue = FormatReal_10_7(parseFloat(sValue)-0.0000001);
									if(bGFlag) {
										sPattern2 = sValue + sPattern2;
									} else {
										if(bLFlag) continue;
										sPattern2 = sValue+"[:]";
										bLFlag = true;
										continue;
									}
									if(bMulti) {
										SetInteractionArrayItem(argobj.pid+"_"+argobj.qid+"_"+i.toString(), "correct_responses", sPattern);
									} else {
										SetInteractionArrayItem(argobj.pid+"_"+argobj.qid, "correct_responses", sPattern);
									}
									continue;
								}
								if(sOp=="gt" || sOp=="gte") {
									if(sOp=="gt") sValue = FormatReal_10_7(parseFloat(sValue)+0.0000001);
									if(bLFlag) {
										sPattern2 += sValue;
									} else {
										if(bGFlag) continue;
										sPattern2 = "[:]"+sValue;
										bGFlag = true;
										continue;
									}
									if(bMulti) {
										SetInteractionArrayItem(argobj.pid+"_"+argobj.qid+"_"+i.toString(), "correct_responses", sPattern);
									} else {
										SetInteractionArrayItem(argobj.pid+"_"+argobj.qid, "correct_responses", sPattern);
									}
									continue;
								}
							}
						}
					} else {
						for(var i=0;i<aoVars.length;i++) {
							var aCorrects = new Array();
							aCond = aoVars[i].selectNodes("q_conditions/item");
							for(var j=0;j<aCond.length;j++) {
								sOp = aCond[j].selectSingleNode("q_condition").text;
								sValue = aCond[j].selectSingleNode("q_variant").text;
								bCase = aCond[j].selectSingleNode("q_case").text=="yes" ? true : false;
								sPattern = bCase ? "{case_matters=true}" : "{case_matters=false}";
								if(sOp=="eq") {
									aCorrects.push(sPattern + sValue);
									continue;
								}
								if(sOp=="bw") {
									aCorrects.push(sPattern + "*" + sValue);
									continue;
								}
								if(sOp=="ew") {
									aCorrects.push(sPattern + sValue + "*");
									continue;
								}
								if(sOp=="cn") {
									aCorrects.push(sPattern + "*" + sValue + "*");
									continue;
								}
							}
							if(bMulti) {
								SetInteractionArrayItem(argobj.pid+"_"+argobj.qid+"_"+i.toString(), "correct_responses", aCorrects.join("[,]"));
							} else {
								SetInteractionArrayItem(argobj.pid+"_"+argobj.qid, "correct_responses", aCorrects.join("[,]"));
							}
						}
					}
					return true;
                }
                ]]>
</method>
<method type="q_099_test" name="HandleEvt">
<![CDATA[

				function HandleEvt(oEvtHandler)
				{
					switch (oEvtHandler.sEvt) {
						case "EVENT_DRAG_END":
							var argobj = new Object;
							argobj.pid = oEvtHandler.sTargetId;
							var oCurObj = document.getElementById(argobj.pid);
							if(oCurObj==null) return false;
							if(document.getElementById(argobj.pid+"_q_b_skip_container").style.display!="none") {
								var oArgs = new Object;
								oArgs.pid = argobj.pid;
								oArgs.btn = "skip";
								CallMethod("q_099_test", "HideButton", oArgs);
							}
							if(g_oDragObject==null) return false;
							if(document.getElementById(argobj.pid+"_q_b_skip_container")!=null) document.getElementById(argobj.pid+"_q_b_skip_container").style.display = "none";
							var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
							var iBulletW = parseInt(oParams.selectSingleNode("q_bulletwidth").text,10);
							var iTargetW = parseInt(oParams.selectSingleNode("q_targetwidth").text,10);
							var aQuestions = oParams.selectNodes("q_questions/item");
							argobj.qid = oCurObj.getAttribute("qid");
							var oQuestion = aQuestions[argobj.qid];
							var aoVars = oQuestion.selectNodes("q_oto_variants/item");
							var iCurX = g_oDragObject.offsetLeft;
							var iCurY = g_oDragObject.offsetTop;
							var iCurW = g_oDragObject.offsetWidth;
							var iCurH = g_oDragObject.offsetHeight;
							var iMarginX = document.getElementById(argobj.pid+"_q_otoworkarea").offsetLeft;
							var iMarginY = document.getElementById(argobj.pid+"_q_otoworkarea").offsetTop;
							var iAreaW = document.getElementById(argobj.pid+"_q_otoworkarea").offsetWidth;
							var iAreaH = document.getElementById(argobj.pid+"_q_otoworkarea").offsetHeight;
							if(iCurX <= 0) g_oDragObject.style.left = "5px";
							if(iCurY <= 0) g_oDragObject.style.top = "5px";
							if(iCurX >= (iAreaW - iCurW)) g_oDragObject.style.left = iAreaW - iCurW - 5 + "px";
							if(iCurY >= (iAreaH - iCurH)) g_oDragObject.style.top = iAreaH - iCurH - 5 + "px";
							iCurX = g_oDragObject.offsetLeft;
							iCurY = g_oDragObject.offsetTop;
							var oTarget;
							if(iCurX < (iTargetW+10) && iCurX > 10) {
								var iTargetNum = Math.floor((iCurY+iCurH/2)/45);
								var oCurTarget = document.getElementById(argobj.pid+"_vtarget_"+iTargetNum.toString());
								if(oCurTarget!=null) {
									if(oCurTarget.getAttribute("connected")=="none" || (oCurTarget.getAttribute("connected")==g_oDragObject.getAttribute("target"))) {
										g_oDragObject.style.top = oCurTarget.offsetTop + "px";
										g_oDragObject.style.left = 8 + iTargetW + "px";
										g_oDragObject.style.borderLeftColor = "#E0E0E0";
										oCurTarget.style.borderRightStyle = "none";
										oCurTarget.setAttribute("connected", g_oDragObject.getAttribute("target"));
										g_oDragObject.setAttribute("connected", iTargetNum.toString());
										for(var i=0;i<aoVars.length;i++) {
											if(i==iTargetNum) continue;
											oTarget = document.getElementById(argobj.pid+"_vtarget_"+i.toString());
											if(oTarget.getAttribute("connected") == g_oDragObject.getAttribute("target")) {
												oTarget.style.borderRightStyle = "dotted";
												oTarget.setAttribute("connected", "none");
											}
										}
									} else {
										for(var i=0;i<aoVars.length;i++) {
											oTarget = document.getElementById(argobj.pid+"_vtarget_"+i.toString());
											if(oTarget.getAttribute("connected") == g_oDragObject.getAttribute("target")) {
												oTarget.style.borderRightStyle = "dotted";
												g_oDragObject.style.borderLeftColor = g_oDragObject.style.borderRightColor;
												oTarget.setAttribute("connected", "none");
												g_oDragObject.setAttribute("connected", "none");
											}
										}
									}
								}
							} else {
								for(var i=0;i<aoVars.length;i++) {
									oTarget = document.getElementById(argobj.pid+"_vtarget_"+i.toString());
									if(oTarget.getAttribute("connected") == g_oDragObject.getAttribute("target")) {
										oTarget.style.borderRightStyle = "dotted";
										g_oDragObject.style.borderLeftColor = g_oDragObject.style.borderRightColor;
										oTarget.setAttribute("connected", "none");
										g_oDragObject.setAttribute("connected", "none");
									}
								}
							}
							var bAllConnected = true;
							for(var i=0;i<aoVars.length;i++) {
								if(document.getElementById(argobj.pid+"_vtarget_"+i.toString()).getAttribute("connected") == "none") {
									bAllConnected = false;
									break;
								}
							}
							var oArgs = new Object;
							oArgs.pid = argobj.pid;
							oArgs.btn = "check";
							CallMethod("q_099_test", bAllConnected ? "DisplayButton" : "HideButton", oArgs);
							FireEvent(argobj.pid,"onChangeMatch");
							break;
					}
				}
				]]>
</method>
<method type="q_099_test" name="DisplayButton">
<![CDATA[

				function DisplayButton(argobj)
				{
					if(argobj.pid==null || argobj.btn==null) return false;
					var oButton = document.getElementById(argobj.pid+"_q_b_"+argobj.btn+"_container");
					if(oButton==null) return false;
					oButton.style.display = g_isMSIE ? "inline" : "block";
					return true;
                }
                ]]>
</method>
<method type="q_099_test" name="HideButton">
<![CDATA[

				function HideButton(argobj)
				{
					if(argobj.pid==null || argobj.btn==null) return false;
					var oButton = document.getElementById(argobj.pid+"_q_b_"+argobj.btn+"_container");
					if(oButton==null) return false;
					oButton.style.display = "none";
					return true;
                }
                ]]>
</method>
<method type="q_099_test" name="DisplayMessage">
<![CDATA[

				function DisplayMessage(argobj)
				{
					if(argobj.pid==null) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					if(oParams==null) return false;
					var oMsgElem = document.getElementById(argobj.pid+"_q_objective");
					if(oMsgElem==null) return false;
					var sPath = argobj.msg==null ? "" : argobj.msg;
					var oNode = oParams.selectSingleNode("q_goal_"+sPath);
					if(oNode==null) return false;
					var sMsg = oNode.text;
					oMsgElem.innerHTML = sMsg;
					return true;
                }
                ]]>
</method>
<method type="q_099_test" name="AppendItem">
<![CDATA[

				function AppendItem(argobj)
				{
					if(argobj.pid==null) return false;
					var oMain = document.getElementById(argobj.pid+"_q_workarea");
					var oMainOTO = document.getElementById(argobj.pid+"_q_otoworkarea");
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					var aQuestions = oParams.selectNodes("q_questions/item");
					var oQuestion = aQuestions[argobj.qid];
					var sType = oQuestion.selectSingleNode("q_type").text;
					var aoVars = oQuestion.selectNodes("q_"+sType+"_variants/item");

					switch(sType) {
						case "oto":
							// argobj.targetid, argobj.matchid, argobj.state, argobj.enabled
							var oTargetTmpl = document.getElementById(argobj.pid+"_q_targetitem");
							var oBulletTmpl = document.getElementById(argobj.pid+"_q_bulletitem");
							var iLeft = oMainOTO.offsetWidth - parseInt(oParams.selectSingleNode("q_bulletwidth").text,10) - 6;

							var oClone = oTargetTmpl.cloneNode(true);
								oClone.style.display = g_isMSIE ? "inline" : "block";
							var aTags = oClone.getElementsByTagName("td");
								aTags[0].innerHTML = aoVars[argobj.targetid].selectSingleNode("q_target").text;
							var oTarget = oMainOTO.appendChild(oClone);
								oTarget.style.left = "10px";
								oTarget.style.top = 10 + 45 * argobj.targetid+"px";
								oTarget.setAttribute("bullet", argobj.targetid);
								oTarget.setAttribute("id", argobj.pid + "_vtarget_" + argobj.targetid);
								oTarget.setAttribute("connected", argobj.state=="connected" ? argobj.matchid : "none");
								if(argobj.enabled) {
									oTarget.setAttribute("enabled", "1");
								} else {
									oTarget.setAttribute("enabled", "0");
									oTarget.style.cursor = "default";
									if(argobj.state=="connected") oTarget.style.borderRightStyle = "none";
								}

							oClone = oBulletTmpl.cloneNode(true);
								oClone.style.display = g_isMSIE ? "inline" : "block";
							aTags = oClone.getElementsByTagName("td");
								aTags[0].innerHTML = aoVars[argobj.matchid].selectSingleNode("q_bullet").text;
							oMatch = oMainOTO.appendChild(oClone);
								oMatch.style.top = 10 + 45 * argobj.targetid + "px";
								oMatch.setAttribute("target", argobj.matchid);
								oMatch.setAttribute("id", argobj.pid + "_vbullet_" + argobj.matchid);
								if(argobj.state=="connected") {
									iTW = oTarget.offsetWidth;
									oMatch.style.left = 8+iTW+"px";
									oMatch.style.borderLeftColor = "#E0E0E0";
								} else {
									oMatch.style.left = iLeft + "px";
									oMatch.setAttribute("connected", "none");
								}
								if(argobj.enabled) {
									oMatch.setAttribute("enabled", "1");
								} else {
									oMatch.setAttribute("enabled", "0");
									oMatch.style.cursor = "default";
									oMatch.onmousedown = null;
									oMatch.onmousemove = null;
									oMatch.onmouseup = null;
								}
							break;
						case "numeric":
						case "text":
							var oMatrix = document.getElementById(argobj.pid+"_q_"+sType+"item");
							var oClone = oMatrix.cloneNode(true);
							oClone.style.display = g_isMSIE ? "inline" : "block";
							var aTags = oClone.getElementsByTagName("td");
							aTags[0].setAttribute("id",argobj.pid+"_vtext_"+argobj.inum.toString());
							aTags[0].innerHTML = aoVars[argobj.inum].selectSingleNode("q_explanation").text;
							aTags = oClone.getElementsByTagName("input");
							var oSpot = aTags[0];
							oSpot.setAttribute("id",argobj.pid+"_input_"+argobj.inum);
							if(argobj.value!=null) oSpot.value = argobj.value;
							var oCols = aoVars[argobj.inum].selectSingleNode("q_width");
							var oInputFontSize = oParams.selectSingleNode("input_font_size");
							if(oCols!=null && oInputFontSize!=null)
							{
								var iCols = parseInt(oCols.text,10);
								var iSize = parseInt(oInputFontSize.text,10);
								if(!isNaN(iCols) && !isNaN(iSize))
								{
									iCols = iCols*iSize;
									oSpot.style.width = iCols.toString() + "px";
									iSize = Math.round(iSize*1.8);
									oSpot.style.height = iSize.toString() + "px";
								}
							}
							if(argobj.enabled) {
								oSpot.setAttribute("enabled", "1");
								oSpot.disabled = false;
							} else {
								oSpot.setAttribute("enabled", "0");
								oSpot.disabled = false;
							}
							oMain.appendChild(oClone);
							break;
						case "range":
							var oMatrix = document.getElementById(argobj.pid+"_q_"+sType+"item");
							var oClone = oMatrix.cloneNode(true);
							oClone.style.display = g_isMSIE ? "inline" : "block";
							if(sType=="range" && argobj.vnum==null) return false;
							var aTags = oClone.getElementsByTagName("td");
							aTags[3].innerHTML = aoVars[argobj.inum].selectSingleNode("q_variant").text;
							aTags[3].setAttribute("id", argobj.pid+"_var_"+argobj.vnum);
							aTags = oClone.getElementsByTagName("img");
							var oSpot = aTags[0];
							oSpot.setAttribute("id",argobj.pid+"_spot_up_"+argobj.vnum);
							if(argobj.hide=="u") {
								var oDisabled = document.getElementById(argobj.pid+"_q_rangespot_up_1");
								if(oDisabled!=null) oSpot.src = oDisabled.src;
								oSpot.onclick = null;
								oSpot.setAttribute("enabled","0");
							} else {
								oSpot.setAttribute("direct","up");
								oSpot.setAttribute("enabled","1");
								oSpot.style.cursor = g_isMSIE ? "hand" : "pointer";
							}
							oSpot = aTags[1];
							oSpot.setAttribute("id",argobj.pid+"_spot_down_"+argobj.vnum);
							if(argobj.hide=="d") {
								var oDisabled = document.getElementById(argobj.pid+"_q_rangespot_down_1");
								if(oDisabled!=null) oSpot.src = oDisabled.src;
								oSpot.onclick = null;
								oSpot.setAttribute("enabled","0");
							} else {
								oSpot.setAttribute("direct","down");
								oSpot.setAttribute("enabled","1");
								oSpot.style.cursor = g_isMSIE ? "hand" : "pointer";
							}
							oMain.appendChild(oClone);
							break;
						case "choice":
						case "select":
							var oTmpl = document.getElementById(argobj.pid+"_q_"+sType+"item");
							var oClone = oTmpl.cloneNode(true);
								oClone.style.display = g_isMSIE ? "inline" : "block";
							var aTags = oClone.getElementsByTagName("td");
								aTags[1].innerHTML = aoVars[argobj.inum].selectSingleNode("q_variant").text;
							aTags = oClone.getElementsByTagName("img");
							var oSpot = aTags[0];
								if(argobj.checked) {
									oSpot.setAttribute("state", "1");
									oSpot.style.display = "none";
								} else {
									oSpot.style.display = g_isMSIE ? "inline" : "block";
									oSpot.style.cursor = g_isMSIE ? "hand" : "pointer";
									oSpot.setAttribute("state", argobj.checked ? "1" : "0");
								}
								oSpot.setAttribute("enabled", argobj.enabled ? "1" : "0");
								oSpot.setAttribute("idle", argobj.pid+"_q_"+sType+"spot_0");
								oSpot.setAttribute("alter", argobj.pid+"_q_"+sType+"spot_2");
								oSpot.setAttribute("id", argobj.pid+"_spot_"+argobj.inum.toString());
								oSpot.setAttribute("spotid", argobj.inum.toString());
							oSpot = aTags[1];
								oSpot.setAttribute("id", argobj.pid+"_check_"+argobj.inum.toString());
								oSpot.setAttribute("spotid", argobj.inum.toString());
								if(argobj.checked) 	{
									oSpot.style.display = g_isMSIE ? "inline" : "block";
								} else {
									oSpot.style.display = "none";
								}
							oMain.appendChild(oClone);
							break;
						default: break;
					}
					return true;
                }
                ]]>
</method>
<method type="q_099_test" name="HandleClick">
<![CDATA[

				function HandleClick(argobj)
				{
					if(argobj.pid==null || argobj.oid==null || argobj.qtype==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					var sType = argobj.qtype;
					var oSpot = (sType=="choice" || sType=="select") ? document.getElementById(argobj.pid+"_spot_"+argobj.oid) : document.getElementById(argobj.oid);
					if(oSpot.getAttribute("enabled")=="0") return false;
					var iVars = parseInt(oCurObj.getAttribute("q_varlength"));
					if(document.getElementById(argobj.pid+"_q_b_skip_container")!=null) document.getElementById(argobj.pid+"_q_b_skip_container").style.display = "none";
					var oVar;
					var sState = "";
					var bChecked = false;
					var oArgs = new Object;
						oArgs.pid = argobj.pid;
						oArgs.btn = "skip";
					CallMethod("q_099_test", "HideButton", oArgs);
						oArgs.btn = "check";
					switch(sType) {
						case "range":
							if(oSpot.getAttribute("direct")==null) return false;
							var sDirect = oSpot.getAttribute("direct");
							bChecked = true;
							var sOrder = oCurObj.getAttribute("order");
							var aOrder = sOrder.split("~");
							var iItem;
							var sTmp = argobj.pid+"_spot_"+sDirect+"_";
							for(var i=0;i<iVars;i++) {
								if(argobj.oid == sTmp+i.toString()) {
									iItem = i;
									break;
								}
							}
							var iTmp;
							var sTmp;
							var iBuffer;
							if(sDirect=="up") {
								iTmp = iItem - 1;
							} else {
								iTmp = iItem + 1;
							}
							sTmp = document.getElementById(argobj.pid+"_var_"+iTmp.toString()).innerHTML;
							document.getElementById(argobj.pid+"_var_"+iTmp.toString()).innerHTML = document.getElementById(argobj.pid+"_var_"+iItem.toString()).innerHTML;
							iBuffer = aOrder[iTmp];
							aOrder[iTmp] = aOrder[iItem];
							document.getElementById(argobj.pid+"_var_"+iItem.toString()).innerHTML = sTmp;
							aOrder[iItem] = iBuffer;
							oCurObj.setAttribute("order", aOrder.join("~"));
							FireEvent(argobj.pid,"onChangeOrder");
							break;
						case "choice":
							if(oSpot.getAttribute("state")=="1") return false;
							var oCheck;
							for(var i=0;i<iVars;i++) {
								oVar = document.getElementById(argobj.pid+"_spot_"+i.toString());
								oCheck = document.getElementById(argobj.pid+"_check_"+i.toString());
								if(oVar!=oSpot) {
									oVar.style.display = g_isMSIE ? "inline" : "block";
									oCheck.style.display = "none";
									//oVar.src = document.getElementById(oVar.getAttribute("idle")).src;
									oVar.setAttribute("state","0");
								} else {
									//oVar.src = document.getElementById(oVar.getAttribute("alter")).src;
									oCheck.style.display = g_isMSIE ? "inline" : "block";
									oVar.style.display = "none";
									oVar.setAttribute("state","1");
									oCurObj.setAttribute("q_varselected", i.toString());
								}
							}
							bChecked = true;
							FireEvent(argobj.pid,"onChangeChoice");
							break;
						case "select":
							var oCheck;
							for(var i=0;i<iVars;i++) {
								oVar = document.getElementById(argobj.pid+"_spot_"+i.toString());
								oCheck = document.getElementById(argobj.pid+"_check_"+i.toString());
								sState = oVar.getAttribute("state");
								if(oVar==oSpot) {
									if(sState=="1") {
										oVar.style.display = g_isMSIE ? "inline" : "block";
										oCheck.style.display = "none";
										// oVar.src = document.getElementById(oVar.getAttribute("idle")).src;
										oVar.setAttribute("state","0");
									} else {
										oCheck.style.display = g_isMSIE ? "inline" : "block";
										oVar.style.display = "none";
										//oVar.src = document.getElementById(oVar.getAttribute("alter")).src;
										oVar.setAttribute("state","1");
										bChecked = true;
									}
								}
							}
							if(!bChecked) {
								for(var i=0;i<iVars;i++) {
									oVar = document.getElementById(argobj.pid+"_spot_"+i.toString());
									sState = oVar.getAttribute("state");
									if(sState=="1") {
										bChecked = true;
										break;
									}
								}
							}
							FireEvent(argobj.pid,"onChangeSelect");
							break;
					}

					if(argobj.nobtn!="1" && bChecked) {
						CallMethod("q_099_test", "DisplayButton", oArgs);
					} else {
						CallMethod("q_099_test", "HideButton", oArgs);
					}
					return true;
				}
				]]>
</method>
<method type="q_099_test" name="EnableItems">
<![CDATA[

				function EnableItems(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					var aQuestions = oParams.selectNodes("q_questions/item");
					var oQuestion = aQuestions[argobj.qid];
					var sType = oQuestion.selectSingleNode("q_type").text;
					var aoVars = oQuestion.selectNodes("q_"+sType+"_variants/item");
					var iVarLength = aoVars.length;
					var oSpot;

					switch(sType) {
						case "choice":
						case "select":
							for(var i=0;i<iVarLength;i++) {
								oSpot = document.getElementById(argobj.pid+"_spot_"+i.toString());
								oSpot.style.cursor = g_isMSIE ? "hand" : "pointer";
								oSpot.setAttribute("enabled","1");
							}
							break;
						case "range":
							var oDisU = document.getElementById(argobj.pid+"_q_rangespot_up_0");
							var oDisD = document.getElementById(argobj.pid+"_q_rangespot_down_0");
							for(var i=0;i<iVarLength;i++) {
								if(i!=0) {
									oSpot = document.getElementById(argobj.pid+"_spot_up_"+i.toString());
									oSpot.src = oDisU.src;
									oSpot.style.cursor = g_isMSIE ? "hand" : "pointer";
									oSpot.setAttribute("enabled","1");
								}
								if(i!=iVarLength-1) {
									oSpot = document.getElementById(argobj.pid+"_spot_down_"+i.toString());
									oSpot.src = oDisD.src;
									oSpot.style.cursor = g_isMSIE ? "hand" : "pointer";
									oSpot.setAttribute("enabled","1");
								}
							}
							break;
						case "numeric":
						case "text":
							var aInputs = oCurObj.getElementsByTagName("input");
							for(var i=0;i<aInputs.length;i++) {
								aInputs[i].disabled = false;
								aInputs[i].setAttribute("enabled","1");
							}
							break;
					}

					return true;
                }
                ]]>
</method>
<method type="q_099_test" name="DisableItems">
<![CDATA[

				function DisableItems(argobj)
				{
					if(argobj.pid==null || argobj.qid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					var aQuestions = oParams.selectNodes("q_questions/item");
					var oQuestion = aQuestions[argobj.qid];
					var sType = oQuestion.selectSingleNode("q_type").text;
					var aoVars = oQuestion.selectNodes("q_"+sType+"_variants/item");
					var iVarLength = aoVars.length;
					var oSpot;

					switch(sType) {
						case "choice":
						case "select":
							for(var i=0;i<iVarLength;i++) {
								oSpot = document.getElementById(argobj.pid+"_spot_"+i.toString());
								oSpot.style.cursor = "default";
								oSpot.setAttribute("enabled","0");
							}
							break;
						case "range":
							var oDisU = document.getElementById(argobj.pid+"_q_rangespot_up_1");
							var oDisD = document.getElementById(argobj.pid+"_q_rangespot_down_1");
							for(var i=0;i<iVarLength;i++) {
								oSpot = document.getElementById(argobj.pid+"_spot_up_"+i.toString());
								oSpot.src = oDisU.src;
								oSpot.style.cursor = "default";
								oSpot.setAttribute("enabled","0");
								oSpot = document.getElementById(argobj.pid+"_spot_down_"+i.toString());
								oSpot.src = oDisD.src;
								oSpot.style.cursor = "default";
								oSpot.setAttribute("enabled","0");
							}
							break;
						case "numeric":
						case "text":
							var aInputs = oCurObj.getElementsByTagName("input");
							for(var i=0;i<aInputs.length;i++) {
								aInputs[i].disabled = true;
								aInputs[i].setAttribute("enabled","0");
							}
							break;
						case "oto":
							for(var i=0;i<iVarLength;i++) {

								oSpot = document.getElementById(argobj.pid+"_vtarget_"+i.toString());
								oSpot.setAttribute("enabled","0");
								oSpot.style.cursor = "default";
								oSpot.style.borderRightStyle = "none";

								oSpot = document.getElementById(argobj.pid+"_vbullet_"+i.toString());
								oSpot.setAttribute("enabled","0");
								oSpot.style.cursor = "default";
								oSpot.onmousedown = null;
								oSpot.onmousemove = null;
								oSpot.onmouseup = null;
							}
							break;
						default: return false;
					}
					return true;
                }
                ]]>
</method>
<method type="q_099_test" name="CountAttempts">
<![CDATA[

				function CountAttempts(argobj)
				{
                    if(argobj.pid==null) return false;
					if(document.getElementById(argobj.pid+"_q_attempts_count")==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					var sAtt = oCurObj.getAttribute("q_attemptslast");
					var iAtt = parseInt(sAtt,10);
					if(iAtt>0) {
						iAtt--;
						sAtt = iAtt.toString();
						document.getElementById(argobj.pid+"_q_attempts_count").innerHTML = sAtt;
						oCurObj.setAttribute("q_attemptslast", sAtt);
					} else {
						document.getElementById(argobj.pid+"_q_attempts_count").innerHTML = "0";
						oCurObj.setAttribute("q_attemptslast", "0");
					}
					return true;
				}
				]]>
</method>
<method type="q_099_test" name="EvalAnswer">
<![CDATA[

				function EvalAnswer(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					var sQID = oCurObj.getAttribute("qid");
					var sIntID = argobj.pid + "_" + sQID;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					if(oParams==null) return false;
					var aQuestions = oParams.selectNodes("q_questions/item");
					var oQuestion = aQuestions[sQID];
					var sType = oQuestion.selectSingleNode("q_type").text;
					var aoVars = oQuestion.selectNodes("q_"+sType+"_variants/item");
					var iVarLength = aoVars.length;
					var sReason = argobj.reason;
					var oArgs = new Object;
					oArgs.pid = argobj.pid;
					oArgs.qid = sQID;
					var bEval = true;
					var bCorrect = false;

					if(oCurObj.getAttribute("running")=="0") {
						if(oCurObj.getAttribute("testtimeout")=="1") {
							oArgs.action = "stop";
							CallMethod("q_099_test", "Dispatcher", oArgs);
							return true;
						}
					}

					if(sReason=="skip") {
						CallMethod("q_099_test", "DisableItems", oArgs);
						oCurObj.setAttribute("q_timer_active", "0");
						CallMethod("q_099_test", "TickTimer", oArgs);
						document.getElementById(argobj.pid+"_q_workarea").style.visibility = "hidden";
						document.getElementById(argobj.pid+"_q_otoworkarea").style.visibility = "hidden";
						oArgs.msg = "skip";
						CallMethod("q_099_test", "DisplayMessage", oArgs);
						FireEvent(argobj.pid,"onSkipQuestion");
						if(document.getElementById(argobj.pid)==null) return false;
						oArgs.action = "next";
						CallMethod("q_099_test", "Dispatcher", oArgs);
						return true;
					}
					if(sReason=="fail") {
						CallMethod("q_099_test", "DisableItems", oArgs);
						oArgs.msg = "failed";
						CallMethod("q_099_test", "DisplayMessage", oArgs);
						bCorrect = false;
						bEval = false;
					}

					oArgs.btn = "check";
					CallMethod("q_099_test", "HideButton", oArgs);
					oArgs.btn = "skip";
					CallMethod("q_099_test", "HideButton", oArgs);

					var bMulti = (iVarLength>1 && (sType=="numeric" || sType=="text"));

					var oSpot;
					if(bEval) {
						switch(sType) {
							case "text":
								var bResponse = true;
								var aResponses = new Array();
								for(var i=0;i<iVarLength;i++) {
									oSpot = document.getElementById(argobj.pid+"_input_"+i.toString());
									aResponses[i] = oSpot.value;
									if(aResponses[i]=="")	bResponse = false;
								}

								bCorrect = true;
								var bICorrect = true;
								var sCValue;
								var sUValue;
								var bCase = false;
								for(var i=0;i<iVarLength;i++) {
									bICorrect = true;
									aCond = aoVars[i].selectNodes("q_conditions/item");
									for(var j=0;j<aCond.length;j++) {
										sUValue = aResponses[i];
										sOp = aCond[j].selectSingleNode("q_condition").text;
										sCValue = aCond[j].selectSingleNode("q_variant").text;
										bCase = aCond[j].selectSingleNode("q_case").text=="yes" ? true : false;
										if(!bCase) {
											sCValue = sCValue.toLowerCase();
											sUValue = sUValue.toLowerCase();
										}
										switch(sOp) {
											case "eq":
												if(sUValue!=sCValue) bICorrect = false;
												break;
											case "bw":
												for(var k=0;k<sCValue.length;k++) {
													if(sUValue.charAt(k)!=sCValue.charAt(k)) {
														bICorrect = false;
														break;
													}
												}
												break;
											case "ew":
												var iTmp = sUValue.length;
												for(var k=sCValue.length-1;k>=0;k--) {
													iTmp--;
													if(sUValue.charAt(iTmp)!=sCValue.charAt(k)) {
														bICorrect = false;
														break;
													}
												}
												break;
											case "cn":
												if(sUValue.indexOf(sCValue)==-1) bICorrect = false;
												break;
											default:
												bICorrect = false;
												break;
										}
									}
									if(bCorrect) {
										if(!bICorrect) bCorrect = false;
									}
									SetInteractionParam(bMulti ? sIntID+"_"+i.toString() : sIntID, "learner_response", aResponses[i]);
								}
								break;
							case "numeric":
								var bResponse = true;
								var aResponses = new Array();
								for(var i=0;i<iVarLength;i++) {
									oSpot = document.getElementById(argobj.pid+"_input_"+i.toString());
									aResponses[i] = oSpot.value;
									if(aResponses[i]=="")	bResponse = false;
								}

								bCorrect = true;
								var bICorrect = true;
								var rCValue;
								var rUValue;
								for(var i=0;i<iVarLength;i++) {
									bICorrect = true;
									rUValue = parseFloat(aResponses[i]);
									if(isNaN(rUValue)) {
										bICorrect = false;
									} else {
										aCond = aoVars[i].selectNodes("q_conditions/item");
										for(var j=0;j<aCond.length;j++) {
											sOp = aCond[j].selectSingleNode("q_condition").text;
											rCValue = parseFloat(aCond[j].selectSingleNode("q_variant").text);
											if(isNaN(rCValue)) continue;
											switch(sOp) {
												case "eq":
													if(rUValue!=rCValue) bICorrect = false;
													break;
												case "ne":
													if(rUValue==rCValue) bICorrect = false;
													break;
												case "lt":
													if(rUValue>=rCValue) bICorrect = false;
													break;
												case "lte":
													if(rUValue>rCValue) bICorrect = false;
													break;
												case "gt":
													if(rUValue<=rCValue) bICorrect = false;
													break;
												case "gte":
													if(rUValue<rCValue) bICorrect = false;
													break;
												default:
													bICorrect = false;
													break;
											}
										}
									}
									if(bCorrect) {
										if(!bICorrect) bCorrect = false;
									}
									SetInteractionParam(bMulti ? sIntID+"_"+i.toString() : sIntID, "learner_response", aResponses[i]=="" ? "" : FormatReal_10_7(rUValue));
								}
								break;
							case "range":
								bCorrect = true;
								var sOrder = oCurObj.getAttribute("order");
								var aResponses = sOrder.split("~");
								for(var i=0;i<iVarLength;i++) {
									if(aResponses[i]!=i.toString()) {
										bCorrect = false;
										break;
									}
								}
								SetInteractionParam(sIntID, "learner_response", aResponses.join("[,]"));
								break;
							case "choice":
							case "select":
								var bResponse = false;
								var aResponses = new Array();
								for(var i=0;i<iVarLength;i++) {
									oSpot = document.getElementById(argobj.pid+"_spot_"+i.toString());
									if(oSpot.getAttribute("state")=="1") {
										bResponse = true;
										aResponses.push(i.toString());
									}
								}
								var aCorrects = GetInteractionArray(argobj.pid+"_"+sQID, "correct_responses");
								if(aCorrects==null) return false;
								if(aCorrects.length==0) return false;
								bCorrect = false;
								if(bResponse) {
									var sResponse = aResponses.join("[,]");
									for(var i=0;i<aCorrects.length;i++) {
										if(aCorrects[i]==sResponse) {
											bCorrect = true;
											break;
										}
									}
								}
								SetInteractionParam(sIntID, "learner_response", sResponse);
								break;
							case "oto":
								var aResponses = new Array();
								bCorrect = true;
								var bConn = true;
								for(var i=0;i<iVarLength;i++) {
									oSpot = document.getElementById(argobj.pid+"_vtarget_"+i.toString());
									sConn = oSpot.getAttribute("connected");
									if(sConn=="none") {
										bCorrect = false;
										bConn = false;
										break;
									}
									aResponses.push(i.toString()+"[.]"+sConn);
									if(sConn==i.toString()) continue;
									bCorrect = false;
								}
								if(bConn) {
									var sResponse = aResponses.join("[,]");
									SetInteractionParam(sIntID, "learner_response", sResponse);
								}
								break;
							default: return false;
						}

						CallMethod("q_099_test", "CountAttempts", argobj);
						FireEvent(argobj.pid,"onAttempt");
						if(document.getElementById(argobj.pid)==null) return false;
					}

					var bCredit = oParams.selectSingleNode("test_scored").text=="no" ? false : true;
					var bShowRight = oParams.selectSingleNode("test_showright").text=="no" ? false : true;
					var bTestFB = oParams.selectSingleNode("test_fb_switch").text=="no" ? false : true;
					var bDefaultFB = oQuestion.selectSingleNode("q_fb_switch").text=="no" ? false : true;
					var sAttMax = oCurObj.getAttribute("q_maxattempts");
					var sAtt = oCurObj.getAttribute("q_attemptslast");
					var sDesc = GetInteractionParam(sIntID, "description");
					var aDesc = sDesc.split("[,]");
					var aTmp = aDesc[0].split("/");
					aTmp[0] = sAtt;
					aDesc[0] = aTmp.join("/");
					SetInteractionParam(sIntID, "description", aDesc.join("[,]"));
					var iAtt = parseInt(sAtt,10);
					var aObjectives = oQuestion.selectNodes("q_scoreboards/item/q_board");

					var dDate = new Date();
					var iDate = dDate.valueOf();
					var sBegin = oCurObj.getAttribute("q_start");
					var iBegin = parseInt(sBegin,10);

					oArgs.qid = sQID;

					if(bCorrect) {
						if(sReason=="timeout") FireEvent(argobj.pid,"onTimeout");
						if(document.getElementById(argobj.pid)==null) return false;
						FireEvent(argobj.pid,"onSuccess");
						if(document.getElementById(argobj.pid)==null) return false;

						if(sReason!="timeout") {
							oCurObj.setAttribute("q_timer_active", "0");
							CallMethod("q_099_test", "TickTimer", oArgs);
						}

						CallMethod("q_099_test", "DisableItems", oArgs);
						if(bTestFB) {
							oArgs.fbtype = "right";
							CallMethod("q_099_test", "DisplayFeedback", oArgs);
						}
						var iLatency = iDate - iBegin;
						var sLatency = ConvertPeriodToISO8601(iLatency);
						SetInteractionParam(sIntID, "latency", sLatency);
						SetInteractionParam(sIntID, "result", "correct");
						if(bCredit) {
							var sWeight = oQuestion.selectSingleNode("q_weight").text;
							var bRegress = oQuestion.selectSingleNode("q_pointset_auto").text=="yes" ? true : false;
							var iScore = 0;
							var sScore = "";
							var iWeight = parseFloat(sWeight);
							if(bRegress) iWeight = iWeight*(iAtt+1);
							if(bMulti) {
								iWeight = iWeight/aoVars.length;
								sScore = FormatReal_10_7(iWeight);
								var sTmpID;
								for(var i=0;i<aoVars.length;i++) {
									sTmpID = sIntID + "_" + i.toString();
									for(var j=0;j<aObjectives.length;j++) SetObjectiveScore(aObjectives[j].text, sTmpID, "replace", sScore);
									SetInteractionParam(sTmpID, "weighting", sScore);
									SetInteractionParam(sTmpID, "result", "correct");
									SetInteractionParam(sTmpID, "latency", sLatency);
								}
							} else {
								sScore = FormatReal_10_7(iWeight);
								for(var i=0;i<aObjectives.length;i++) SetObjectiveScore(aObjectives[i].text, sIntID, "replace", sScore);
								SetInteractionParam(sIntID, "weighting", sScore);
							}
						}

						var sUserSequence = GetInteractionParam(argobj.pid, "learner_response");
						if(sUserSequence==null) {
							var aUserSequence = new Array();
						} else {
							var aUserSequence = sUserSequence.split("[,]");
						}
						aUserSequence.push(sIntID);
						if(bMulti) {
							for(var i=0;i<aoVars.length;i++) aUserSequence.push(sIntID+"_"+i.toString());
						}
						SetInteractionParam(argobj.pid, "learner_response", aUserSequence.join("[,]"));

						FireEvent(argobj.pid,"onQuestionEnd");
						if(document.getElementById(argobj.pid)==null) return false;
						oArgs.action = "next";
						CallMethod("q_099_test", "Dispatcher", oArgs);

					} else {
						if(iAtt>0 && sReason!="timeout" && bEval) {

							FireEvent(argobj.pid,"onFailure");
							if(document.getElementById(argobj.pid)==null) return false;
							if(bTestFB) {
								oArgs.fbtype = "wrong";
								CallMethod("q_099_test", "DisplayFeedback", oArgs);
							}

						} else {

							FireEvent(argobj.pid, sReason=="timeout" ? "onTimeout" : "onAttemptsLimit");
							if(document.getElementById(argobj.pid)==null) return false;
							FireEvent(argobj.pid,"onFailure");
							if(document.getElementById(argobj.pid)==null) return false;

							if(sReason!="timeout") {
								oCurObj.setAttribute("q_timer_active", "0");
								CallMethod("q_099_test", "TickTimer", oArgs);
							}

							if(bShowRight && sReason!="fail" && sReason!="skip") {
								switch(sType) {
									case "choice":
									case "select":
										aChecks = aCorrects[0].split("[,]");
										aChecks.sort(NumericCompare);
										var bSet = false;
										for(var i=0;i<iVarLength;i++) {
											oArgs.inum = i;
											bSet = false;
											for(var j=0;j<aChecks.length;j++) {
												if(aChecks[j]==i.toString()) bSet = true;
											}
											CallMethod("q_099_test", bSet ? "CheckItem" : "UncheckItem", oArgs);
										}
										break;
									case "range":
										for(var i=0;i<iVarLength;i++) {
											document.getElementById(argobj.pid+"_var_"+i.toString()).innerHTML = aoVars[i].selectSingleNode("q_variant").text;
										}
										break;
									case "numeric":
										var sString = "";
										var sValue = "";
										for(var i=0;i<iVarLength;i++) {
											aCond = aoVars[i].selectNodes("q_conditions/item");
											sValue = "";
											sString = "";
											for(var j=0;j<aCond.length;j++) {
												sOp = aCond[j].selectSingleNode("q_condition").text;
												sValue = aCond[j].selectSingleNode("q_variant").text;
												switch(sOp) {
													case "eq":
														sString += "==" + sValue + " ";
														break;
													case "ne":
														sString += "!=" + sValue + " ";
														break;
													case "lt":
														sString += "<" + sValue + " ";
														break;
													case "lte":
														sString += "<=" + sValue + " ";
														break;
													case "gt":
														sString += ">" + sValue + " ";
														break;
													case "gte":
														sString += ">=" + sValue + " ";
														break;
													default:
														bICorrect = false;
														break;
												}
											}
											document.getElementById(argobj.pid+"_input_"+i.toString()).value = sString;
										}
										break;
									case "text":
										var sString = "";
										var sValue = "";
										for(var i=0;i<iVarLength;i++) {
											aCond = aoVars[i].selectNodes("q_conditions/item");
											sValue = "";
											sString = "";
											for(var j=0;j<aCond.length;j++) {
												sOp = aCond[j].selectSingleNode("q_condition").text;
												sValue = aCond[j].selectSingleNode("q_variant").text;
												switch(sOp) {
													case "eq":
														sString += sValue + " ";
														break;
													case "bw":
														sString += sValue + "* ";
														break;
													case "ew":
														sString += "*" + sValue + " ";
														break;
													case "cn":
														sString += "*" + sValue + "* ";
														break;
													default:
														break;
												}
											}
											document.getElementById(argobj.pid+"_input_"+i.toString()).value = sString;
										}
										break;
									case "oto":
										var oObj;
										var iTW = 0;
										var iTT = 0;
										var aTags;
										for(var i=0;i<iVarLength;i++) {
											oObj = document.getElementById(argobj.pid+"_vtarget_"+i.toString());
											iTW = oObj.offsetWidth;
											iTT = oObj.offsetTop;
											oObj = document.getElementById(argobj.pid+"_vbullet_"+i.toString());
											aTags = oObj.getElementsByTagName("td");
											aTags[0].innerHTML = aoVars[i].selectSingleNode("q_bullet").text;
											oObj.style.top = iTT + "px";
											oObj.style.left = 8+iTW+"px";
										}
										break;
									default: return false;
								}
								oArgs.msg = "right";
								CallMethod("q_099_test", "DisplayMessage", oArgs);
							}

							CallMethod("q_099_test", "DisableItems", oArgs);
							if(bTestFB && sReason!="fail") {
								oArgs.fbtype = sReason=="timeout" ? "timeout" : "exhausted";
								CallMethod("q_099_test", "DisplayFeedback", oArgs);
							}

							var iLatency = iDate - iBegin;
							var sLatency = ConvertPeriodToISO8601(iLatency);
							SetInteractionParam(sIntID, "latency", sLatency);
							SetInteractionParam(sIntID, "result", "incorrect");

							if(bCredit) {
								sScore = "0";
								if(bMulti) {
									var sTmpID = "";
									for(var i=0;i<aoVars.length;i++) {
										sTmpID = sIntID+"_"+i.toString();
										for(var j=0;j<aObjectives.length;j++) SetObjectiveScore(aObjectives[j].text, sTmpID, "replace", sScore);
										SetInteractionParam(sTmpID, "weighting", sScore);
										SetInteractionParam(sTmpID, "result", "incorrect");
										SetInteractionParam(sTmpID, "latency", sLatency);
									}
								} else {
									for(var i=0;i<aObjectives.length;i++) SetObjectiveScore(aObjectives[i].text, sIntID, "replace", sScore);
									SetInteractionParam(sIntID, "weighting", sScore);
								}
							}
							var sUserSequence = GetInteractionParam(argobj.pid, "learner_response");
							if(sUserSequence==null) {
								var aUserSequence = new Array();
							} else {
								var aUserSequence = sUserSequence.split("[,]");
							}
							aUserSequence.push(sIntID);
							if(bMulti) {
								for(var i=0;i<aoVars.length;i++) aUserSequence.push(sIntID+"_"+i.toString());
							}
							SetInteractionParam(argobj.pid, "learner_response", aUserSequence.join("[,]"));
							FireEvent(argobj.pid,"onQuestionEnd");
							if(document.getElementById(argobj.pid)==null) return false;
							oArgs.action = "next";
							CallMethod("q_099_test", "Dispatcher", oArgs);
						}
					}
					return true;
				}
				]]>
</method>
<method type="q_099_test" name="CheckItem">
<![CDATA[

				function CheckItem(argobj)
				{
					if(argobj.pid==null || argobj.inum==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					var oSpot = document.getElementById(argobj.pid+"_spot_"+argobj.inum);
					var oCheck = document.getElementById(argobj.pid+"_check_"+argobj.inum);
					if(oSpot.getAttribute("state")=="1") return false;
					oSpot.style.display = "none";
					oSpot.setAttribute("state","1");
					oSpot.setAttribute("q_varselected", argobj.inum);
					oCheck.style.display = g_isMSIE ? "inline" : "block";
					return true;
                }
                ]]>
</method>
<method type="q_099_test" name="UncheckItem">
<![CDATA[

				function UncheckItem(argobj)
				{
					if(argobj.pid==null || argobj.inum==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					var oSpot = document.getElementById(argobj.pid+"_spot_"+argobj.inum);
					var oCheck = document.getElementById(argobj.pid+"_check_"+argobj.inum);
					if(oSpot.getAttribute("state")!="1") return false;
					oCheck.style.display = "none";
					oSpot.style.display = g_isMSIE ? "inline" : "block";
					oSpot.setAttribute("state","0");
					return true;
                }
                ]]>
</method>
<method type="q_099_test" name="DisplayFeedback">
<![CDATA[

				function DisplayFeedback(argobj)
				{
                    if(argobj.pid==null || argobj.qid==null || argobj.fbtype==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(document.getElementById(argobj.pid+"_q_fb_template")==null) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					if(oParams==null) return false;
					var bTestFB = oParams.selectSingleNode("test_fb_switch").text=="no" ? false : true;
					if(!bTestFB) return false;
					var aQuestions = oParams.selectNodes("q_questions/item");
					var oQuestion = aQuestions[argobj.qid];
					var bDefaultFB = oQuestion.selectSingleNode("q_fb_switch").text=="no" ? false : true;
					var sText = bDefaultFB ? oParams.selectSingleNode("test_feedback"+argobj.fbtype).text : oQuestion.selectSingleNode("q_feedback"+argobj.fbtype).text;

					document.getElementById(argobj.pid+"_q_fb_text").innerHTML = sText;
					document.getElementById(argobj.pid+"_q_fb_template").style.backgroundColor = argobj.fbtype=="right" ? "#E0FFE0" : "#FFE0E0";
					document.getElementById(argobj.pid+"_q_fb_template").style.borderColor = argobj.fbtype=="right" ? "#339933" : "#FF6666";
					document.getElementById(argobj.pid+"_q_fb_closebutton").style.backgroundColor = argobj.fbtype=="right" ? "#339933" : "#FF6666";
					document.getElementById(argobj.pid+"_q_fb_template").style.display = g_isMSIE ? "inline" : "block";
					if(oParams.selectSingleNode("test_fb_timerswitch").text=="yes") {
						var sFBTimer = oParams.selectSingleNode("test_fb_timer").text;
						var iFBTimer = parseFloat(sFBTimer);
						if(isNaN(iFBTimer)) return true;
						if(iFBTimer<1) iFBTimer = 1;
						iFBTimer = Math.floor(iFBTimer * 1000);
						var oArgs = new Object;
						oArgs.pid = argobj.pid;
						oArgs.delay = "1";
						oCurObj.setAttribute("fbkilled","no");
						CreateTimeActionMethod("q_099_test", "HideFeedback", null, iFBTimer, oArgs);
					}
					return true;
				}
				]]>
</method>
<method type="q_099_test" name="HideFeedback">
<![CDATA[

				function HideFeedback(argobj)
				{
                    if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(argobj.delay==null) {
						if(document.getElementById(argobj.pid+"_q_fb_template")==null) return false;
						document.getElementById(argobj.pid+"_q_fb_template").style.display = "none";
					} else {
						if(argobj.delay=="1") {
							var sKill = oCurObj.getAttribute("fbkilled");
							if(sKill!=null && sKill=="yes") return false;
							if(document.getElementById(argobj.pid+"_q_fb_template")==null) return false;
							document.getElementById(argobj.pid+"_q_fb_template").style.display = "none";
							oCurObj.setAttribute("fbkilled","yes");
							return false;
						}
						if(document.getElementById(argobj.pid+"_q_fb_template")==null) return false;
						document.getElementById(argobj.pid+"_q_fb_template").style.display = "none";
					}
					return true;
				}
				]]>
</method>
<method type="q_099_test" name="TickTimer">
<![CDATA[

				function TickTimer(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					if(document.getElementById(argobj.pid+"_q_timer_progress")==null || document.getElementById(argobj.pid+"_q_timer_value")==null || document.getElementById(argobj.pid+"_q_timer_bg")==null) return false;
					var sActive = oCurObj.getAttribute("q_timer_active");
					if(sActive=="0") return false;
					var bMulti = oCurObj.getAttribute("multi")=="1" ? true : false;
					var sID = argobj.pid + "_" + oCurObj.getAttribute("qid");

					var sTick = oCurObj.getAttribute("q_timer");
					if(sTick==null) return false;
					var iTick = parseInt(sTick,10);
					if(isNaN(iTick)) return false;
					var sTotal = oCurObj.getAttribute("q_timer_total");
					if(sTotal==null) return false;
					var iTotal = parseInt(sTotal,10);
					if(isNaN(iTotal)) return false;
					if(iTick>iTotal) return false;
					if(argobj.restore==null) iTick--;
					sTick = iTick.toString();
					document.getElementById(argobj.pid+"_q_timer_value").innerHTML = sTick+" sec";
					oCurObj.setAttribute("q_timer",sTick);
					var iCurT = Math.round(iTick/iTotal*100);
					var sColor = "#00CC66";
					if(iCurT<30) {
						if(iCurT<15) {
							sColor = "#FF0000";
						} else {
							sColor = "#FFCC66";
						}
					}
					var iW = Math.round((100-iCurT)*2);
					if(iW<=0) iW = 1;
					if(iW>0) {
						document.getElementById(argobj.pid+"_q_timer_progress").style.width = iW.toString()+"px";
						document.getElementById(argobj.pid+"_q_timer_bg").style.backgroundColor = sColor;
					}
					if(argobj.restore!=null) return true;
					var oArgs = new Object;
					oArgs.pid = argobj.pid;

					var sStorage = GetInteractionParam(sID, "description");
					var aParts = sStorage.split("[,]");
					var aTimer = aParts[2].split("/");
					aTimer[0] = sTick;
					aParts[2] = aTimer.join("/");
					SetInteractionParam(sID, "description", aParts.join("[,]"));
					if(bMulti) for(var i=0;i<aoVars.length;i++) SetInteractionParam(sID+"_"+i.toString(), "description", aParts.join("[,]"));

					if(iTick>0) {
						CreateTimeActionMethod("q_099_test", "TickTimer", null, 1000, oArgs);
					} else {
						oArgs.reason = "timeout";
						oCurObj.setAttribute("q_timer_active","0");
						CallMethod("q_099_test","EvalAnswer",oArgs);
					}
					return true;
				}
				]]>
</method>
<method type="q_099_test" name="SkipQuestion">
<![CDATA[

				function SkipQuestion(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					if(oParams==null) return false;
					var sQID = oCurObj.getAttribute("qid");
					var aQuestions = oParams.selectNodes("q_questions/item");
					var oQuestion = aQuestions[sQID];
					var bSkip = oQuestion.selectSingleNode("q_skip").text=="yes" ? true : false;
					var bSkipFail = oQuestion.selectSingleNode("q_skipper2").text=="yes" ? true : false;
					var sType = oQuestion.selectSingleNode("q_type").text;
					var sTestMode = oCurObj.getAttribute("mode");
					var sID = argobj.pid + "_" + sQID;
					var oArgs = new Object;
					oArgs.pid = argobj.pid;
					oArgs.qid = sQID;
					oArgs.btn = "skip";
					CallMethod("q_099_test", "HideButton", oArgs);
					if(bSkipFail) {
						if(confirm(oParams.selectSingleNode("q_skip_confirm").text)) {
							oCurObj.setAttribute("q_reason","failed");
							oCurObj.setAttribute("q_state","failed");
							oCurObj.setAttribute("q_result","failure");
							oArgs.reason = "fail";
							CallMethod("q_099_test","EvalAnswer",oArgs);
						} else {
							return false;
						}
					} else {
						oCurObj.setAttribute("q_reason","skipped");
						oCurObj.setAttribute("q_result","na");
						oCurObj.setAttribute("q_state","na");
						if(oCurObj.getAttribute("qskipped")==null) {
							oCurObj.setAttribute("qskipped",sQID);
						} else {
							var sTmp = oCurObj.getAttribute("qskipped").toString();
							var aSkipped = sTmp.split("~");
							aSkipped.push(sQID);
							oCurObj.setAttribute("qskipped",aSkipped.join("~"));
						}
						oArgs.reason = "skip";
						CallMethod("q_099_test","EvalAnswer",oArgs);
					}
					return true;
				}
				]]>
</method>
<method type="q_099_test" name="TickTestTimer">
<![CDATA[

				function TickTestTimer(argobj)
				{
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					if(oParams==null) return false;
					if(oParams.selectSingleNode("test_timer_switch").text == "no") return false;
					if(oCurObj.getAttribute("testtimerstop")=="1") return true;
					if(document.getElementById(argobj.pid+"_test_timer_progress")==null || document.getElementById(argobj.pid+"_test_timer_value")==null || document.getElementById(argobj.pid+"_test_timer_bg")==null) return false;
					var iTick = parseInt(oCurObj.getAttribute("ttimervalue"),10);
					var iTotal = parseInt(oCurObj.getAttribute("ttimer"),10);
					if(isNaN(iTick) || isNaN(iTotal)) return false;
					if(argobj.restore!=true || argobj.start==true) iTick--;
					var sTick = iTick.toString();
					oCurObj.setAttribute("ttimervalue", sTick);

					var sStorage = GetInteractionParam(argobj.pid, "description");
					var aParts = sStorage.split("[,]");
					var aTimer = aParts[2].split("/");
					aTimer[0] = sTick;
					aParts[2] = aTimer.join("/");
					SetInteractionParam(argobj.pid, "description", aParts.join("[,]"));

					var oTestTimerValue = document.getElementById(argobj.pid+"_test_timer_value");
					if(iTick<60) {
						oTestTimerValue.innerHTML = sTick+" sec";
					} else {
						var iMin = Math.floor(iTick/60);
						var iSec = iTick - iMin*60;
						var sSec = iSec<10 ? "0"+iSec.toString() : iSec.toString();
						oTestTimerValue.innerHTML = iMin==0 ? sSec + " sec" : iMin.toString()+" min "+sSec+" sec";
					}
					var iCurT = Math.round(iTick/iTotal*100);
					var sCurColor = "#00CC66";
					if(iCurT<30) {
						if(iCurT<15) {
							sCurColor = "#FF0000";
						} else {
							sCurColor = "#FFCC66";
						}
					}
					var iWT = Math.round((iTotal-iTick)/iTotal*200);
					if(iWT>0) {
						document.getElementById(argobj.pid+"_test_timer_progress").style.width = iWT.toString()+"px";
						document.getElementById(argobj.pid+"_test_timer_bg").style.backgroundColor = sCurColor;
					}
					if(argobj.restore==true && argobj.start!=true) {
						oCurObj.setAttribute("testtimerstop","1");
						return true;
					}
					var oArgs = new Object;
					oArgs.pid = argobj.pid;
					if(iTick>0) {
						CreateTimeActionMethod("q_099_test", "TickTestTimer", null, 1000, oArgs);
						FireEvent(argobj.pid,"onTickTestTimer");
					} else {
						FireEvent(argobj.pid,"onTestTimeout");
						if(oCurObj==null) return false;
						oCurObj.setAttribute("testtimeout", "1");
						oCurObj.setAttribute("q_timer_active", "0");
						oArgs.reason = "timeout";
						oArgs.testtimeout = "timeout";
						CallMethod("q_099_test","EvalAnswer",oArgs);
					}
					return true;
				}
				]]>
</method>
<method type="q_099_test" name="HandleKeyPressed">
<![CDATA[

				function HandleKeyPressed(argobj)
				{
					if(argobj.pid==null) return false;
                    if(!g_isMSIE) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					if(oParams==null) return false;
					argobj.returnvalue = false;
					if(argobj.iid==null) return false;
					var oObj = document.getElementById(argobj.iid);
					if(oObj.getAttribute("enabled")=="0") return false;
					var key = "";
					if(window.event) {
						key = window.event.keyCode;
					} else {
						if(e) {
							key = e.which;
						}
					}
					if(key=="" || key==0 || key==8 || key==9 || key==13 || key==27) return false;
					var keychar = String.fromCharCode(key);
					if(keychar=="-" && oObj.value.indexOf("-")!=-1) return false;
					goods = "-0123456789.,";
					if(goods.indexOf(keychar)!=-1) {
						argobj.returnvalue = true;
						return true;
					} else {
						alert(oParams.selectSingleNode("q_input_alert").text);
					}
					return false;
				}
				]]>
</method>
<method type="q_099_test" name="CheckValue">
<![CDATA[

				function CheckValue(argobj)
				{
					if(argobj.pid==null || argobj.iid==null) return false;
					if(document.getElementById(argobj.pid+"_q_b_skip_container").style.display!="none") {
						var oArgs = new Object;
						oArgs.pid = argobj.pid;
						oArgs.btn = "skip";
						CallMethod("q_099_test", "HideButton", oArgs);
					}
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					if(oParams==null) return false;
					var oObj = document.getElementById(argobj.iid);
					if(oObj.getAttribute("enabled")=="0") return false;
					var sValue = oObj.value;
					if(sValue.indexOf(",")!=-1) {
						sValue = replaceStr(sValue,",",".");
						oObj.value = sValue;
					}
					if(sValue.indexOf("-")!=-1) {
						if(sValue.charAt(0)!="-") {
							sValue = replaceStr(sValue,"-","");
							oObj.value = sValue;
						}
					}
					if(sValue.indexOf(".")!=-1) {
						var aTmp = sValue.split(".");
						if(aTmp.length>2) {
							sValue = aTmp[0]+".";
							for(var i=1;i<aTmp.length;i++) {
								sValue += aTmp[i];
							}
							oObj.value = sValue
						}
					}
					if(sValue.length>1) {
						var sTmp = sValue.charAt(sValue.length-1);
						var sInb = "-0123456789.";
						if(sInb.indexOf(sTmp)==-1) {
							sValue = sValue.substr(0,sValue.length-1);
							oObj.value = sValue;
							alert(oParams.selectSingleNode("q_input_alert").text);
						}
					}
					if(sValue.length>0) {
						document.getElementById(argobj.pid+"_q_b_check_container").style.display = g_isMSIE ? "inline" : "block";
						if(document.getElementById(argobj.pid+"_q_b_skip_container")!=null) document.getElementById(argobj.pid+"_q_b_skip_container").style.display = "none";
						FireEvent(argobj.pid,"onChangeNumericValue");
					}
					return false;
				}
				]]>
</method>
<method type="q_099_test" name="IfValue">
<![CDATA[

				function IfValue(argobj)
				{
					if(argobj.pid==null || argobj.iid==null) return false;
					var oObj = document.getElementById(argobj.iid);
					if(oObj.getAttribute("enabled")=="0") return false;
					var sValue = oObj.value;
					if(sValue.length>0) {
						var oArgs = new Object;
						oArgs.pid = argobj.pid;
						if(document.getElementById(argobj.pid+"_q_b_skip_container").style.display!="none") {
							oArgs.btn = "skip";
							CallMethod("q_099_test", "HideButton", oArgs);
						}
						oArgs.btn = "check";
						CallMethod("q_099_test", "DisplayButton", oArgs);
						oArgs.btn = "skip";
						CallMethod("q_099_test", "HideButton", oArgs);
						FireEvent(argobj.pid,"onChangeTextValue");
					}
				}
				]]>
</method>
<method type="q_101_currentresult" name="Constructor">
<![CDATA[

                function Constructor(argobj)
                {
					if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					if(oParams==null) return false;
					var oBoard = oParams.selectSingleNode("q_board");
					if(oBoard==null) return false;
					var sBoard = oBoard.text;
					var oObjective = g_oSCO.selectSingleNode("objectives/o[@id='"+sBoard+"']")
					if(oObjective==null) {
						alert("Current Results cannot be displayed correctly: Objective is not defined");
						return false;
					}
					var bNorm = oParams.selectSingleNode("q_normalize").text=="yes" ? true : false;
					var sMaxScore = oObjective.getAttribute("max");
					var iMaxScore = parseFloat(sMaxScore);
					if(isNaN(iMaxScore)) {
						alert("Current Results cannot be displayed correctly: Objective max score is defined incorrecly");
						return false;
					}
					oCurObj.setAttribute("board",sBoard);
					var sCurScore = GetObjectiveScore(sBoard);
					var iCurScore = parseFloat(sCurScore);
					if(isNaN(iCurScore)) iCurScore = 0;
					if(oParams.selectSingleNode("q_curpoints").text=="yes") document.getElementById(argobj.pid+"_curpoints").innerHTML = bNorm ? Math.round(iCurScore/iMaxScore*100) : sCurScore;
					if(oParams.selectSingleNode("q_maxpoints").text=="yes") document.getElementById(argobj.pid+"_maxpoints").innerHTML = bNorm ? "100" : sMaxScore;
					return true;
				}
                ]]>
</method>
<method type="q_101_currentresult" name="Refresh">
<![CDATA[

                function Refresh(argobj)
                {
                    if(argobj.pid==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var oParams = g_oParams.selectSingleNode("./param[@objectid='"+argobj.pid+"']");
					if(oParams==null) return false;
					var oBoard = oParams.selectSingleNode("q_board");
					if(oBoard==null) return false;
					var sBoard = oBoard.text;
					var oObjective = g_oSCO.selectSingleNode("objectives/o[@id='"+sBoard+"']")
					if(oObjective==null) return false;
					var bNorm = oParams.selectSingleNode("q_normalize").text=="yes" ? true : false;
					var sMaxScore = oObjective.getAttribute("max");
					var iMaxScore = parseFloat(sMaxScore);
					if(isNaN(iMaxScore)) return false;
					var sCurScore = GetObjectiveScore(sBoard);
					var iCurScore = parseFloat(sCurScore);
					if(isNaN(iCurScore)) iCurScore = 0;
					if(oParams.selectSingleNode("q_curpoints").text=="yes") document.getElementById(argobj.pid+"_curpoints").innerHTML = bNorm ? Math.round(iCurScore/iMaxScore*100) : sCurScore;
					if(oParams.selectSingleNode("q_maxpoints").text=="yes") document.getElementById(argobj.pid+"_maxpoints").innerHTML = bNorm ? "100" : sMaxScore;
					return true;
                }
                ]]>
</method>
<method type="q_101_currentresult" name="GetProperty">
<![CDATA[

				function GetProperty(argobj)
				{
					if(argobj.pid==null || argobj.property==null) return false;
					var oCurObj = document.getElementById(argobj.pid);
					if(oCurObj==null) return false;
					var sBoard = oCurObj.getAttribute("board");
					var oObjective = g_oSCO.selectSingleNode("objectives/o[@id='"+sBoard+"']")
					if(oObjective==null) return false;

					switch(argobj.property.toLowerCase()) {
						case "objectiveid":		g_vPropertyValue = sBoard; 	break;
						case "rawscore":				g_vPropertyValue = oObjective.getAttribute("raw");		break;
						case "scaledscore":			g_vPropertyValue = oObjective.getAttribute("scaled"); 	break;
						case "maxscore":				g_vPropertyValue = oObjective.getAttribute("max"); 		break;
						default: return true;
					}
					return true;
				}
				]]>
</method>
</methods>
<params>
<param objectid="OBJ_4">
<sn_backcolor></sn_backcolor>
<sn_textcolor>#ffffff</sn_textcolor>
<sn_font>Arial</sn_font>
<sn_font_size>12</sn_font_size>
<sn_font_weight>bold</sn_font_weight>
<sn_font_style>normal</sn_font_style>
<sn_textalign>left</sn_textalign>
</param>
<param objectid="OBJ_8">
<standard>no</standard>
<wait_img>images/min_turq_button_wait.gif</wait_img>
<go_img>images/min_turq_button_go.gif</go_img>
</param>
<param objectid="OBJ_15">
<box_text><![CDATA[<P><SPAN style="FONT-FAMILY: Verdana; COLOR: #000000; FONT-SIZE: 18px">password</SPAN></P>]]></box_text>
<box_margin>20</box_margin>
<box_backcolor>#FEFFFF</box_backcolor>
<box_borderstyle>double</box_borderstyle>
<box_bordercolor>#CCCCCC</box_bordercolor>
<box_borderwidth>3</box_borderwidth>
<box_opacity>100</box_opacity>
<box_shadow>yes</box_shadow>
<box_shadow_x>5</box_shadow_x>
<box_shadow_y>5</box_shadow_y>
<box_shadow_opacity>40</box_shadow_opacity>
<box_shadow_copy>yes</box_shadow_copy>
<box_shadow_backcolor>#CCCCCC</box_shadow_backcolor>
<box_shadow_borderstyle>solid</box_shadow_borderstyle>
<box_shadow_bordercolor>#CCCCCC</box_shadow_bordercolor>
<box_shadow_borderwidth>3</box_shadow_borderwidth>
<typewriter>no</typewriter>
<typewriter_speed>8</typewriter_speed>
</param>
<param objectid="OBJ_20">
<agent>womanhead</agent>
<wmode>transparent</wmode>
<bgcolor>#FFFFFF</bgcolor>
</param>
<param objectid="OBJ_21">
<balloon_profile>yellow_orange</balloon_profile>
<arrow>no</arrow>
<balloon_text><![CDATA[<P><SPAN style="FONT-FAMILY: Verdana; FONT-SIZE: 24px">Welcome to the computer-based exam for Plan Training Sessions.&nbsp;&nbsp;Please answer the questions honestly.&nbsp; </SPAN></P>
<P><SPAN style="FONT-SIZE: 24px"><SPAN style="FONT-FAMILY: Verdana">For each question, you'll need to click on the tick area&nbsp;corresponding to your answer then click submit answer.</SPAN></P>
<P><SPAN style="FONT-FAMILY: Verdana">Test items are given&nbsp;a time limit of 1 minute.&nbsp; A time indicator is located at the bottom of the page.&nbsp; When time elapses, you can no longer key in your answer. Click next question to answer the next test item.</SPAN></P>
<P><SPAN style="FONT-FAMILY: Verdana"><SPAN style="COLOR: #ff3300">To pass this test, you need to answer at least 21 items correctly.</SPAN><BR><BR>Goodluck and Godspeed!!!!!!</SPAN></SPAN><BR></P>]]></balloon_text>
<balloon_margin>5</balloon_margin>
</param>
<param objectid="OBJ_23">
<input_id>plan</input_id>
<var_scope>slide</var_scope>
<input_text></input_text>
<input_maxlength></input_maxlength>
<input_border_style>solid</input_border_style>
<input_border_width>2</input_border_width>
<input_border_color>#666666</input_border_color>
<input_bg_color>#FFFFFF</input_bg_color>
<input_font>Arial</input_font>
<input_font_size>22</input_font_size>
<input_font_weight>normal</input_font_weight>
<input_font_style>normal</input_font_style>
<input_font_color>#000000</input_font_color>
<input_text_align>left</input_text_align>
</param>
<param objectid="OBJ_24">
<balloon_profile>yellow_orange</balloon_profile>
<arrow>no</arrow>
<balloon_text><![CDATA[<P><SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 24px">If you are ready for the Institutional Evaluation, please press enter on your keyboard.</SPAN></P>]]></balloon_text>
<balloon_margin>5</balloon_margin>
</param>
<param objectid="OBJ_17">
<q_questions>
<item>
<q_type>choice</q_type>
<q_question><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">The main basis of Performance Criteria for a Qualification is the _____________</SPAN>]]></q_question>
<q_choice_variants>
<item>
<q_variant><![CDATA[<P><SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Competency Based Curriculum</SPAN></P>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Competency Based Learning Materials</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Requirement of a company</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<P><SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Competency Standards</SPAN></P>]]></q_variant>
<q_right>yes</q_right>
</item>
</q_choice_variants>
<q_select_variants></q_select_variants>
<q_shuffle>yes</q_shuffle>
<q_range_variants></q_range_variants>
<q_numeric_variants></q_numeric_variants>
<q_text_variants></q_text_variants>
<q_showq>yes</q_showq>
<q_oto_variants></q_oto_variants>
<q_image></q_image>
<q_att_auto>no</q_att_auto>
<q_attempts>1</q_attempts>
<q_timer_switch>yes</q_timer_switch>
<q_timer>60</q_timer>
<q_skip>no</q_skip>
<q_skipper1>no</q_skipper1>
<q_skipper2>yes</q_skipper2>
<q_weight>1</q_weight>
<q_pointset_fixed>yes</q_pointset_fixed>
<q_pointset_auto>no</q_pointset_auto>
<q_scoreboards>
<item>
<q_board>total</q_board>
</item>
</q_scoreboards>
<q_fb_switch>yes</q_fb_switch>
<q_feedbackright><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Correct</SPAN>]]></q_feedbackright>
<q_feedbackwrong><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect</SPAN>]]></q_feedbackwrong>
<q_feedbackexhausted><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect. No more attempts.</SPAN>]]></q_feedbackexhausted>
<q_feedbacktimeout><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Time is out.</SPAN>]]></q_feedbacktimeout>
<q_feedbackleft>100</q_feedbackleft>
<q_feedbacktop>50</q_feedbacktop>
</item>
<item>
<q_type>choice</q_type>
<q_question><![CDATA[<P><SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Which of the following statements represent Task Skills</SPAN></P>]]></q_question>
<q_choice_variants>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Occupational health and safety procedures are implemented in line with legislative requirements</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Relevant safety systems information is accessed, analysed and used in responding to an identified hazard </SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<P><SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Tools and equipment are cleaned and stored in accordance with workplace requirements</SPAN></P>]]></q_variant>
<q_right>yes</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Emergency shutdown procedures are carried out in accordance with manufacturer’s instructions and site procedures</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
</q_choice_variants>
<q_select_variants></q_select_variants>
<q_shuffle>yes</q_shuffle>
<q_range_variants></q_range_variants>
<q_numeric_variants></q_numeric_variants>
<q_text_variants></q_text_variants>
<q_showq>yes</q_showq>
<q_oto_variants></q_oto_variants>
<q_image></q_image>
<q_att_auto>no</q_att_auto>
<q_attempts>1</q_attempts>
<q_timer_switch>yes</q_timer_switch>
<q_timer>60</q_timer>
<q_skip>no</q_skip>
<q_skipper1>no</q_skipper1>
<q_skipper2>yes</q_skipper2>
<q_weight>1</q_weight>
<q_pointset_fixed>yes</q_pointset_fixed>
<q_pointset_auto>no</q_pointset_auto>
<q_scoreboards>
<item>
<q_board>total</q_board>
</item>
</q_scoreboards>
<q_fb_switch>yes</q_fb_switch>
<q_feedbackright><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Correct</SPAN>]]></q_feedbackright>
<q_feedbackwrong><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect</SPAN>]]></q_feedbackwrong>
<q_feedbackexhausted><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect. No more attempts.</SPAN>]]></q_feedbackexhausted>
<q_feedbacktimeout><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Time is out.</SPAN>]]></q_feedbacktimeout>
<q_feedbackleft>100</q_feedbackleft>
<q_feedbacktop>50</q_feedbacktop>
</item>
<item>
<q_type>choice</q_type>
<q_question><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Task Management Skill captures the skills used as people plan and integrate a number of potentially different tasks to achieve a complete outcome. Which of the following statements represents a Task Management Skill?</SPAN>]]></q_question>
<q_choice_variants>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Sources of contamination and cross contamination are identified using enterprise guidelines.</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">&nbsp; Test results are recorded in line with laboratory operating procedures.</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Following presentation, feedback on product design is obtained from the appropriate personnel. Any modifications are identified and incorporated into the final design.</SPAN>]]></q_variant>
<q_right>yes</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Tools and equipment are cleaned and stored in accordance with workplace requirements.</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
</q_choice_variants>
<q_select_variants></q_select_variants>
<q_shuffle>yes</q_shuffle>
<q_range_variants></q_range_variants>
<q_numeric_variants></q_numeric_variants>
<q_text_variants></q_text_variants>
<q_showq>yes</q_showq>
<q_oto_variants></q_oto_variants>
<q_image></q_image>
<q_att_auto>no</q_att_auto>
<q_attempts>1</q_attempts>
<q_timer_switch>yes</q_timer_switch>
<q_timer>60</q_timer>
<q_skip>no</q_skip>
<q_skipper1>no</q_skipper1>
<q_skipper2>yes</q_skipper2>
<q_weight>1</q_weight>
<q_pointset_fixed>yes</q_pointset_fixed>
<q_pointset_auto>no</q_pointset_auto>
<q_scoreboards>
<item>
<q_board>total</q_board>
</item>
</q_scoreboards>
<q_fb_switch>yes</q_fb_switch>
<q_feedbackright><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Correct</SPAN>]]></q_feedbackright>
<q_feedbackwrong><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect</SPAN>]]></q_feedbackwrong>
<q_feedbackexhausted><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect. No more attempts.</SPAN>]]></q_feedbackexhausted>
<q_feedbacktimeout><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Time is out.</SPAN>]]></q_feedbacktimeout>
<q_feedbackleft>100</q_feedbackleft>
<q_feedbacktop>50</q_feedbacktop>
</item>
<item>
<q_type>choice</q_type>
<q_question><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Contingency Management Skills require an individual to respond to irregularities and breakdown routines. Which of the following statements is a Contingency management skill?</SPAN>]]></q_question>
<q_choice_variants>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Staff are trained in emergency management procedures in line with enterprise and legislative requirements.</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Relevant safety systems information is accessed, analysed and used in responding to an identified hazard</SPAN>]]></q_variant>
<q_right>yes</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Emergency shutdown procedures are carried out in accordance with manufacturer’s instructions and site procedures.</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Emergency shutdown procedures are carried out in accordance with manufacturer’s instructions and site procedures.</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
</q_choice_variants>
<q_select_variants></q_select_variants>
<q_shuffle>no</q_shuffle>
<q_range_variants></q_range_variants>
<q_numeric_variants></q_numeric_variants>
<q_text_variants></q_text_variants>
<q_showq>yes</q_showq>
<q_oto_variants></q_oto_variants>
<q_image></q_image>
<q_att_auto>no</q_att_auto>
<q_attempts>1</q_attempts>
<q_timer_switch>yes</q_timer_switch>
<q_timer>60</q_timer>
<q_skip>no</q_skip>
<q_skipper1>no</q_skipper1>
<q_skipper2>yes</q_skipper2>
<q_weight>1</q_weight>
<q_pointset_fixed>yes</q_pointset_fixed>
<q_pointset_auto>no</q_pointset_auto>
<q_scoreboards>
<item>
<q_board>total</q_board>
</item>
</q_scoreboards>
<q_fb_switch>yes</q_fb_switch>
<q_feedbackright><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Correct</SPAN>]]></q_feedbackright>
<q_feedbackwrong><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect</SPAN>]]></q_feedbackwrong>
<q_feedbackexhausted><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect. No more attempts.</SPAN>]]></q_feedbackexhausted>
<q_feedbacktimeout><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Time is out.</SPAN>]]></q_feedbacktimeout>
<q_feedbackleft>100</q_feedbackleft>
<q_feedbacktop>50</q_feedbacktop>
</item>
<item>
<q_type>choice</q_type>
<q_question><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Job/Role Environment Skills is exemplified in which of the following statements?</SPAN>]]></q_question>
<q_choice_variants>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Results of evaluation are used to guide further training, where required.</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Notification of shift availability, or non attendance for shift, is given without undue delay and according to store policies and procedures</SPAN>]]></q_variant>
<q_right>yes</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Pyrotechnics are executed on cue</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Emergency shutdown procedures are carried out in accordance with manufacturer’s instructions and site procedures.</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
</q_choice_variants>
<q_select_variants></q_select_variants>
<q_shuffle>yes</q_shuffle>
<q_range_variants></q_range_variants>
<q_numeric_variants></q_numeric_variants>
<q_text_variants></q_text_variants>
<q_showq>yes</q_showq>
<q_oto_variants></q_oto_variants>
<q_image></q_image>
<q_att_auto>no</q_att_auto>
<q_attempts>1</q_attempts>
<q_timer_switch>yes</q_timer_switch>
<q_timer>60</q_timer>
<q_skip>no</q_skip>
<q_skipper1>no</q_skipper1>
<q_skipper2>yes</q_skipper2>
<q_weight>1</q_weight>
<q_pointset_fixed>yes</q_pointset_fixed>
<q_pointset_auto>no</q_pointset_auto>
<q_scoreboards>
<item>
<q_board>total</q_board>
</item>
</q_scoreboards>
<q_fb_switch>yes</q_fb_switch>
<q_feedbackright><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Correct</SPAN>]]></q_feedbackright>
<q_feedbackwrong><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect</SPAN>]]></q_feedbackwrong>
<q_feedbackexhausted><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect. No more attempts.</SPAN>]]></q_feedbackexhausted>
<q_feedbacktimeout><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Time is out.</SPAN>]]></q_feedbacktimeout>
<q_feedbackleft>100</q_feedbackleft>
<q_feedbacktop>50</q_feedbacktop>
</item>
<item>
<q_type>choice</q_type>
<q_question><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 12px">&nbsp; <SPAN style="FONT-SIZE: 22px">This section enumerates the job titles of the workers who are competent in the qualification described in the Training Regulations.</SPAN></SPAN>]]></q_question>
<q_choice_variants>
<item>
<q_variant><![CDATA[<P><SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Section 1. Definition of Qualification</SPAN></P>]]></q_variant>
<q_right>yes</q_right>
</item>
<item>
<q_variant><![CDATA[<P><SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Section 2. Competency Standards</SPAN></P>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<P><SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Section 3. Training Standards</SPAN></P>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<P><SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Section 4. National Assessment and Certification arrangement</SPAN></P>]]></q_variant>
<q_right>no</q_right>
</item>
</q_choice_variants>
<q_select_variants></q_select_variants>
<q_shuffle>yes</q_shuffle>
<q_range_variants></q_range_variants>
<q_numeric_variants></q_numeric_variants>
<q_text_variants></q_text_variants>
<q_showq>yes</q_showq>
<q_oto_variants></q_oto_variants>
<q_image></q_image>
<q_att_auto>no</q_att_auto>
<q_attempts>1</q_attempts>
<q_timer_switch>yes</q_timer_switch>
<q_timer>60</q_timer>
<q_skip>no</q_skip>
<q_skipper1>no</q_skipper1>
<q_skipper2>yes</q_skipper2>
<q_weight>1</q_weight>
<q_pointset_fixed>yes</q_pointset_fixed>
<q_pointset_auto>no</q_pointset_auto>
<q_scoreboards>
<item>
<q_board>total</q_board>
</item>
</q_scoreboards>
<q_fb_switch>yes</q_fb_switch>
<q_feedbackright><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Correct</SPAN>]]></q_feedbackright>
<q_feedbackwrong><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect</SPAN>]]></q_feedbackwrong>
<q_feedbackexhausted><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect. No more attempts.</SPAN>]]></q_feedbackexhausted>
<q_feedbacktimeout><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Time is out.</SPAN>]]></q_feedbacktimeout>
<q_feedbackleft>100</q_feedbackleft>
<q_feedbacktop>50</q_feedbacktop>
</item>
<item>
<q_type>choice</q_type>
<q_question><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">&nbsp;Competency Based Training(CBT) is a ____________</SPAN>]]></q_question>
<q_choice_variants>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">&nbsp;Delivery Mode</SPAN>]]></q_variant>
<q_right>yes</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">&nbsp;Learning Method</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Teaching Method</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">&nbsp;Training Technique</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
</q_choice_variants>
<q_select_variants></q_select_variants>
<q_shuffle>yes</q_shuffle>
<q_range_variants></q_range_variants>
<q_numeric_variants></q_numeric_variants>
<q_text_variants></q_text_variants>
<q_showq>yes</q_showq>
<q_oto_variants></q_oto_variants>
<q_image></q_image>
<q_att_auto>no</q_att_auto>
<q_attempts>1</q_attempts>
<q_timer_switch>yes</q_timer_switch>
<q_timer>60</q_timer>
<q_skip>no</q_skip>
<q_skipper1>no</q_skipper1>
<q_skipper2>yes</q_skipper2>
<q_weight>1</q_weight>
<q_pointset_fixed>yes</q_pointset_fixed>
<q_pointset_auto>no</q_pointset_auto>
<q_scoreboards>
<item>
<q_board>total</q_board>
</item>
</q_scoreboards>
<q_fb_switch>yes</q_fb_switch>
<q_feedbackright><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Correct</SPAN>]]></q_feedbackright>
<q_feedbackwrong><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect</SPAN>]]></q_feedbackwrong>
<q_feedbackexhausted><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect. No more attempts.</SPAN>]]></q_feedbackexhausted>
<q_feedbacktimeout><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Time is out.</SPAN>]]></q_feedbacktimeout>
<q_feedbackleft>100</q_feedbackleft>
<q_feedbacktop>50</q_feedbacktop>
</item>
<item>
<q_type>choice</q_type>
<q_question><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">&nbsp; A Training Method that is used for presenting factual topics ___________</SPAN>]]></q_question>
<q_choice_variants>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Demonstration</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Discussion</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">&nbsp; Lecture</SPAN>]]></q_variant>
<q_right>yes</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">&nbsp;Role playing</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
</q_choice_variants>
<q_select_variants></q_select_variants>
<q_shuffle>yes</q_shuffle>
<q_range_variants></q_range_variants>
<q_numeric_variants></q_numeric_variants>
<q_text_variants></q_text_variants>
<q_showq>yes</q_showq>
<q_oto_variants></q_oto_variants>
<q_image></q_image>
<q_att_auto>no</q_att_auto>
<q_attempts>1</q_attempts>
<q_timer_switch>yes</q_timer_switch>
<q_timer>60</q_timer>
<q_skip>no</q_skip>
<q_skipper1>no</q_skipper1>
<q_skipper2>yes</q_skipper2>
<q_weight>1</q_weight>
<q_pointset_fixed>yes</q_pointset_fixed>
<q_pointset_auto>no</q_pointset_auto>
<q_scoreboards>
<item>
<q_board>total</q_board>
</item>
</q_scoreboards>
<q_fb_switch>yes</q_fb_switch>
<q_feedbackright><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Correct</SPAN>]]></q_feedbackright>
<q_feedbackwrong><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect</SPAN>]]></q_feedbackwrong>
<q_feedbackexhausted><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect. No more attempts.</SPAN>]]></q_feedbackexhausted>
<q_feedbacktimeout><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Time is out.</SPAN>]]></q_feedbacktimeout>
<q_feedbackleft>100</q_feedbackleft>
<q_feedbacktop>50</q_feedbacktop>
</item>
<item>
<q_type>choice</q_type>
<q_question><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">The building blocks of a unit of competency that describes the worker is able to perform are the</SPAN>]]></q_question>
<q_choice_variants>
<item>
<q_variant><![CDATA[<P><SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Elements</SPAN></P>]]></q_variant>
<q_right>yes</q_right>
</item>
<item>
<q_variant><![CDATA[<P><SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Skills</SPAN></P>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<P><SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Tasks</SPAN></P>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<P><SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Performance Criteria</SPAN></P>]]></q_variant>
<q_right>no</q_right>
</item>
</q_choice_variants>
<q_select_variants></q_select_variants>
<q_shuffle>yes</q_shuffle>
<q_range_variants></q_range_variants>
<q_numeric_variants></q_numeric_variants>
<q_text_variants></q_text_variants>
<q_showq>yes</q_showq>
<q_oto_variants></q_oto_variants>
<q_image></q_image>
<q_att_auto>no</q_att_auto>
<q_attempts>1</q_attempts>
<q_timer_switch>yes</q_timer_switch>
<q_timer>60</q_timer>
<q_skip>no</q_skip>
<q_skipper1>no</q_skipper1>
<q_skipper2>yes</q_skipper2>
<q_weight>1</q_weight>
<q_pointset_fixed>yes</q_pointset_fixed>
<q_pointset_auto>no</q_pointset_auto>
<q_scoreboards>
<item>
<q_board>total</q_board>
</item>
</q_scoreboards>
<q_fb_switch>yes</q_fb_switch>
<q_feedbackright><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Correct</SPAN>]]></q_feedbackright>
<q_feedbackwrong><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect</SPAN>]]></q_feedbackwrong>
<q_feedbackexhausted><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect. No more attempts.</SPAN>]]></q_feedbackexhausted>
<q_feedbacktimeout><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Time is out.</SPAN>]]></q_feedbacktimeout>
<q_feedbackleft>100</q_feedbackleft>
<q_feedbacktop>50</q_feedbacktop>
</item>
<item>
<q_type>choice</q_type>
<q_question><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Which of the following part of the CBLM gives the trainee an opportunity to learn knowledge contents&nbsp;of the competency ____________</SPAN>]]></q_question>
<q_choice_variants>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Assignment Sheet</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Information Sheet</SPAN>]]></q_variant>
<q_right>yes</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Job Sheet</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">&nbsp;Performance Checklist</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
</q_choice_variants>
<q_select_variants></q_select_variants>
<q_shuffle>yes</q_shuffle>
<q_range_variants></q_range_variants>
<q_numeric_variants></q_numeric_variants>
<q_text_variants></q_text_variants>
<q_showq>yes</q_showq>
<q_oto_variants></q_oto_variants>
<q_image></q_image>
<q_att_auto>no</q_att_auto>
<q_attempts>1</q_attempts>
<q_timer_switch>yes</q_timer_switch>
<q_timer>60</q_timer>
<q_skip>no</q_skip>
<q_skipper1>no</q_skipper1>
<q_skipper2>yes</q_skipper2>
<q_weight>1</q_weight>
<q_pointset_fixed>yes</q_pointset_fixed>
<q_pointset_auto>no</q_pointset_auto>
<q_scoreboards>
<item>
<q_board>total</q_board>
</item>
</q_scoreboards>
<q_fb_switch>yes</q_fb_switch>
<q_feedbackright><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Correct</SPAN>]]></q_feedbackright>
<q_feedbackwrong><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect</SPAN>]]></q_feedbackwrong>
<q_feedbackexhausted><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect. No more attempts.</SPAN>]]></q_feedbackexhausted>
<q_feedbacktimeout><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Time is out.</SPAN>]]></q_feedbacktimeout>
<q_feedbackleft>100</q_feedbackleft>
<q_feedbacktop>50</q_feedbacktop>
</item>
<item>
<q_type>choice</q_type>
<q_question><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Which instructional sheet serves as a guide for evaluating the trainee’s own performance?</SPAN>]]></q_question>
<q_choice_variants>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Assignment Sheet</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Information Sheet</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Job Sheet</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Performance Checklist</SPAN>]]></q_variant>
<q_right>yes</q_right>
</item>
</q_choice_variants>
<q_select_variants></q_select_variants>
<q_shuffle>yes</q_shuffle>
<q_range_variants></q_range_variants>
<q_numeric_variants></q_numeric_variants>
<q_text_variants></q_text_variants>
<q_showq>yes</q_showq>
<q_oto_variants></q_oto_variants>
<q_image></q_image>
<q_att_auto>no</q_att_auto>
<q_attempts>1</q_attempts>
<q_timer_switch>yes</q_timer_switch>
<q_timer>60</q_timer>
<q_skip>no</q_skip>
<q_skipper1>no</q_skipper1>
<q_skipper2>yes</q_skipper2>
<q_weight>1</q_weight>
<q_pointset_fixed>yes</q_pointset_fixed>
<q_pointset_auto>no</q_pointset_auto>
<q_scoreboards>
<item>
<q_board>total</q_board>
</item>
</q_scoreboards>
<q_fb_switch>yes</q_fb_switch>
<q_feedbackright><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Correct</SPAN>]]></q_feedbackright>
<q_feedbackwrong><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect</SPAN>]]></q_feedbackwrong>
<q_feedbackexhausted><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect. No more attempts.</SPAN>]]></q_feedbackexhausted>
<q_feedbacktimeout><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Time is out.</SPAN>]]></q_feedbacktimeout>
<q_feedbackleft>100</q_feedbackleft>
<q_feedbacktop>50</q_feedbacktop>
</item>
<item>
<q_type>choice</q_type>
<q_question><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">An assessment done before and during training which aims to collect immediate evidences about learning so that adjustments can be done to training sessions is a</SPAN>]]></q_question>
<q_choice_variants>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Formative assessment</SPAN>]]></q_variant>
<q_right>yes</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Knowledge assessment </SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Skill assessment</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Summative assessment</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
</q_choice_variants>
<q_select_variants></q_select_variants>
<q_shuffle>yes</q_shuffle>
<q_range_variants></q_range_variants>
<q_numeric_variants></q_numeric_variants>
<q_text_variants></q_text_variants>
<q_showq>yes</q_showq>
<q_oto_variants></q_oto_variants>
<q_image></q_image>
<q_att_auto>no</q_att_auto>
<q_attempts>1</q_attempts>
<q_timer_switch>yes</q_timer_switch>
<q_timer>60</q_timer>
<q_skip>no</q_skip>
<q_skipper1>no</q_skipper1>
<q_skipper2>yes</q_skipper2>
<q_weight>1</q_weight>
<q_pointset_fixed>yes</q_pointset_fixed>
<q_pointset_auto>no</q_pointset_auto>
<q_scoreboards>
<item>
<q_board>total</q_board>
</item>
</q_scoreboards>
<q_fb_switch>yes</q_fb_switch>
<q_feedbackright><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Correct</SPAN>]]></q_feedbackright>
<q_feedbackwrong><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect</SPAN>]]></q_feedbackwrong>
<q_feedbackexhausted><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect. No more attempts.</SPAN>]]></q_feedbackexhausted>
<q_feedbacktimeout><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Time is out.</SPAN>]]></q_feedbacktimeout>
<q_feedbackleft>100</q_feedbackleft>
<q_feedbacktop>50</q_feedbacktop>
</item>
<item>
<q_type>choice</q_type>
<q_question><![CDATA[<P><SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">The statement on the coverage of the course, its relevance in the industry sector, and the possible occupations the trainee will have after completion is the</SPAN></P>]]></q_question>
<q_choice_variants>
<item>
<q_variant><![CDATA[<P><SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">assessment criteria</SPAN></P>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<P><SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">course content</SPAN></P>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<P><SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">course descriptor</SPAN></P>]]></q_variant>
<q_right>yes</q_right>
</item>
<item>
<q_variant><![CDATA[<P><SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">course title</SPAN></P>]]></q_variant>
<q_right>no</q_right>
</item>
</q_choice_variants>
<q_select_variants></q_select_variants>
<q_shuffle>yes</q_shuffle>
<q_range_variants></q_range_variants>
<q_numeric_variants></q_numeric_variants>
<q_text_variants></q_text_variants>
<q_showq>yes</q_showq>
<q_oto_variants></q_oto_variants>
<q_image></q_image>
<q_att_auto>no</q_att_auto>
<q_attempts>1</q_attempts>
<q_timer_switch>yes</q_timer_switch>
<q_timer>60</q_timer>
<q_skip>no</q_skip>
<q_skipper1>no</q_skipper1>
<q_skipper2>yes</q_skipper2>
<q_weight>1</q_weight>
<q_pointset_fixed>yes</q_pointset_fixed>
<q_pointset_auto>no</q_pointset_auto>
<q_scoreboards>
<item>
<q_board>total</q_board>
</item>
</q_scoreboards>
<q_fb_switch>yes</q_fb_switch>
<q_feedbackright><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Correct</SPAN>]]></q_feedbackright>
<q_feedbackwrong><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect</SPAN>]]></q_feedbackwrong>
<q_feedbackexhausted><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect. No more attempts.</SPAN>]]></q_feedbackexhausted>
<q_feedbacktimeout><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Time is out.</SPAN>]]></q_feedbacktimeout>
<q_feedbackleft>100</q_feedbackleft>
<q_feedbacktop>50</q_feedbacktop>
</item>
<item>
<q_type>choice</q_type>
<q_question><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">When is it appropriate to construct a table of specifications?</SPAN>]]></q_question>
<q_choice_variants>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">After the students have taken the test</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">After you write the test questions</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Before you write the test questions</SPAN>]]></q_variant>
<q_right>yes</q_right>
</item>
<item>
<q_variant><![CDATA[<P><SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">ONLY when you have to create the test</SPAN></P>]]></q_variant>
<q_right>no</q_right>
</item>
</q_choice_variants>
<q_select_variants></q_select_variants>
<q_shuffle>yes</q_shuffle>
<q_range_variants></q_range_variants>
<q_numeric_variants></q_numeric_variants>
<q_text_variants></q_text_variants>
<q_showq>yes</q_showq>
<q_oto_variants></q_oto_variants>
<q_image></q_image>
<q_att_auto>no</q_att_auto>
<q_attempts>1</q_attempts>
<q_timer_switch>yes</q_timer_switch>
<q_timer>60</q_timer>
<q_skip>no</q_skip>
<q_skipper1>no</q_skipper1>
<q_skipper2>yes</q_skipper2>
<q_weight>1</q_weight>
<q_pointset_fixed>yes</q_pointset_fixed>
<q_pointset_auto>no</q_pointset_auto>
<q_scoreboards>
<item>
<q_board>total</q_board>
</item>
</q_scoreboards>
<q_fb_switch>yes</q_fb_switch>
<q_feedbackright><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Correct</SPAN>]]></q_feedbackright>
<q_feedbackwrong><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect</SPAN>]]></q_feedbackwrong>
<q_feedbackexhausted><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect. No more attempts.</SPAN>]]></q_feedbackexhausted>
<q_feedbacktimeout><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Time is out.</SPAN>]]></q_feedbacktimeout>
<q_feedbackleft>100</q_feedbackleft>
<q_feedbacktop>50</q_feedbacktop>
</item>
<item>
<q_type>choice</q_type>
<q_question><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Are tests from book publishers better than those you develop? </SPAN>]]></q_question>
<q_choice_variants>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">No, because they don’t know your teaching style</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">No, because they don't know what you have taught and what has been emphasized </SPAN>]]></q_variant>
<q_right>yes</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Yes, because they have professionals who write the questions </SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Yes, because they wrote the textbook </SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
</q_choice_variants>
<q_select_variants></q_select_variants>
<q_shuffle>yes</q_shuffle>
<q_range_variants></q_range_variants>
<q_numeric_variants></q_numeric_variants>
<q_text_variants></q_text_variants>
<q_showq>yes</q_showq>
<q_oto_variants></q_oto_variants>
<q_image></q_image>
<q_att_auto>no</q_att_auto>
<q_attempts>1</q_attempts>
<q_timer_switch>yes</q_timer_switch>
<q_timer>60</q_timer>
<q_skip>no</q_skip>
<q_skipper1>no</q_skipper1>
<q_skipper2>yes</q_skipper2>
<q_weight>1</q_weight>
<q_pointset_fixed>yes</q_pointset_fixed>
<q_pointset_auto>no</q_pointset_auto>
<q_scoreboards>
<item>
<q_board>total</q_board>
</item>
</q_scoreboards>
<q_fb_switch>yes</q_fb_switch>
<q_feedbackright><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Correct</SPAN>]]></q_feedbackright>
<q_feedbackwrong><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect</SPAN>]]></q_feedbackwrong>
<q_feedbackexhausted><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect. No more attempts.</SPAN>]]></q_feedbackexhausted>
<q_feedbacktimeout><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Time is out.</SPAN>]]></q_feedbacktimeout>
<q_feedbackleft>100</q_feedbackleft>
<q_feedbacktop>50</q_feedbacktop>
</item>
<item>
<q_type>choice</q_type>
<q_question><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">When should tests from the publisher be used? </SPAN>]]></q_question>
<q_choice_variants>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Any time </SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Never </SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">When they correspond to your table of specifications </SPAN>]]></q_variant>
<q_right>yes</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">When you don't have time to construct one </SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
</q_choice_variants>
<q_select_variants></q_select_variants>
<q_shuffle>yes</q_shuffle>
<q_range_variants></q_range_variants>
<q_numeric_variants></q_numeric_variants>
<q_text_variants></q_text_variants>
<q_showq>yes</q_showq>
<q_oto_variants></q_oto_variants>
<q_image></q_image>
<q_att_auto>no</q_att_auto>
<q_attempts>1</q_attempts>
<q_timer_switch>yes</q_timer_switch>
<q_timer>60</q_timer>
<q_skip>no</q_skip>
<q_skipper1>no</q_skipper1>
<q_skipper2>yes</q_skipper2>
<q_weight>1</q_weight>
<q_pointset_fixed>yes</q_pointset_fixed>
<q_pointset_auto>no</q_pointset_auto>
<q_scoreboards>
<item>
<q_board>total</q_board>
</item>
</q_scoreboards>
<q_fb_switch>yes</q_fb_switch>
<q_feedbackright><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Correct</SPAN>]]></q_feedbackright>
<q_feedbackwrong><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect</SPAN>]]></q_feedbackwrong>
<q_feedbackexhausted><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect. No more attempts.</SPAN>]]></q_feedbackexhausted>
<q_feedbacktimeout><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Time is out.</SPAN>]]></q_feedbacktimeout>
<q_feedbackleft>100</q_feedbackleft>
<q_feedbacktop>50</q_feedbacktop>
</item>
<item>
<q_type>choice</q_type>
<q_question><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">What is the first information entered into the table of specifications?</SPAN>]]></q_question>
<q_choice_variants>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Number of questions per cell </SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Objectives or topics</SPAN>]]></q_variant>
<q_right>yes</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 12px">&nbsp;<SPAN style="FONT-SIZE: 22px">Percentage of test per topic</SPAN></SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Total number of questions on the test </SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
</q_choice_variants>
<q_select_variants></q_select_variants>
<q_shuffle>yes</q_shuffle>
<q_range_variants></q_range_variants>
<q_numeric_variants></q_numeric_variants>
<q_text_variants></q_text_variants>
<q_showq>yes</q_showq>
<q_oto_variants></q_oto_variants>
<q_image></q_image>
<q_att_auto>no</q_att_auto>
<q_attempts>1</q_attempts>
<q_timer_switch>yes</q_timer_switch>
<q_timer>60</q_timer>
<q_skip>no</q_skip>
<q_skipper1>no</q_skipper1>
<q_skipper2>yes</q_skipper2>
<q_weight>1</q_weight>
<q_pointset_fixed>yes</q_pointset_fixed>
<q_pointset_auto>no</q_pointset_auto>
<q_scoreboards>
<item>
<q_board>total</q_board>
</item>
</q_scoreboards>
<q_fb_switch>yes</q_fb_switch>
<q_feedbackright><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Correct</SPAN>]]></q_feedbackright>
<q_feedbackwrong><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect</SPAN>]]></q_feedbackwrong>
<q_feedbackexhausted><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect. No more attempts.</SPAN>]]></q_feedbackexhausted>
<q_feedbacktimeout><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Time is out.</SPAN>]]></q_feedbacktimeout>
<q_feedbackleft>100</q_feedbackleft>
<q_feedbacktop>50</q_feedbacktop>
</item>
<item>
<q_type>choice</q_type>
<q_question><![CDATA[<P><SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">A trainee that perceives things abtractly and process them reflectively and learns by testing theories and applying common sense is an</SPAN></P>]]></q_question>
<q_choice_variants>
<item>
<q_variant><![CDATA[<P><SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">activist</SPAN></P>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<P><SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">pragmatist</SPAN></P>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<P><SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">reflector</SPAN></P>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<P><SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">theorist</SPAN></P>]]></q_variant>
<q_right>yes</q_right>
</item>
</q_choice_variants>
<q_select_variants></q_select_variants>
<q_shuffle>yes</q_shuffle>
<q_range_variants></q_range_variants>
<q_numeric_variants></q_numeric_variants>
<q_text_variants></q_text_variants>
<q_showq>yes</q_showq>
<q_oto_variants></q_oto_variants>
<q_image></q_image>
<q_att_auto>no</q_att_auto>
<q_attempts>1</q_attempts>
<q_timer_switch>yes</q_timer_switch>
<q_timer>60</q_timer>
<q_skip>no</q_skip>
<q_skipper1>no</q_skipper1>
<q_skipper2>yes</q_skipper2>
<q_weight>1</q_weight>
<q_pointset_fixed>yes</q_pointset_fixed>
<q_pointset_auto>no</q_pointset_auto>
<q_scoreboards>
<item>
<q_board>total</q_board>
</item>
</q_scoreboards>
<q_fb_switch>yes</q_fb_switch>
<q_feedbackright><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Correct</SPAN>]]></q_feedbackright>
<q_feedbackwrong><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect</SPAN>]]></q_feedbackwrong>
<q_feedbackexhausted><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect. No more attempts.</SPAN>]]></q_feedbackexhausted>
<q_feedbacktimeout><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Time is out.</SPAN>]]></q_feedbacktimeout>
<q_feedbackleft>100</q_feedbackleft>
<q_feedbacktop>50</q_feedbacktop>
</item>
<item>
<q_type>choice</q_type>
<q_question><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 12px">A<SPAN style="FONT-SIZE: 22px"> training method that simulate strategic decision-making situations. </SPAN></SPAN>]]></q_question>
<q_choice_variants>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">case study</SPAN>]]></q_variant>
<q_right>yes</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">equipment simulation</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">demonstration</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">&nbsp;role play</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
</q_choice_variants>
<q_select_variants></q_select_variants>
<q_shuffle>yes</q_shuffle>
<q_range_variants></q_range_variants>
<q_numeric_variants></q_numeric_variants>
<q_text_variants></q_text_variants>
<q_showq>yes</q_showq>
<q_oto_variants></q_oto_variants>
<q_image></q_image>
<q_att_auto>no</q_att_auto>
<q_attempts>1</q_attempts>
<q_timer_switch>yes</q_timer_switch>
<q_timer>60</q_timer>
<q_skip>no</q_skip>
<q_skipper1>no</q_skipper1>
<q_skipper2>yes</q_skipper2>
<q_weight>1</q_weight>
<q_pointset_fixed>yes</q_pointset_fixed>
<q_pointset_auto>no</q_pointset_auto>
<q_scoreboards>
<item>
<q_board>total</q_board>
</item>
</q_scoreboards>
<q_fb_switch>yes</q_fb_switch>
<q_feedbackright><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Correct</SPAN>]]></q_feedbackright>
<q_feedbackwrong><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect</SPAN>]]></q_feedbackwrong>
<q_feedbackexhausted><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect. No more attempts.</SPAN>]]></q_feedbackexhausted>
<q_feedbacktimeout><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Time is out.</SPAN>]]></q_feedbacktimeout>
<q_feedbackleft>100</q_feedbackleft>
<q_feedbacktop>50</q_feedbacktop>
</item>
<item>
<q_type>choice</q_type>
<q_question><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">This is a clearly stated trainer aid in conducting CBT. It describes the objectives of the competency and the learning activities a trainee should undergo.</SPAN>]]></q_question>
<q_choice_variants>
<item>
<q_variant><![CDATA[<P><SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Lesson Plan</SPAN></P>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<P><SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">session plan</SPAN></P>]]></q_variant>
<q_right>yes</q_right>
</item>
<item>
<q_variant><![CDATA[<P><SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">training activity matrix</SPAN></P>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<P><SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">workshop layout</SPAN></P>]]></q_variant>
<q_right>no</q_right>
</item>
</q_choice_variants>
<q_select_variants></q_select_variants>
<q_shuffle>yes</q_shuffle>
<q_range_variants></q_range_variants>
<q_numeric_variants></q_numeric_variants>
<q_text_variants></q_text_variants>
<q_showq>yes</q_showq>
<q_oto_variants></q_oto_variants>
<q_image></q_image>
<q_att_auto>no</q_att_auto>
<q_attempts>1</q_attempts>
<q_timer_switch>yes</q_timer_switch>
<q_timer>60</q_timer>
<q_skip>no</q_skip>
<q_skipper1>no</q_skipper1>
<q_skipper2>yes</q_skipper2>
<q_weight>1</q_weight>
<q_pointset_fixed>yes</q_pointset_fixed>
<q_pointset_auto>no</q_pointset_auto>
<q_scoreboards>
<item>
<q_board>total</q_board>
</item>
</q_scoreboards>
<q_fb_switch>yes</q_fb_switch>
<q_feedbackright><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Correct</SPAN>]]></q_feedbackright>
<q_feedbackwrong><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect</SPAN>]]></q_feedbackwrong>
<q_feedbackexhausted><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect. No more attempts.</SPAN>]]></q_feedbackexhausted>
<q_feedbacktimeout><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Time is out.</SPAN>]]></q_feedbacktimeout>
<q_feedbackleft>100</q_feedbackleft>
<q_feedbacktop>50</q_feedbacktop>
</item>
<item>
<q_type>choice</q_type>
<q_question><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">
<P style="TEXT-INDENT: 0in; MARGIN: 0in 0in 6pt; mso-list: none; mso-add-space: auto" class=TESTITEMCBLM><SPAN style="mso-ansi-language: FIL-PH; mso-fareast-language: FIL-PH"><FONT size=3 face="Bookman Old Style"><SPAN style="FONT-FAMILY: Arial; FONT-SIZE: 22px">A trainee who perceive information concretely and process it actively and by trial and error.</SPAN></FONT></SPAN><o:p></o:p></P></SPAN>]]></q_question>
<q_choice_variants>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">
<P style="MARGIN: 0in 0in 6pt" class=CHOICES><SPAN style="mso-ansi-language: EN-PH" lang=EN-PH><FONT size=3><FONT face="Bookman Old Style"><SPAN style="FONT-FAMILY: Arial; FONT-SIZE: 22px">Activist</FONT></FONT></SPAN></SPAN></P></SPAN>]]></q_variant>
<q_right>yes</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">
<P style="MARGIN: 0in 0in 6pt" class=CHOICES><SPAN style="mso-ansi-language: EN-PH" lang=EN-PH><FONT size=3><FONT face="Bookman Old Style"><SPAN style="FONT-FAMILY: Arial; FONT-SIZE: 22px">Pragmatist</FONT></FONT></SPAN></SPAN></P></SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">
<P style="MARGIN: 0in 0in 6pt" class=CHOICES><SPAN style="mso-ansi-language: EN-PH" lang=EN-PH><FONT size=3><FONT face="Bookman Old Style"><SPAN style="FONT-FAMILY: Arial; FONT-SIZE: 22px">Reflector</FONT></FONT></SPAN></SPAN></P></SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">
<P style="MARGIN: 0in 0in 6pt" class=CHOICES><SPAN style="mso-ansi-language: EN-PH" lang=EN-PH><FONT size=3><FONT face="Bookman Old Style"><SPAN style="FONT-FAMILY: Arial">Theorist</SPAN></FONT></FONT></SPAN></P></SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
</q_choice_variants>
<q_select_variants></q_select_variants>
<q_shuffle>yes</q_shuffle>
<q_range_variants></q_range_variants>
<q_numeric_variants></q_numeric_variants>
<q_text_variants></q_text_variants>
<q_showq>yes</q_showq>
<q_oto_variants></q_oto_variants>
<q_image></q_image>
<q_att_auto>no</q_att_auto>
<q_attempts>1</q_attempts>
<q_timer_switch>yes</q_timer_switch>
<q_timer>60</q_timer>
<q_skip>no</q_skip>
<q_skipper1>no</q_skipper1>
<q_skipper2>yes</q_skipper2>
<q_weight>1</q_weight>
<q_pointset_fixed>yes</q_pointset_fixed>
<q_pointset_auto>no</q_pointset_auto>
<q_scoreboards>
<item>
<q_board>total</q_board>
</item>
</q_scoreboards>
<q_fb_switch>yes</q_fb_switch>
<q_feedbackright><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Correct</SPAN>]]></q_feedbackright>
<q_feedbackwrong><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect</SPAN>]]></q_feedbackwrong>
<q_feedbackexhausted><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect. No more attempts.</SPAN>]]></q_feedbackexhausted>
<q_feedbacktimeout><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Time is out.</SPAN>]]></q_feedbacktimeout>
<q_feedbackleft>100</q_feedbackleft>
<q_feedbacktop>50</q_feedbacktop>
</item>
<item>
<q_type>choice</q_type>
<q_question><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">The&nbsp;competency-based workshop component that enables learning provision outside the training institution is the</SPAN>]]></q_question>
<q_choice_variants>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Computer laboratory</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Distance Learning Area</SPAN>]]></q_variant>
<q_right>yes</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Learning Resource Area</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Support Service Area</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
</q_choice_variants>
<q_select_variants></q_select_variants>
<q_shuffle>yes</q_shuffle>
<q_range_variants></q_range_variants>
<q_numeric_variants></q_numeric_variants>
<q_text_variants></q_text_variants>
<q_showq>yes</q_showq>
<q_oto_variants></q_oto_variants>
<q_image></q_image>
<q_att_auto>no</q_att_auto>
<q_attempts>1</q_attempts>
<q_timer_switch>yes</q_timer_switch>
<q_timer>60</q_timer>
<q_skip>no</q_skip>
<q_skipper1>no</q_skipper1>
<q_skipper2>yes</q_skipper2>
<q_weight>1</q_weight>
<q_pointset_fixed>yes</q_pointset_fixed>
<q_pointset_auto>no</q_pointset_auto>
<q_scoreboards>
<item>
<q_board>total</q_board>
</item>
</q_scoreboards>
<q_fb_switch>yes</q_fb_switch>
<q_feedbackright><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Correct</SPAN>]]></q_feedbackright>
<q_feedbackwrong><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect</SPAN>]]></q_feedbackwrong>
<q_feedbackexhausted><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect. No more attempts.</SPAN>]]></q_feedbackexhausted>
<q_feedbacktimeout><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Time is out.</SPAN>]]></q_feedbacktimeout>
<q_feedbackleft>100</q_feedbackleft>
<q_feedbacktop>50</q_feedbacktop>
</item>
<item>
<q_type>choice</q_type>
<q_question><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">This area provides the learner with the knowledge requirements in the various modules responding to the competencies.</SPAN>]]></q_question>
<q_choice_variants>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Computer Laboratory</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Contextual Learning Area</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Learning Resource Area</SPAN>]]></q_variant>
<q_right>yes</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Trainers Resource Area</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
</q_choice_variants>
<q_select_variants></q_select_variants>
<q_shuffle>yes</q_shuffle>
<q_range_variants></q_range_variants>
<q_numeric_variants></q_numeric_variants>
<q_text_variants></q_text_variants>
<q_showq>yes</q_showq>
<q_oto_variants></q_oto_variants>
<q_image></q_image>
<q_att_auto>no</q_att_auto>
<q_attempts>1</q_attempts>
<q_timer_switch>yes</q_timer_switch>
<q_timer>60</q_timer>
<q_skip>no</q_skip>
<q_skipper1>no</q_skipper1>
<q_skipper2>yes</q_skipper2>
<q_weight>1</q_weight>
<q_pointset_fixed>yes</q_pointset_fixed>
<q_pointset_auto>no</q_pointset_auto>
<q_scoreboards>
<item>
<q_board>total</q_board>
</item>
</q_scoreboards>
<q_fb_switch>yes</q_fb_switch>
<q_feedbackright><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Correct</SPAN>]]></q_feedbackright>
<q_feedbackwrong><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect</SPAN>]]></q_feedbackwrong>
<q_feedbackexhausted><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect. No more attempts.</SPAN>]]></q_feedbackexhausted>
<q_feedbacktimeout><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Time is out.</SPAN>]]></q_feedbacktimeout>
<q_feedbackleft>100</q_feedbackleft>
<q_feedbacktop>50</q_feedbacktop>
</item>
<item>
<q_type>choice</q_type>
<q_question><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">The area where in the learners acquires the skills and knowledge components of the competencies prescribed by the standard.</SPAN>]]></q_question>
<q_choice_variants>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Contextual Learning Area</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Learning Resource Area</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Trainers Resource Area</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 12px"><SPAN style="FONT-SIZE: 22px">Practical Work Area </SPAN></SPAN>]]></q_variant>
<q_right>yes</q_right>
</item>
</q_choice_variants>
<q_select_variants></q_select_variants>
<q_shuffle>yes</q_shuffle>
<q_range_variants></q_range_variants>
<q_numeric_variants></q_numeric_variants>
<q_text_variants></q_text_variants>
<q_showq>yes</q_showq>
<q_oto_variants></q_oto_variants>
<q_image></q_image>
<q_att_auto>no</q_att_auto>
<q_attempts>1</q_attempts>
<q_timer_switch>yes</q_timer_switch>
<q_timer>60</q_timer>
<q_skip>no</q_skip>
<q_skipper1>no</q_skipper1>
<q_skipper2>yes</q_skipper2>
<q_weight>1</q_weight>
<q_pointset_fixed>yes</q_pointset_fixed>
<q_pointset_auto>no</q_pointset_auto>
<q_scoreboards>
<item>
<q_board>total</q_board>
</item>
</q_scoreboards>
<q_fb_switch>yes</q_fb_switch>
<q_feedbackright><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Correct</SPAN>]]></q_feedbackright>
<q_feedbackwrong><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect</SPAN>]]></q_feedbackwrong>
<q_feedbackexhausted><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect. No more attempts.</SPAN>]]></q_feedbackexhausted>
<q_feedbacktimeout><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Time is out.</SPAN>]]></q_feedbacktimeout>
<q_feedbackleft>100</q_feedbackleft>
<q_feedbacktop>50</q_feedbacktop>
</item>
<item>
<q_type>choice</q_type>
<q_question><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">This area provides the mechanism for assessing the completion of competencies of a learner.</SPAN>]]></q_question>
<q_choice_variants>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Computer Laboratory Area</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Institutional Assessment Area</SPAN>]]></q_variant>
<q_right>yes</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">&nbsp;Quality Control Area</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Support Service Area</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
</q_choice_variants>
<q_select_variants></q_select_variants>
<q_shuffle>yes</q_shuffle>
<q_range_variants></q_range_variants>
<q_numeric_variants></q_numeric_variants>
<q_text_variants></q_text_variants>
<q_showq>yes</q_showq>
<q_oto_variants></q_oto_variants>
<q_image></q_image>
<q_att_auto>no</q_att_auto>
<q_attempts>1</q_attempts>
<q_timer_switch>yes</q_timer_switch>
<q_timer>60</q_timer>
<q_skip>no</q_skip>
<q_skipper1>no</q_skipper1>
<q_skipper2>yes</q_skipper2>
<q_weight>1</q_weight>
<q_pointset_fixed>yes</q_pointset_fixed>
<q_pointset_auto>no</q_pointset_auto>
<q_scoreboards>
<item>
<q_board>total</q_board>
</item>
</q_scoreboards>
<q_fb_switch>yes</q_fb_switch>
<q_feedbackright><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Correct</SPAN>]]></q_feedbackright>
<q_feedbackwrong><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect</SPAN>]]></q_feedbackwrong>
<q_feedbackexhausted><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect. No more attempts.</SPAN>]]></q_feedbackexhausted>
<q_feedbacktimeout><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Time is out.</SPAN>]]></q_feedbacktimeout>
<q_feedbackleft>100</q_feedbackleft>
<q_feedbacktop>50</q_feedbacktop>
</item>
<item>
<q_type>choice</q_type>
<q_question><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">This area ensures that the underpinning knowledge, the science, mathematic and communication principles as applied to the technology are provided to the learner.</SPAN>]]></q_question>
<q_choice_variants>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Contextual Learning Area</SPAN>]]></q_variant>
<q_right>yes</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Learning Resource Area</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">Trainers Resource Area</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 12px"><SPAN style="FONT-SIZE: 22px">Support Service Area</SPAN></SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
</q_choice_variants>
<q_select_variants></q_select_variants>
<q_shuffle>yes</q_shuffle>
<q_range_variants></q_range_variants>
<q_numeric_variants></q_numeric_variants>
<q_text_variants></q_text_variants>
<q_showq>yes</q_showq>
<q_oto_variants></q_oto_variants>
<q_image></q_image>
<q_att_auto>no</q_att_auto>
<q_attempts>1</q_attempts>
<q_timer_switch>yes</q_timer_switch>
<q_timer>60</q_timer>
<q_skip>no</q_skip>
<q_skipper1>no</q_skipper1>
<q_skipper2>yes</q_skipper2>
<q_weight>1</q_weight>
<q_pointset_fixed>yes</q_pointset_fixed>
<q_pointset_auto>no</q_pointset_auto>
<q_scoreboards>
<item>
<q_board>total</q_board>
</item>
</q_scoreboards>
<q_fb_switch>yes</q_fb_switch>
<q_feedbackright><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Correct</SPAN>]]></q_feedbackright>
<q_feedbackwrong><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect</SPAN>]]></q_feedbackwrong>
<q_feedbackexhausted><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect. No more attempts.</SPAN>]]></q_feedbackexhausted>
<q_feedbacktimeout><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Time is out.</SPAN>]]></q_feedbacktimeout>
<q_feedbackleft>100</q_feedbackleft>
<q_feedbacktop>50</q_feedbacktop>
</item>
<item>
<q_type>choice</q_type>
<q_question><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">A training method wherein pairs or small groups are given orally or in writing a specific situation, event, or incident and asked to analyse and solve it.</SPAN>]]></q_question>
<q_choice_variants>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">case study</SPAN>]]></q_variant>
<q_right>yes</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">demonstration method</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">discussion method</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">&nbsp;lecture method</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
</q_choice_variants>
<q_select_variants></q_select_variants>
<q_shuffle>yes</q_shuffle>
<q_range_variants></q_range_variants>
<q_numeric_variants></q_numeric_variants>
<q_text_variants></q_text_variants>
<q_showq>yes</q_showq>
<q_oto_variants></q_oto_variants>
<q_image></q_image>
<q_att_auto>no</q_att_auto>
<q_attempts>1</q_attempts>
<q_timer_switch>yes</q_timer_switch>
<q_timer>60</q_timer>
<q_skip>no</q_skip>
<q_skipper1>no</q_skipper1>
<q_skipper2>yes</q_skipper2>
<q_weight>1</q_weight>
<q_pointset_fixed>yes</q_pointset_fixed>
<q_pointset_auto>no</q_pointset_auto>
<q_scoreboards>
<item>
<q_board>total</q_board>
</item>
</q_scoreboards>
<q_fb_switch>yes</q_fb_switch>
<q_feedbackright><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Correct</SPAN>]]></q_feedbackright>
<q_feedbackwrong><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect</SPAN>]]></q_feedbackwrong>
<q_feedbackexhausted><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect. No more attempts.</SPAN>]]></q_feedbackexhausted>
<q_feedbacktimeout><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Time is out.</SPAN>]]></q_feedbacktimeout>
<q_feedbackleft>100</q_feedbackleft>
<q_feedbacktop>50</q_feedbacktop>
</item>
<item>
<q_type>choice</q_type>
<q_question><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">A training method that can help participants improve skills, attitudes, and perceptions in real situations.</SPAN>]]></q_question>
<q_choice_variants>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">demonstration method</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 12px"><SPAN style="FONT-SIZE: 22px">discussion method</SPAN></SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">lecture method</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 12px">&nbsp;<SPAN style="FONT-SIZE: 22px">role playing</SPAN></SPAN>]]></q_variant>
<q_right>yes</q_right>
</item>
</q_choice_variants>
<q_select_variants></q_select_variants>
<q_shuffle>yes</q_shuffle>
<q_range_variants></q_range_variants>
<q_numeric_variants></q_numeric_variants>
<q_text_variants></q_text_variants>
<q_showq>yes</q_showq>
<q_oto_variants></q_oto_variants>
<q_image></q_image>
<q_att_auto>no</q_att_auto>
<q_attempts>1</q_attempts>
<q_timer_switch>yes</q_timer_switch>
<q_timer>60</q_timer>
<q_skip>no</q_skip>
<q_skipper1>no</q_skipper1>
<q_skipper2>yes</q_skipper2>
<q_weight>1</q_weight>
<q_pointset_fixed>yes</q_pointset_fixed>
<q_pointset_auto>no</q_pointset_auto>
<q_scoreboards>
<item>
<q_board>total</q_board>
</item>
</q_scoreboards>
<q_fb_switch>yes</q_fb_switch>
<q_feedbackright><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Correct</SPAN>]]></q_feedbackright>
<q_feedbackwrong><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect</SPAN>]]></q_feedbackwrong>
<q_feedbackexhausted><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect. No more attempts.</SPAN>]]></q_feedbackexhausted>
<q_feedbacktimeout><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Time is out.</SPAN>]]></q_feedbacktimeout>
<q_feedbackleft>100</q_feedbackleft>
<q_feedbacktop>50</q_feedbacktop>
</item>
<item>
<q_type>choice</q_type>
<q_question><![CDATA[<P><SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">In the hierarchy of learning, which of the following is the simplest?</SPAN></P>]]></q_question>
<q_choice_variants>
<item>
<q_variant><![CDATA[<P><SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">attitudes</SPAN></P>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<P><SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">cognitive strategies</SPAN></P>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<P><SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 12px"><SPAN style="FONT-SIZE: 22px">intellectual skills</SPAN></SPAN></P>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<P><SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">verbal information</SPAN></P>]]></q_variant>
<q_right>yes</q_right>
</item>
</q_choice_variants>
<q_select_variants></q_select_variants>
<q_shuffle>yes</q_shuffle>
<q_range_variants></q_range_variants>
<q_numeric_variants></q_numeric_variants>
<q_text_variants></q_text_variants>
<q_showq>yes</q_showq>
<q_oto_variants></q_oto_variants>
<q_image></q_image>
<q_att_auto>no</q_att_auto>
<q_attempts>1</q_attempts>
<q_timer_switch>yes</q_timer_switch>
<q_timer>60</q_timer>
<q_skip>no</q_skip>
<q_skipper1>no</q_skipper1>
<q_skipper2>yes</q_skipper2>
<q_weight>1</q_weight>
<q_pointset_fixed>yes</q_pointset_fixed>
<q_pointset_auto>no</q_pointset_auto>
<q_scoreboards>
<item>
<q_board>total</q_board>
</item>
</q_scoreboards>
<q_fb_switch>yes</q_fb_switch>
<q_feedbackright><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Correct</SPAN>]]></q_feedbackright>
<q_feedbackwrong><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect</SPAN>]]></q_feedbackwrong>
<q_feedbackexhausted><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect. No more attempts.</SPAN>]]></q_feedbackexhausted>
<q_feedbacktimeout><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Time is out.</SPAN>]]></q_feedbacktimeout>
<q_feedbackleft>100</q_feedbackleft>
<q_feedbacktop>50</q_feedbacktop>
</item>
<item>
<q_type>choice</q_type>
<q_question><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">CBT allows for multiple entry and multiple exit, this means that ______________.</SPAN>]]></q_question>
<q_choice_variants>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">A trainee can enter the workshop anytime he likes</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">&nbsp;A trainee can be allowed to be absent anytime</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">&nbsp;A trainee may graduate anytime of the year</SPAN>]]></q_variant>
<q_right>yes</q_right>
</item>
<item>
<q_variant><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 22px">A trainee can schedule his training anytime</SPAN>]]></q_variant>
<q_right>no</q_right>
</item>
</q_choice_variants>
<q_select_variants></q_select_variants>
<q_shuffle>yes</q_shuffle>
<q_range_variants></q_range_variants>
<q_numeric_variants></q_numeric_variants>
<q_text_variants></q_text_variants>
<q_showq>yes</q_showq>
<q_oto_variants></q_oto_variants>
<q_image></q_image>
<q_att_auto>no</q_att_auto>
<q_attempts>1</q_attempts>
<q_timer_switch>yes</q_timer_switch>
<q_timer>60</q_timer>
<q_skip>no</q_skip>
<q_skipper1>no</q_skipper1>
<q_skipper2>yes</q_skipper2>
<q_weight>1</q_weight>
<q_pointset_fixed>yes</q_pointset_fixed>
<q_pointset_auto>no</q_pointset_auto>
<q_scoreboards>
<item>
<q_board>total</q_board>
</item>
</q_scoreboards>
<q_fb_switch>yes</q_fb_switch>
<q_feedbackright><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Correct</SPAN>]]></q_feedbackright>
<q_feedbackwrong><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect</SPAN>]]></q_feedbackwrong>
<q_feedbackexhausted><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect. No more attempts.</SPAN>]]></q_feedbackexhausted>
<q_feedbacktimeout><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Time is out.</SPAN>]]></q_feedbacktimeout>
<q_feedbackleft>100</q_feedbackleft>
<q_feedbacktop>50</q_feedbacktop>
</item>
</q_questions>
<test_scored>yes</test_scored>
<test_q_timer_switch>yes</test_q_timer_switch>
<test_timer_switch>no</test_timer_switch>
<test_timer></test_timer>
<test_timer_s>30</test_timer_s>
<repeat_test>no</repeat_test>
<qtiimages>no</qtiimages>
<test_showright>no</test_showright>
<test_fb_switch>no</test_fb_switch>
<test_feedbackright><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Correct</SPAN>]]></test_feedbackright>
<test_feedbackwrong><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect</SPAN>]]></test_feedbackwrong>
<test_feedbackexhausted><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Incorrect. No more attempts.</SPAN>]]></test_feedbackexhausted>
<test_feedbacktimeout><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Time is out.</SPAN>]]></test_feedbacktimeout>
<test_feedbackleft>100</test_feedbackleft>
<test_feedbacktop>50</test_feedbacktop>
<test_fb_timerswitch>yes</test_fb_timerswitch>
<test_fb_timer>3</test_fb_timer>
<q_realskin>basic</q_realskin>
<q_skin>lightblue</q_skin>
<input_border_style>double</input_border_style>
<input_border_width>2</input_border_width>
<input_bg_color>#FFFFFF</input_bg_color>
<input_font>Arial</input_font>
<input_font_size>12</input_font_size>
<input_font_color>#000000</input_font_color>
<q_targetwidth>250</q_targetwidth>
<q_bulletwidth>350</q_bulletwidth>
<q_goal_right>CORRECT ANSWER</q_goal_right>
<q_goal_last>LAST QUESTION STATE</q_goal_last>
<q_goal_skip>QUESTION IS SKIPPED</q_goal_skip>
<q_goal_failed>QUESTION IS SKIPPED AND FAILED</q_goal_failed>
<t_continue_alert>Continued approach. Starting from first unanswered question.</t_continue_alert>
<t_browse_alert>Test is already answered. Recurring approach is not allowed.</t_browse_alert>
<t_secondrun_confirm>This test is already answered. Press OK to clear stored results and start new approach. Press Cancel otherwise.</t_secondrun_confirm>
<q_skip_confirm>Skipped question will be evaluated as failed. Are you sure?</q_skip_confirm>
<q_replay_confirm>There are unanswered questions. Continue?</q_replay_confirm>
<q_input_alert>Please enter only numbers and signs</q_input_alert>
<q_goal_choice>Select correct variant</q_goal_choice>
<q_goal_select>Select all correct variants</q_goal_select>
<q_goal_range>Place variants in correct order</q_goal_range>
<q_goal_numeric>Enter numeric value</q_goal_numeric>
<q_goal_text>Enter text string</q_goal_text>
<q_goal_oto>Connect pairs to match correctly</q_goal_oto>
<q_attempts_msg>Attempts:</q_attempts_msg>
<q_scored_msg>Credited:</q_scored_msg>
<q_notscored_msg>Not credited:</q_notscored_msg>
<q_question_msg>question</q_question_msg>
<q_from_msg>from</q_from_msg>
<q_timer_msg>Question time limit:</q_timer_msg>
<t_timer_msg>Test time limit:</t_timer_msg>
<t_stop_msg>Test is stopped</t_stop_msg>
<t_allanswered_msg>All questions are answered</t_allanswered_msg>
<t_nomoreanswered_msg>No more answered questions</t_nomoreanswered_msg>
<q_defaultbutton>yes</q_defaultbutton>
<q_abtn_0></q_abtn_0>
<q_abtn_1></q_abtn_1>
<q_sbtn_0></q_sbtn_0>
<q_sbtn_1></q_sbtn_1>
<q_nbtn_0></q_nbtn_0>
<q_nbtn_1></q_nbtn_1>
<q_abtn_tooltip>Submit answer</q_abtn_tooltip>
<q_sbtn_tooltip>Skip question</q_sbtn_tooltip>
<q_nbtn_tooltip>Next question</q_nbtn_tooltip>
<q_defaultspot>yes</q_defaultspot>
<q_choicespot_0></q_choicespot_0>
<q_choicespot_1></q_choicespot_1>
<q_selectspot_0></q_selectspot_0>
<q_selectspot_1></q_selectspot_1>
<q_rangespot_up_0></q_rangespot_up_0>
<q_rangespot_up_1></q_rangespot_up_1>
<q_rangespot_down_0></q_rangespot_down_0>
<q_rangespot_down_1></q_rangespot_down_1>
</param>
<param objectid="OBJ_18">
<q_board>total</q_board>
<q_curpoints>yes</q_curpoints>
<q_cpoints><![CDATA[<SPAN style="FONT-FAMILY: Arial; COLOR: #000000; FONT-SIZE: 24px"><B>Current score</B></SPAN>]]></q_cpoints>
<q_maxpoints>no</q_maxpoints>
<q_mpoints><![CDATA[<SPAN style="FONT-FAMILY: Arial;FONT-SIZE: 12px;COLOR: #000000">Maximal score</SPAN>]]></q_mpoints>
<q_normalize>no</q_normalize>
<borcolor>#99CCFF</borcolor>
<bgcolor>#FFFFFF</bgcolor>
<r_font>Verdana</r_font>
<r_font_size>22</r_font_size>
<r_font_weight>bold</r_font_weight>
<r_font_color>#000000</r_font_color>
</param>
<param objectid="OBJ_10">
<q_board>total</q_board>
<q_curpoints>yes</q_curpoints>
<q_cpoints><![CDATA[<P><SPAN style="FONT-FAMILY: Verdana; COLOR: #000000; FONT-SIZE: 22px"><B>SCORE</B></SPAN></P>]]></q_cpoints>
<q_maxpoints>no</q_maxpoints>
<q_mpoints><![CDATA[<SPAN style="FONT-FAMILY: Verdana;FONT-SIZE: 22px;COLOR: #000000">Maximal score</SPAN>]]></q_mpoints>
<q_normalize>no</q_normalize>
<borcolor>#99CCFF</borcolor>
<bgcolor>#FFFFFF</bgcolor>
<r_font>Verdana</r_font>
<r_font_size>22</r_font_size>
<r_font_weight>normal</r_font_weight>
<r_font_color>#000000</r_font_color>
</param>
<param objectid="OBJ_11">
<q_board>total</q_board>
<q_curpoints>yes</q_curpoints>
<q_cpoints><![CDATA[<P><SPAN style="FONT-FAMILY: Verdana; COLOR: #000000; FONT-SIZE: 22px"><B>SCORE</B></SPAN></P>]]></q_cpoints>
<q_maxpoints>no</q_maxpoints>
<q_mpoints><![CDATA[<SPAN style="FONT-FAMILY: Verdana;FONT-SIZE: 22px;COLOR: #000000">Maximal score</SPAN>]]></q_mpoints>
<q_normalize>no</q_normalize>
<borcolor>#99CCFF</borcolor>
<bgcolor>#FFFFFF</bgcolor>
<r_font>Verdana</r_font>
<r_font_size>22</r_font_size>
<r_font_weight>normal</r_font_weight>
<r_font_color>#000000</r_font_color>
</param>
</params>
<objectives>
<objective module="yes" id="total" name="This is automatically created module objective." cs="i" ss="u" scoremax="100" scoremin="0"/>
</objectives>
<runtimechecks>
</runtimechecks>
</module>
